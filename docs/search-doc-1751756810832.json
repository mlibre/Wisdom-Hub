[{"title":"Learn AI","type":0,"sectionRef":"#","url":"/Wisdom-Hub/ai/","content":"","keywords":"","version":null},{"title":"Tutorials​","type":1,"pageTitle":"Learn AI","url":"/Wisdom-Hub/ai/#tutorials","content":"This repository is organized into several sections, each containing tutorials for specific topics. Here's a brief overview: Python For AiGeneartive AIPromptLangchainOllamaChat UIs ","version":null,"tagName":"h2"},{"title":"My ETH Address​","type":1,"pageTitle":"Learn AI","url":"/Wisdom-Hub/ai/#my-eth-address","content":"0xc9b64496986E7b6D4A68fDF69eF132A35e91838e ","version":null,"tagName":"h2"},{"title":"Geenrative AI","type":0,"sectionRef":"#","url":"/Wisdom-Hub/ai/generative-ai","content":"","keywords":"","version":null},{"title":"How do large language models work?​","type":1,"pageTitle":"Geenrative AI","url":"/Wisdom-Hub/ai/generative-ai#how-do-large-language-models-work","content":"","version":null,"tagName":"h2"},{"title":"Tokenizer, text to numbers​","type":1,"pageTitle":"Geenrative AI","url":"/Wisdom-Hub/ai/generative-ai#tokenizer-text-to-numbers","content":"Large Language Models receive a text as input and generate a text as output. However, being statistical models, they work much better with numbers than text sequences. That’s why every input to the model is processed by a tokenizer, before being used by the core model. A token is a chunk of text – consisting of a variable number of characters, so the tokenizer's main task is splitting the input into an array of tokens. Then, each token is mapped with a token index, which is the integer encoding of the original text chunk.  ","version":null,"tagName":"h3"},{"title":"Predicting output tokens​","type":1,"pageTitle":"Geenrative AI","url":"/Wisdom-Hub/ai/generative-ai#predicting-output-tokens","content":"Given n tokens as input (with max n varying from one model to another), the model is able to predict one token as output. This token is then incorporated into the input of the next iteration, in an expanding window pattern ","version":null,"tagName":"h3"},{"title":"Selection process, probability distribution​","type":1,"pageTitle":"Geenrative AI","url":"/Wisdom-Hub/ai/generative-ai#selection-process-probability-distribution","content":"The output token is chosen by the model according to its probability of occurring after the current text sequence ","version":null,"tagName":"h3"},{"title":"Foundation Models versus LLMs​","type":1,"pageTitle":"Geenrative AI","url":"/Wisdom-Hub/ai/generative-ai#foundation-models-versus-llms","content":"The term Foundation Model was coined by Stanford researchers and defined as an AI model that follows some criteria, such as: They are trained using unsupervised learning or self-supervised learning, meaning they are trained on unlabeled multi-modal data, and they do not require human annotation or labeling of data for their training process.They are very large models, based on very deep neural networks trained on billions of parameters.They are normally intended to serve as a foundation for other models, meaning they can be used as a starting point for other models to be built on top of, which can be done by fine-tuning.  ","version":null,"tagName":"h2"},{"title":"References​","type":1,"pageTitle":"Geenrative AI","url":"/Wisdom-Hub/ai/generative-ai#references","content":"https://microsoft.github.io/generative-ai-for-beginners/ ","version":null,"tagName":"h2"},{"title":"Langchain","type":0,"sectionRef":"#","url":"/Wisdom-Hub/ai/langchain","content":"","keywords":"","version":null},{"title":"Install​","type":1,"pageTitle":"Langchain","url":"/Wisdom-Hub/ai/langchain#install","content":"python -m venv .venv source .venv/bin/activate pip install --upgrade pip pip install langchain pip install langchain[llms] pip install langchain[all] pip install huggingface_hub  ","version":null,"tagName":"h2"},{"title":"Simple huggingface example​","type":1,"pageTitle":"Langchain","url":"/Wisdom-Hub/ai/langchain#simple-huggingface-example","content":"from langchain.llms import HuggingFaceHub from langchain import PromptTemplate, LLMChain import os os.environ[&quot;HUGGINGFACEHUB_API_TOKEN&quot;] = &quot;hf_n&quot; template = &quot;&quot;&quot;Question: {question} Answer: Let's think step by step.&quot;&quot;&quot; prompt = PromptTemplate(template=template, input_variables=[&quot;question&quot;]) repo_id = &quot;tiiuae/falcon-40b&quot; llm = HuggingFaceHub( repo_id=repo_id, model_kwargs={&quot;temperature&quot;: 0.5, &quot;max_length&quot;: 64} ) question = &quot;Who won the FIFA World Cup in the year 1994? &quot; llm_chain = LLMChain(prompt=prompt, llm=llm) print(llm_chain.run(question)) print(&quot;done&quot;)  ","version":null,"tagName":"h2"},{"title":"References​","type":1,"pageTitle":"Langchain","url":"/Wisdom-Hub/ai/langchain#references","content":"https://python.langchain.com/docs/get_started/introduction.htmlhttps://github.com/langchain-ai/langchain ","version":null,"tagName":"h2"},{"title":"Prompt","type":0,"sectionRef":"#","url":"/Wisdom-Hub/ai/prompt","content":"","keywords":"","version":null},{"title":"Types of prompts​","type":1,"pageTitle":"Prompt","url":"/Wisdom-Hub/ai/prompt#types-of-prompts","content":"","version":null,"tagName":"h2"},{"title":"Zero-shot prompting​","type":1,"pageTitle":"Prompt","url":"/Wisdom-Hub/ai/prompt#zero-shot-prompting","content":"Prompt: &quot;What is Algebra?&quot;Answer: &quot;Algebra is a branch of mathematics that studies mathematical symbols and the rules for manipulating these symbols.&quot; ","version":null,"tagName":"h3"},{"title":"Few-shot prompting​","type":1,"pageTitle":"Prompt","url":"/Wisdom-Hub/ai/prompt#few-shot-prompting","content":"Prompt: &quot;Write a poem in the style of Shakespeare. Here are a few examples of Shakespearean sonnets.: Sonnet 18: 'Shall I compare thee to a summer's day? Thou art more lovely and more temperate...' Sonnet 116: 'Let me not to the marriage of true minds Admit impediments. Love is not love Which alters when it alteration finds...' Sonnet 132: 'Thine eyes I love, and they, as pitying me, Knowing thy heart torment me with disdain,...' Now, write a sonnet about the beauty of the moon.&quot;Answer: &quot;Upon the sky, the moon doth softly gleam, In silv'ry light that casts its gentle grace,...&quot; ","version":null,"tagName":"h3"},{"title":"Chain-of-thought prompting​","type":1,"pageTitle":"Prompt","url":"/Wisdom-Hub/ai/prompt#chain-of-thought-prompting","content":"Prompt: &quot;Lisa has 7 apples, throws 1 apple, gives 4 apples to Bart and Bart gives one back: 7 -1 = 6 6 -4 = 2 2 +1 = 3 Alice has 5 apples, throws 3 apples, gives 2 to Bob and Bob gives one back, how many apples does Alice have?&quot;Answer: 1 ","version":null,"tagName":"h3"},{"title":"Least-to-most prompting​","type":1,"pageTitle":"Prompt","url":"/Wisdom-Hub/ai/prompt#least-to-most-prompting","content":"Prompt: How to perform data science in 5 steps? Answer: Collect dataClean dataAnalyze dataPlot dataPresent data ","version":null,"tagName":"h3"},{"title":"Temperature​","type":1,"pageTitle":"Prompt","url":"/Wisdom-Hub/ai/prompt#temperature","content":"Use temperature to vary your output allows you to introduce randomness and creativity. Temperature is a value between 0 and 1, where 0 is the most deterministic and 1 is the most varied. ","version":null,"tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"Prompt","url":"/Wisdom-Hub/ai/prompt#examples","content":"","version":null,"tagName":"h2"},{"title":"Markdown table of Linux commands​","type":1,"pageTitle":"Prompt","url":"/Wisdom-Hub/ai/prompt#markdown-table-of-linux-commands","content":"Please provide a Markdown table with centered text alignment that lists the following Linux commands, their short descriptions and examples: &quot;free&quot;, &quot;uptime&quot; The table has two columns only: 'Command', 'Description'. Make sure examples are real-world examples and are very useful. The table format is: | Command | Description | | :---------------------------------: | :---------: | | `command1` | Description | | `example of command 1` | Description | | `advance example of command 1` | Description | | `very advance example of command 1` | Description | | `command2` | Description | | `example of command 2` | Description | | `advance example of command 2` | Description | | `very advance example of command 2` | Description |  ","version":null,"tagName":"h3"},{"title":"Rewriting artiicle​","type":1,"pageTitle":"Prompt","url":"/Wisdom-Hub/ai/prompt#rewriting-artiicle","content":"I've written an article that needs improvement. I'm looking for help with: Revising article structure and headingsCorrecting typos and English grammarRefining content and factsReviewing naming issues Please assist in enhancing my markdown article. ","version":null,"tagName":"h3"},{"title":"Extract important sections from article​","type":1,"pageTitle":"Prompt","url":"/Wisdom-Hub/ai/prompt#extract-important-sections-from-article","content":"Extract only important and technical parts from this article. I don't want a long article with unnecessary, less important information. ","version":null,"tagName":"h3"},{"title":"References​","type":1,"pageTitle":"Prompt","url":"/Wisdom-Hub/ai/prompt#references","content":"https://microsoft.github.io/generative-ai-for-beginners/ ","version":null,"tagName":"h2"},{"title":"Chat Uis","type":0,"sectionRef":"#","url":"/Wisdom-Hub/ai/chat-ui","content":"","keywords":"","version":null},{"title":"Librechat​","type":1,"pageTitle":"Chat Uis","url":"/Wisdom-Hub/ai/chat-ui#librechat","content":"sudo pamac install mongodb-bin sudo systemctl enable mongodb.service sudo systemctl restart mongodb.service mongosh 'mongodb://localhost:27017' sudo pacman -S meilisearch redis sudo systemctl enable redis sudo systemctl restart redis sudo systemctl enable meilisearch sudo systemctl restart meilisearch git clone https://github.com/danny-avila/LibreChat.git --depth=1 cd LibreChat cp .env.example .env nano .env # Comment PLUGIN_MODELS, GOOGLE_API_KEY, openAI and other providers to disable them # you may want to change ENDPOINTS variable and add ollama as well. not necessary RAG_API_URL=http://127.0.0.1:11434/v1/ EMBEDDINGS_PROVIDER=ollama OLLAMA_BASE_URL=http://127.0.0.1:11434/v1/ EMBEDDINGS_MODEL=mxbai-embed-large:latest DEBUG_RAG_API=true mv librechat.example.yaml librechat.yaml custom: - name: &quot;Ollama&quot; apiKey: &quot;ollama&quot; baseURL: &quot;http://127.0.0.1:11434/v1/&quot; # or baseURL: &quot;http://localhost:11434/v1/chat/completions&quot; models: default: [ &quot;llama3.1:8b&quot; ] fetch: true titleConvo: true titleModel: &quot;current_model&quot; fileConfig: endpoints: custom: fileLimit: 5 fileSizeLimit: 10 # Maximum size for an individual file in MB totalSizeLimit: 50 # Maximum total size for all files in a single request in MB supportedMimeTypes: - &quot;image/.*&quot; - &quot;application/pdf&quot; - &quot;application/text&quot; - &quot;application/x-sh&quot; - &quot;application/json&quot; - &quot;application/javascript&quot; - &quot;application/x-yaml&quot; - &quot;application/x-shellscript&quot; - &quot;application/text-plain&quot; - &quot;text/plain&quot; default: totalSizeLimit: 20 supportedMimeTypes: - &quot;image/.*&quot; - &quot;application/pdf&quot; - &quot;application/text&quot; - &quot;application/x-sh&quot; - &quot;application/json&quot; - &quot;application/javascript&quot; - &quot;application/x-yaml&quot; - &quot;application/x-shellscript&quot; - &quot;application/text-plain&quot; - &quot;text/plain&quot; serverFileSizeLimit: 100 # Global server file size limit in MB avatarSizeLimit: 2 # Limit for user avatar image size in MB # local rag still need wokr https://github.com/danny-avila/LibreChat/discussions/3293 npm ci npm run frontend npm run backend  https://github.com/mckaywrigley/chatbot-ui​ https://github.com/open-webui/open-webui​ https://github.com/huggingface/chat-ui​ https://github.com/nomic-ai/gpt4all​ ","version":null,"tagName":"h2"},{"title":"LobeChat​","type":1,"pageTitle":"Chat Uis","url":"/Wisdom-Hub/ai/chat-ui#lobechat","content":"curl -fsSL https://ollama.com/install.sh | sh sudo systemctl enable ollama.service ollama pull llama2 curl -fsSL https://get.pnpm.io/install.sh | sh - git --depth 1 clone https://github.com/lobehub/lobe-chat.git # git fetch --unshallow # git pull --all cd lobe-chat pnpm install mv .env.example .env OLLAMA_PROXY_URL=http://127.0.0.1:11434/v1 OLLAMA_MODEL_LIST=llama2 pnpm dev  ","version":null,"tagName":"h2"},{"title":"Learn Blockchain","type":0,"sectionRef":"#","url":"/Wisdom-Hub/blockchain/","content":"","keywords":"","version":null},{"title":"Tutorials​","type":1,"pageTitle":"Learn Blockchain","url":"/Wisdom-Hub/blockchain/#tutorials","content":"This repository is organized into several sections, each containing tutorials for specific topics. Here's a brief overview: CryptographyBitcoinEthereumHyperledgerLBRYNEARPolygon ","version":null,"tagName":"h2"},{"title":"My ETH Address​","type":1,"pageTitle":"Learn Blockchain","url":"/Wisdom-Hub/blockchain/#my-eth-address","content":"0xc9b64496986E7b6D4A68fDF69eF132A35e91838e ","version":null,"tagName":"h2"},{"title":"vllm","type":0,"sectionRef":"#","url":"/Wisdom-Hub/ai/vllm","content":"","keywords":"","version":null},{"title":"Rocm​","type":1,"pageTitle":"vllm","url":"/Wisdom-Hub/ai/vllm#rocm","content":"","version":null,"tagName":"h2"},{"title":"Install​","type":1,"pageTitle":"vllm","url":"/Wisdom-Hub/ai/vllm#install","content":"sh -c 'echo 0 &gt; /proc/sys/kernel/numa_balancing' cat /proc/sys/kernel/numa_balancing  Using Docker​ sudo pamac pacman -Ss docker containerd sudo usermod -aG docker $USER sudo usermod -aG video,render,docker $(whoami) sudo groupadd -g 2000 vllm sudo useradd -u 2000 -g vllm -m vllm sudo usermod -aG video,render,docker,network vllm sudo mkdir -p /home/vllm/.cache/huggingface sudo chown -R 2000:2000 /home/vllm/.cache sudo chmod -R 777 /home/vllm/.cache sudo mkdir /etc/docker/ sudo bash -c 'cat &gt; /etc/docker/daemon.json &lt;&lt;EOF { &quot;insecure-registries&quot; : [&quot;https://docker.arvancloud.ir&quot;], &quot;registry-mirrors&quot;: [&quot;https://docker.arvancloud.ir&quot;], &quot;features&quot;: { &quot;containerd-snapshotter&quot;: true, &quot;buildkit&quot;: true } } EOF' sudo systemctl enable docker sudo systemctl daemon-reload docker logout sudo systemctl restart docker sudo reboot rocminfo | grep -i gfx nano dockerfile  #FROM rocm/vllm-dev:main FROM rocm/vllm:main # Install development tools RUN apt-get update &amp;&amp; apt-get install -y \\ curl \\ &amp;&amp; rm -rf /var/lib/apt/lists/* # Install dependencies RUN pip3 install --no-cache-dir \\ transformers \\ accelerate \\ safetensors # Create non-root user for security RUN useradd -m -u 2000 vllm WORKDIR /app RUN chown vllm:vllm /app # Switch to non-root user USER vllm  # docker pull docker.arvancloud.ir/rocm/vllm-dev:main docker build -t vllm-toolkit . docker run -it --rm \\ --device=/dev/kfd --device=/dev/dri \\ --group-add=$(getent group video | cut -d: -f3) \\ --group-add=$(getent group render | cut -d: -f3) \\ --ipc=host \\ --network=host \\ --security-opt seccomp=unconfined \\ --security-opt apparmor=unconfined \\ --cap-add=SYS_PTRACE \\ -p 8000:8000 \\ -v /etc/group:/etc/group:ro \\ -v /etc/passwd:/etc/passwd:ro \\ -v /home/vllm/.cache:/home/vllm/.cache \\ -e HF_HOME=/home/vllm/.cache/huggingface \\ --user 2000:2000 \\ -e HSA_OVERRIDE_GFX_VERSION=10.3.0 \\ -e ROC_ENABLE_PRE_VEGA=1 \\ -e VLLM_USE_TRITON_FLASH_ATTN=0 \\ -e TORCH_USE_HIP_DSA=1 \\ -e HIP_VISIBLE_DEVICES=0 \\ -e PYTORCH_ROCM_ARCH=gfx1030 \\ vllm-toolkit vllm serve Qwen/Qwen2.5-1.5B-Instruct  ","version":null,"tagName":"h3"},{"title":"Env config​","type":1,"pageTitle":"vllm","url":"/Wisdom-Hub/ai/vllm#env-config","content":"FlashMLA ","version":null,"tagName":"h2"},{"title":"Cryptography","type":0,"sectionRef":"#","url":"/Wisdom-Hub/blockchain/Cryptography/","content":"","keywords":"","version":null},{"title":"Cryptography In Blockchain​","type":1,"pageTitle":"Cryptography","url":"/Wisdom-Hub/blockchain/Cryptography/#cryptography-in-blockchain","content":"Cryptography is an essential component of blockchain technology. It ensures the security and integrity of data stored on a blockchain. Here is some key aspects of cryptography in blockchain: ","version":null,"tagName":"h2"},{"title":"Hash Functions​","type":1,"pageTitle":"Cryptography","url":"/Wisdom-Hub/blockchain/Cryptography/#hash-functions","content":"A hash function is a one-way function that takes an input and produces a fixed-size output, typically a bit string. In the context of blockchain, hash functions are used to create unique identifiers for blocks and transactions. The most commonly used hash function in blockchain is SHA-256, which produces a 256-bit output. ","version":null,"tagName":"h3"},{"title":"Digital Signatures​","type":1,"pageTitle":"Cryptography","url":"/Wisdom-Hub/blockchain/Cryptography/#digital-signatures","content":"Digital signatures play a crucial role in securing transactions on a blockchain. They are used to prove the authenticity and integrity of the data. In blockchain technology, digital signatures are created using public-key cryptography. A user signs a transaction with their private key, and anyone can verify the signature using the corresponding public key. ","version":null,"tagName":"h3"},{"title":"Consensus Mechanisms​","type":1,"pageTitle":"Cryptography","url":"/Wisdom-Hub/blockchain/Cryptography/#consensus-mechanisms","content":"Cryptography is also at the heart of consensus mechanisms used in blockchain networks. These mechanisms ensure that only valid transactions are added to the blockchain and help maintain the security and integrity of the network. Some common consensus mechanisms include Proof of Work (PoW), Proof of Stake (PoS). ","version":null,"tagName":"h3"},{"title":"Simple Encryption & Decryption with Openssl​","type":1,"pageTitle":"Cryptography","url":"/Wisdom-Hub/blockchain/Cryptography/#simple-encryption--decryption-with-openssl","content":"echo HelloWorld &gt; message.txt openssl enc -aes-256-cbc -in message.txt -out message.bin openssl enc -d -aes-256-cbc -in message.bin -out message.dec cat message.dec HelloWorld # Using base64 openssl enc -base64 -in message.bin -out message.b64 openssl enc -d -base64 -in message.b64 -out message.ptx  ","version":null,"tagName":"h2"},{"title":"Generate Key-Pairs with openssl - RSA​","type":1,"pageTitle":"Cryptography","url":"/Wisdom-Hub/blockchain/Cryptography/#generate-key-pairs-with-openssl---rsa","content":"openssl genpkey -algorithm RSA -out privatekey.pem -pkeyopt rsa_keygen_bits:1024 openssl rsa -pubout -in privatekey.pem -out publickey.pem  ","version":null,"tagName":"h2"},{"title":"Encrypt and Decrypt using RSA Key-Pairs​","type":1,"pageTitle":"Cryptography","url":"/Wisdom-Hub/blockchain/Cryptography/#encrypt-and-decrypt-using-rsa-key-pairs","content":"openssl rsautl -encrypt -inkey publickey.pem -pubin -in message.txt -out message.rsa openssl rsautl -decrypt -inkey privatekey.pem -in message.rsa -out message.dec  ","version":null,"tagName":"h2"},{"title":"Bitcoin","type":0,"sectionRef":"#","url":"/Wisdom-Hub/blockchain/Bitcoin/","content":"","keywords":"","version":null},{"title":"Table of content​","type":1,"pageTitle":"Bitcoin","url":"/Wisdom-Hub/blockchain/Bitcoin/#table-of-content","content":"Table of contentVisualization of how Bitcoin is WorkingsArchitecture Network Discovery ConsensusIncentivesAddresses And WalletsTransactionUnspent Transaction Outputs (UTXOs)Longest chainChain ReorganisationDouble SpendingWhere do bitcoins come from?Bitcoin StorageMerkle RootSimple POW Blockchain in nodejsReferences ","version":null,"tagName":"h2"},{"title":"Visualization of how Bitcoin is Workings​","type":1,"pageTitle":"Bitcoin","url":"/Wisdom-Hub/blockchain/Bitcoin/#visualization-of-how-bitcoin-is-workings","content":" ","version":null,"tagName":"h2"},{"title":"Architecture​","type":1,"pageTitle":"Bitcoin","url":"/Wisdom-Hub/blockchain/Bitcoin/#architecture","content":"The Bitcoin network is a decentralized peer-to-peer network, meaning that it operates without a central authority or server. Nodes, connect to each other directly, allowing data to be shared and stored. Bitcoin combines its network, cryptocurrency, and blockchain to record transactions transparently, prevent double spending, and ensure consensus via a process called proof-of-work ","version":null,"tagName":"h2"},{"title":"Network Discovery​","type":1,"pageTitle":"Bitcoin","url":"/Wisdom-Hub/blockchain/Bitcoin/#network-discovery","content":"Network Discovery or Peer Discovery in Bitcoin refers to the process by which nodes in the Bitcoin network find and connect with each other. When a new node joins the network, it starts to discover other nodes to connect with in order to participate in the network. This is typically done through a process called bootstrapping. When started for the first time, programs don’t know the IP addresses of any active full nodes. In order to discover some IP addresses, they query one or more DNS seeds hardcoded into Bitcoin Core and BitcoinJ. The response to the lookup should include one or more DNS A records with the IP addresses of full nodes that may accept new incoming connections. For example, using the dig command: dig seed.bitcoin.sipa.be ;; ANSWER SECTION: seed.bitcoin.sipa.be. 3600 IN A 185.14.30.25 seed.bitcoin.sipa.be. 3600 IN A 18.213.155.196 seed.bitcoin.sipa.be. 3600 IN A 176.9.150.253 seed.bitcoin.sipa.be. 3600 IN A 79.137.224.63 seed.bitcoin.sipa.be. 3600 IN A 76.138.214.41 DNS seed: A DNS server which returns IP addresses of full nodes on the Bitcoin network to assist in peer discovery. Once a program has connected to the network, its peers can begin to send it addr (address) messages with the IP addresses and port numbers of other peers on the network, providing a fully decentralized method of peer discovery. Bitcoin Core keeps a record of known peers in a persistent on-disk database which usually allows it to connect directly to those peers on subsequent startups without having to use DNS seeds ","version":null,"tagName":"h3"},{"title":"Consensus​","type":1,"pageTitle":"Bitcoin","url":"/Wisdom-Hub/blockchain/Bitcoin/#consensus","content":"Bitcoin achieves consensus through a process called proof-of-work mining. Miners spend computational resources to find a solution to a cryptographic puzzle, and whichever miner finds the solution is able to create the next block. ","version":null,"tagName":"h2"},{"title":"Incentives​","type":1,"pageTitle":"Bitcoin","url":"/Wisdom-Hub/blockchain/Bitcoin/#incentives","content":"The Bitcoin protocol offers two main incentives for mining: Block rewards: New bitcoins are minted with each block, and the miner who finds the block receives the block rewardTransaction fees: Each transaction on the Bitcoin network includes a transaction fee, paid to the miner who includes that transaction in a block ","version":null,"tagName":"h2"},{"title":"Addresses And Wallets​","type":1,"pageTitle":"Bitcoin","url":"/Wisdom-Hub/blockchain/Bitcoin/#addresses-and-wallets","content":"There is no such thing as a Wallet in the Bitcoin network. It is abstract. Address An address is a hash of a bitcoin public-key wallet. You can use an address as many as you want to send and receive Bitcoin. Wallet A wallet is a software program that stores key-pairs, created addresses, and other information needed to access and manage your Bitcoins. Key-pairs Key-pairs are a public key of an address to which some amount bitcoin was previously sent and the corresponding unique private key, which authorizes the bitcoin previously sent to the above public key (address) to be sent elsewhere. ","version":null,"tagName":"h2"},{"title":"Transaction​","type":1,"pageTitle":"Bitcoin","url":"/Wisdom-Hub/blockchain/Bitcoin/#transaction","content":"A Bitcoin transaction is a transfer of Bitcoins from one user to another. It is a data structure that contains several fields, including inputs, outputs, and other metadata. When a Bitcoin transaction is created, it is broadcast to the Bitcoin network and propagated to all nodes on the network. Each node verifies the transaction by checking that the digital signatures in the inputs field are valid. Once the transaction is verified by the nodes, it is added to the mempool, which is a pool of unconfirmed transactions waiting to be included in the next block. A transaction components are: Inputs - Information about the Bitcoin previously sent to Mark's address. For example, imagine Mark previously received 0.6 BTC from Alice and 0.6 BTC from Bob. Now, in order to send 1 BTC to Jessica, there might be two inputs: one input of 0.6 BTC previously from Alice and one input of 0.6 BTC previously from Bob.Amount - The amount being sent, In this case Mark wants to send 1 BTC.Outputs - The destination addresses of the Bitcoins. The first is 1.2 BTC (0.6 BTC + 0.6 BTC) to Jessica’s public address. The second is 0.2 BTC returned as 'change' to Mark. ","version":null,"tagName":"h2"},{"title":"Unspent Transaction Outputs (UTXOs)​","type":1,"pageTitle":"Bitcoin","url":"/Wisdom-Hub/blockchain/Bitcoin/#unspent-transaction-outputs-utxos","content":"In Bitcoin, the concept of Unspent Transaction Outputs (UTXOs) is fundamental to how transactions are structured and validated. A UTXO represents a certain amount of Bitcoin that has been received and is available to be spent in a future transaction. Each UTXO is associated with a specific output of a previous transaction. ","version":null,"tagName":"h2"},{"title":"How UTXOs Work​","type":1,"pageTitle":"Bitcoin","url":"/Wisdom-Hub/blockchain/Bitcoin/#how-utxos-work","content":"When you receive Bitcoin, what you actually receive is a UTXO, a chunk of Bitcoin that was previously sent to your address. Each UTXO is unique and can be spent only once. When you send Bitcoin, you are using one or more of your UTXOs as inputs in your transaction. The transaction specifies how much Bitcoin is sent to new addresses and any leftover amount (change) is returned to your address as a new UTXO. ","version":null,"tagName":"h3"},{"title":"Checking Validity Without Tracing Back to Genesis​","type":1,"pageTitle":"Bitcoin","url":"/Wisdom-Hub/blockchain/Bitcoin/#checking-validity-without-tracing-back-to-genesis","content":"Bitcoin nodes do not need to check all transactions back to the Genesis block to verify whether someone has this Bitcoin to spend. This is because each input in a Bitcoin transaction references a specific output from a previous transaction. To verify a transaction, a node checks the following: Existence of the Referenced UTXO: The node verifies that the UTXO referenced by the input exists and is valid. This means that it was indeed created in a previous transaction and is available to be spent. Unspent Status: The node ensures that the referenced UTXO has not already been spent in another transaction. This prevents double spending. Since Bitcoin nodes track the state of all UTXOs, they can quickly verify transactions by checking whether the referenced UTXOs are available and unspent. This eliminates the need to trace all the way back to the Genesis block, significantly improving efficiency. ","version":null,"tagName":"h3"},{"title":"Multiple UTXOs Sent to the Same Address​","type":1,"pageTitle":"Bitcoin","url":"/Wisdom-Hub/blockchain/Bitcoin/#multiple-utxos-sent-to-the-same-address","content":"It is simply because as the name suggests, UTXO is unspent transaction output. and not unspent address or UTA :) When multiple people send Bitcoin to the same address, each transaction creates a separate UTXO. If you later want to spend the Bitcoin received at that address, your transaction will reference the specific UTXOs (i.e., the outputs of the previous transactions) rather than the address itself. This approach ensures that even if all Bitcoin is sent to the same address, each transaction remains distinct because it has a unique output. When creating a new transaction, you mention the specific outputs (UTXOs) that are being spent, and as long as these outputs have not been used in another transaction, they are valid for spending. Thus, the Bitcoin network efficiently prevents double spending without needing to check the entire history of transactions across the network. ","version":null,"tagName":"h3"},{"title":"Longest chain​","type":1,"pageTitle":"Bitcoin","url":"/Wisdom-Hub/blockchain/Bitcoin/#longest-chain","content":"The longest chain refers to the chain of blocks that the majority of nodes on the network agree to and adopt as the authoritative blockchain. The longest chain is not determined by the number of blocks but by the amount of computational power or energy used to mine the blocks in the chain. ","version":null,"tagName":"h2"},{"title":"Chain Reorganisation​","type":1,"pageTitle":"Bitcoin","url":"/Wisdom-Hub/blockchain/Bitcoin/#chain-reorganisation","content":"A chain reorganisation takes place when your node receives blocks that are part of a new longest chain. Your node will deactivate blocks in its old longest chain in favour of the blocks that build the new longest chain. A chain reorganisation most commonly takes place after two blocks have been mined at the same time. The next block to be mined will build upon one of these two blocks, creating a new longest chain that all nodes on the network will be happy to adopt ","version":null,"tagName":"h2"},{"title":"Double Spending​","type":1,"pageTitle":"Bitcoin","url":"/Wisdom-Hub/blockchain/Bitcoin/#double-spending","content":"Double spending is when someone (A) tries spending the same bitcoin twice. Bitcoin network prevents this. When A broadcast the two transactions, they will go in unconfirmed transactions' pools. From there when a miner (X) validates the first transaction, the bitcoin will be sent to the new owner. so X will invalidate the second transaction because A is not the owner of the bitcoin anymore. But if the two transactions gets validated and mined by two different miners and gets added to the next block. it means there are two different blockchains now. (one with the first transaction and one with the second transaction). Now Chain Reorganisation comes into play. miners will always accept the longest chain. ","version":null,"tagName":"h2"},{"title":"Where do bitcoins come from?​","type":1,"pageTitle":"Bitcoin","url":"/Wisdom-Hub/blockchain/Bitcoin/#where-do-bitcoins-come-from","content":"As an incentive to use processing power to try and add new blocks of transactions on to the blockchain, each new block makes available a fixed amount of bitcoins that did not previously exist. Therefore, if you are able to successfully mine a block, you are able to “send” yourself these new bitcoins as a reward for your effort. ","version":null,"tagName":"h2"},{"title":"Bitcoin Storage​","type":1,"pageTitle":"Bitcoin","url":"/Wisdom-Hub/blockchain/Bitcoin/#bitcoin-storage","content":"Bitcoin does not enforce a specific structure for storing the transaction journal, but most implementations utilize a database like LevelDB for efficient storage of transactions and related metadata ","version":null,"tagName":"h2"},{"title":"Merkle Root​","type":1,"pageTitle":"Bitcoin","url":"/Wisdom-Hub/blockchain/Bitcoin/#merkle-root","content":"The Merkle root is an important part of blocks in the Bitcoin blockchain. The Bitcoin blockchain is not a single Merkle tree, but rather a chain of blocks. Each block contains a Merkle root, This Merkle root is built using a Merkle tree structure and is used to verify the integrity of the transactions in the block. To get the leaves for our tree, we use the transaction hash (the TXID) of every transaction included in the block. You get a TXID by hashing transaction data through SHA256 twice. Each new block contains a hash of the previous block's header. This connects the blocks in a chain, because if anything changes in a previous block, the hash will change too. Specifically, each block header includes a Merkle root hash representing all the transactions in that block. If even a single transaction in the block were modified, it would cause the TXID of that trasnaction to change. and so the Merkle root to change. This would make the block's overall header hash change too. So the Merkle root allows any changes to previous transactions to be detected. If a transaction were deleted from a previous block, the Merkle root in the header of all following blocks would change. This would break the chain of hashes connecting the blocks. You might wonder why we don't simply hash all transactions together to create a transactions hash field in the block header, instead of hashing them in pairs to create a Merkle root. While hashing all transactions together would ensure data integrity, it would not be efficient for verification. For instance, if a node wants to verify that a transaction is contained in a block (which has, let's say, 100 transactions), it would need to download and hash all 99 other transactions hashes. If the resulting hash matches the expected hash, then the transaction is confirmed to be in the block. However, with a Merkle tree, the process is much more efficient. The node only needs to obtain a few Merkle proofs. With a simple mathematical algorithm, it can confirm that the transaction is indeed included in the block. This is because Merkle trees allow for the proof of data belonging to a set without needing to store the entire set. For instance, to prove that a specific transaction 'a' is part of a Merkle tree, everyone in the network will be aware of the hash function used by all Merkle trees. The hash of 'a' and its corresponding hash are hashed together, moving up the tree until the root hash, which is publicly known, is obtained. By comparing the obtained Merkle root and the Merkle root already available within the block header, the presence of transaction 'a' in this block can be verified. From this example, it is clear that in order to verify the presence of 'a', 'a' does not have to be revealed, nor do the other transactions have to be revealed; only some of their hashes are sufficient. This makes Merkle proof an efficient and simple method of verifying inclusivity. The mathematical process of verifying a Merkle proof involves hashing the value in question with the hashes provided in the proof, iteratively, until you arrive at a computed Merkle root. If this computed root matches the known Merkle root of the block, the proof is valid, and the transaction is confirmed to be part of the block When you broadcast a transaction to the Bitcoin network, your wallet can download the new block headers and check if the transaction it created for you is included in the new block or not. This is made possible by the Merkle Tree structure. ","version":null,"tagName":"h2"},{"title":"Simple POW Blockchain in nodejs​","type":1,"pageTitle":"Bitcoin","url":"/Wisdom-Hub/blockchain/Bitcoin/#simple-pow-blockchain-in-nodejs","content":"Here you can find a simple complete POW blockchain written in nodejs ","version":null,"tagName":"h2"},{"title":"References​","type":1,"pageTitle":"Bitcoin","url":"/Wisdom-Hub/blockchain/Bitcoin/#references","content":"https://www.bitcoin.com/get-started/https://academy.binance.com/en/articles/double-spending-explainedhttps://www.youtube.com/watch?v=phLSjZdDc5Ahttps://learnmeabitcoin.com/technical/longest-chainhttps://www.geeksforgeeks.org/blockchain-merkle-trees/https://www.geeksforgeeks.org/blockchain-merkle-trees/https://academy.binance.com/en/articles/merkle-trees-and-merkle-roots-explained ","version":null,"tagName":"h2"},{"title":"Ethereum","type":0,"sectionRef":"#","url":"/Wisdom-Hub/blockchain/Ethereum/","content":"","keywords":"","version":null},{"title":"Table of content​","type":1,"pageTitle":"Ethereum","url":"/Wisdom-Hub/blockchain/Ethereum/#table-of-content","content":"Table of contentA visual representation of how Ethereum works - detailed diagramProof-of-stake protocolEtherGasAccounts Accounts vs UTXOs BlocksMerkle Patricia TreesSmart ContractsEtehreum Structure Transactions TypesBlock info Ethereum ExplorerReferencesMy ETH Address ","version":null,"tagName":"h2"},{"title":"Basic Concepts​","type":1,"pageTitle":"Ethereum","url":"/Wisdom-Hub/blockchain/Ethereum/#basic-concepts","content":"A blockchain is a public database that is updated and shared across many computers in a network. Blocks are data structures within the blockchain database, where transactions are stored. If you send ETH to someone else, the transaction data needs to be added to a block to be successful. each block contains number of transactions. Chain refers to the fact that each block cryptographically references its parent. In other words, blocks get chained together. The data in a block cannot change without changing all subsequent blocks.. Every computer in the network must agree upon each new block and the chain as a whole. These computers are known as nodes. Nodes ensure everyone interacting with the blockchain has the same data. To accomplish this distributed agreement, blockchains need a consensus mechanism. ","version":null,"tagName":"h2"},{"title":"A visual representation of how Ethereum works - detailed diagram​","type":1,"pageTitle":"Ethereum","url":"/Wisdom-Hub/blockchain/Ethereum/#a-visual-representation-of-how-ethereum-works---detailed-diagram","content":"A mind map of how Ethereum works:  You can find the Pencil project file here: pencil-file ","version":null,"tagName":"h2"},{"title":"Proof-of-stake protocol​","type":1,"pageTitle":"Ethereum","url":"/Wisdom-Hub/blockchain/Ethereum/#proof-of-stake-protocol","content":"Ethereum uses a proof-of-stake-based consensus mechanism. Validators can then be randomly selected to propose blocks that other validators check and add to the blockchainValidating nodes have to stake 32 ETH into a deposit contract as collateral against bad behavior. This helps protect the network because provably dishonest activity leads to some or all of that stake being destroyedIn every slot (spaced twelve seconds apart) a validator is randomly selected to be the block proposer. They bundle transactions together, execute them and determine a new 'state'. They wrap this information into a block and pass it around to other validatorsOther validators who hear about the new block re-execute the transactions to ensure they agree with the proposed change to the global state. Assuming the block is valid, they add it to their own databaseIf a validator hears about two conflicting blocks for the same slot they use their fork-choice algorithm to pick the one supported by the most staked ETH ","version":null,"tagName":"h2"},{"title":"Ether​","type":1,"pageTitle":"Ethereum","url":"/Wisdom-Hub/blockchain/Ethereum/#ether","content":"Ether (ETH) is the cryptocurrency used for many things on the Ethereum network. Fundamentally, it is the only acceptable form of payment for transaction fees, and is required to validate and propose blocks. ETH also being used to secure the network in 3 ways: It is used as a means to reward validators who propose blocks or call out dishonest behavior by other validatorsIt is staked by validators, acting as collateral against dishonest behavior—if validators attempt to misbehave their ETH can be destroyedIt is used to weigh votes for newly proposed blocks, feeding into the fork-choice part of the consensus mechanism ","version":null,"tagName":"h2"},{"title":"Gas​","type":1,"pageTitle":"Ethereum","url":"/Wisdom-Hub/blockchain/Ethereum/#gas","content":"What happens when we run out of gas in the middle of an Ethereum transaction? If we run out of gas in the middle of an Ethereum transaction, the transaction will fail and the state of the blockchain will revert to what it was before. However, we will still have to pay for the gas that was consumed up to that ","version":null,"tagName":"h2"},{"title":"Smart Contracts​","type":1,"pageTitle":"Ethereum","url":"/Wisdom-Hub/blockchain/Ethereum/#smart-contracts","content":"A reusable code (a program) which someone publishes into Ethereum network. Anyone can request that the smart contract code be executed by making a transaction request. Smart Contracts exceution can result a state changes. ","version":null,"tagName":"h2"},{"title":"Accounts​","type":1,"pageTitle":"Ethereum","url":"/Wisdom-Hub/blockchain/Ethereum/#accounts","content":"Ethereum has two account types: Externally-owned account (EOA) – controlled by anyone with the private keys Creating an account costs nothingCan initiate transactionsTransactions between externally-owned accounts can only be ETH/token transfersMade up of a cryptographic pair of keys: public and private keys that control account activities Contract account – a smart contract deployed to the network, controlled by code. Learn about smart contracts Creating a contract has a cost because you're using network storageCan only send transactions in response to receiving a transactionTransactions from an external account to a contract account can trigger code which can execute many different actions, such as transferring tokens or even creating a new contractContract accounts don't have private keys. Instead, they are controlled by the logic of the smart contract code Both account types have the ability to: Receive, hold and send ETH and tokensInteract with deployed smart contracts ","version":null,"tagName":"h2"},{"title":"Accounts vs UTXOs​","type":1,"pageTitle":"Ethereum","url":"/Wisdom-Hub/blockchain/Ethereum/#accounts-vs-utxos","content":"Bitcoin, along with many of its derivatives, stores data about users’ balances in a structure based on unspent transaction outputs (UTXOs). The entire state of the system consists of a set of “unspent outputs” (think, “coins”), such that each coin has an owner and a value, and a transaction spends one or more coins and creates one or more new coins, subject to the validity constraints: Every referenced input must be valid and not yet spentThe transaction must have a signature matching the owner of the input for every inputThe total value of the inputs must equal or exceed the total value of the outputs A user’s “balance” in the system is thus the total value of the set of coins for which the user has a private key capable of producing a valid signature. Triple-entry bookkeeping example (Image from https://bitcoin.org/en/developer-guide) Ethereum jettisons this scheme in favor of a simpler approach: the state stores a list of accounts where each account has a balance, as well as Ethereum-specific data (code and internal storage), and a transaction is valid if the sending account has enough balance to pay for it, in which case the sending account is debited and the receiving account is credited with the value. If the receiving account has code, the code runs, and internal storage may also be changed, or the code may even create additional messages to other accounts which lead to further debits and credits. The benefits of UTXOs are: Higher degree of privacy: if a user uses a new address for each transaction that they receive then it will often be difficult to link accounts to each other. This applies greatly to currency, but less to arbitrary dapps, as arbitrary dapps often necessarily involve keeping track of complex bundled state of users and there may not exist such an easy user state partitioning scheme as in currency.Potential scalability paradigms: UTXOs are more theoretically compatible with certain kinds of scalability paradigms, as we can rely on only the owner of some coins maintaining a Merkle proof of ownership, and even if everyone including the owner decides to forget that data then only the owner is harmed. In an account paradigm, everyone losing the portion of a Merkle tree corresponding to an account would make it impossible to process messages that affect that account at all in any way, including sending to it. However, non-UTXO-dependent scalability paradigms do exist. The benefits of accounts are: Large space savings: for example, if an account has 5 UTXO, then switching from a UTXO model to an account model would reduce the space requirements from (20 + 32 + 8) * 5 = 300 bytes (20 for the address, 32 for the txid and 8 for the value) to 20 + 8 + 2 = 30 bytes (20 for the address, 8 for the value, 2 for a nonce(see below)). In reality savings are not nearly this massive because accounts need to be stored in a Patricia tree (see below) but they are nevertheless large. Additionally, transactions can be smaller (eg. 100 bytes in Ethereum vs. 200-250 bytes in Bitcoin) because every transaction need only make one reference and one signature and produces one output.Greater fungibility: because there is no blockchain-level concept of the source of a specific set of coins, it becomes less practical, both technically and legally, to institute a redlist/blacklisting scheme and to draw a distinction between coins depending on where they come from.Simplicity: easier to code and understand, especially once more complex scripts become involved. Although it is possible to shoehorn arbitrary decentralized applications into a UTXO paradigm, essentially by giving scripts the ability to restrict what kinds of UTXO a given UTXO can be spent to, and requiring spends to include Merkle tree proofs of change-of-application-state-root that scripts evaluate, such a paradigm is much more complicated and ugly than just using accounts.Constant light client reference: light clients can at any point access all data related to an account by scanning down the state tree in a specific direction. In a UTXO paradigm, the references change with each transaction, a particularly burdensome problem for long-running dapps that try to use the above mentioned state-root-in-UTXO propagation mechanism. We have decided that, particularly because we are dealing with dapps containing arbitrary state and code, the benefits of accounts massively outweigh the alternatives. Additionally, in the spirit of the We Have No Features principle, we note that if people really do care about privacy then mixers and coinjoin can be built via signed-data-packet protocols inside of contracts. One weakness of the account paradigm is that in order to prevent replay attacks, every transaction must have a nonce, such that the account keeps track of the nonces used and only accepts a transaction if its nonce is 1 after the last nonce used. This means that even no-longer-used accounts can never be pruned from the account state. A simple solution to this problem is to require transactions to contain a block number, making them un-repayable after some period of time, and reset nonces once every period. Miners or other users will need to “ping” unused accounts in order to delete them from the state, as it would be too expensive to do a full sweep as part of the blockchain protocol itself. We did not go with this mechanism only to speed up development for 1.0; 1.1 and beyond will likely use such a system. ","version":null,"tagName":"h3"},{"title":"Blocks​","type":1,"pageTitle":"Ethereum","url":"/Wisdom-Hub/blockchain/Ethereum/#blocks","content":"Blocks are batches of transactions with a hash of the previous block in the chain. This links blocks together (in a chain) because hashes are cryptographically derived from the block data ","version":null,"tagName":"h2"},{"title":"Merkle Patricia Trees​","type":1,"pageTitle":"Ethereum","url":"/Wisdom-Hub/blockchain/Ethereum/#merkle-patricia-trees","content":"The Merkle Patricia tree/trie, previously envisioned by Alan Reiner and implemented in the Ripple protocol, is the primary data structure of Ethereum, and is used to store all account state, as well as transactions and receipts in each block. ","version":null,"tagName":"h2"},{"title":"Etehreum Structure​","type":1,"pageTitle":"Ethereum","url":"/Wisdom-Hub/blockchain/Ethereum/#etehreum-structure","content":"","version":null,"tagName":"h2"},{"title":"Transactions Types​","type":1,"pageTitle":"Ethereum","url":"/Wisdom-Hub/blockchain/Ethereum/#transactions-types","content":"A transaction in ETH-2 looks like this: eth.getTransaction(&quot;0x43ad3737b39356024aa13bc396237208e66b73bc5f99ab33e08c60731b8a14a9&quot;) { accessList: [], blockHash: &quot;0x24635aee8638d9c34f01fdc3a6a80b39dc081df59d33550be92a0badff0c93bb&quot;, blockNumber: 17641198, chainId: &quot;0x1&quot;, from: &quot;0xdafea492d9c6733ae3d56b7ed1adb60692c98bc5&quot;, gas: 21000, gasPrice: 22310851574, hash: &quot;0xa78d2e8e676ad408ad75399c36946ee27968beec36fe38f4c284ffd2c39f20af&quot;, input: &quot;0x&quot;, maxFeePerGas: 22310851574, maxPriorityFeePerGas: 0, nonce: 383610, r: &quot;0x16bb14d65b1e768d6671e69c7ee6189ca070b90a8519c34e97169a4fe0e72865&quot;, s: &quot;0x3107edfd2b4a1cf2d03ce305b74323486e70e9ee0c29ee02c61ed74376e88298&quot;, to: &quot;0xe688b84b23f322a994a53dbf8e15fa82cdb71127&quot;, transactionIndex: 168, type: &quot;0x2&quot;, v: &quot;0x0&quot;, value: 44186254496743523 } // OR { accessList: [], blockHash: &quot;0x424483e1970781103b9f4f22b2d906eeb25ebab5d417b8d706802fec10b4197d&quot;, blockNumber: 17619068, chainId: &quot;0x1&quot;, from: &quot;0xbc0f14d6bdd2f46ab1d56bfd5f28eb6c2a2d2777&quot;, gas: 274223, gasPrice: 24387282490, hash: &quot;0x43ad3737b39356024aa13bc396237208e66b73bc5f99ab33e08c60731b8a14a9&quot;, input: &quot;0x3593564c0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000002890df158d76e584877a1d17a85fea3aeeb85aa600000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000&quot;, maxFeePerGas: 31580923735, maxPriorityFeePerGas: 10000000000, nonce: 3895, r: &quot;0x5b7f1d328c3c85b0c74e23511938817f338066f34dabaa2f72fe161c187dac3e&quot;, s: &quot;0x6583f2d3db02c51e9acbfb700f6dd28fac62108a58e397306871e5769d3b7443&quot;, to: &quot;0xef1c6e67703c7bd7107eed8303fbe6ec2554bf6b&quot;, transactionIndex: 0, type: &quot;0x2&quot;, v: &quot;0x1&quot;, value: 0 }  ","version":null,"tagName":"h3"},{"title":"Block info​","type":1,"pageTitle":"Ethereum","url":"/Wisdom-Hub/blockchain/Ethereum/#block-info","content":"A block in Ethereum looks like this: web3.eth.getBlock(eth.blockNumber) { baseFeePerGas: 14387282490, difficulty: 0, extraData: &quot;0x496c6c756d696e61746520446d6f63726174697a6520447374726962757465&quot;, gasLimit: 30000000, gasUsed: 13371853, hash: &quot;0x424483e1970781103b9f4f22b2d906eeb25ebab5d417b8d706802fec10b4197d&quot;, logsBloom: &quot;0xd16bc008ef900be8452b8128845c1b3014251b90402259020c4520c4746a88b301a403c34060b54ef2109a3663e0190546c195e861a2af47429380824635a81439a7ccdf4ea0be044870a028497f86c170de301fe3f44580c99137f49eef2b&quot;, miner: &quot;0xdafea492d9c6733ae3d56b7ed1adb60692c98bc5&quot;, mixHash: &quot;0xfc5ce5faa47e9198054791dff0372514fb876038b605b02abd82fa3b510adbeb&quot;, nonce: &quot;0x0000000000000000&quot;, number: 17619068, parentHash: &quot;0x8afcef307dfe111676d5baa35ab148131fd4918b499c807c657c6291429f8be0&quot;, receiptsRoot: &quot;0xc04575fad7649ea33ec114a2626e6ad87d902c1bea0ac51ef47e5aeb03aadafb&quot;, sha3Uncles: &quot;0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347&quot;, size: 162982, stateRoot: &quot;0x9fce67ea0ac4c8e9bb310e538663203544ed2f9216a5562ca389f66e154a8af3&quot;, timestamp: 1688455619, totalDifficulty: 5.8750003716598352816469e+22, transactions: [&quot;0x43ad3737b39356024aa13bc396237208e66b73bc5f99ab33e08c60731b8a14a9&quot;, &quot;0xe2588a39acfb64ede45f2372954952b69a0effc9d953b6ff954e624ec9ef7e7a&quot;, &quot;0x10a61db4c6b065cf91de037fbb5eb30717c97b9857c26a42028ab9d0704256e8&quot;, &quot;0x4e0c96c3d942f79384fef9498d022b76ebae4b1097606996d0a4c77abfc2d5b4&quot;, &quot;0xe2a973235b5563490b2b4edbc77f9d98bebad087b70b8238a4476a7ac86d6aa5&quot;, &quot;0x4adc76b7e31c97e84dc705c79042ecc6b4e53cbe751a586f1f5b13496f0e5968&quot;, &quot;0x0656b67f8bddbfac490c114f2e5ea5e09b3256b5d242649546b9184c65f989fd&quot;, &quot;0xbc2b9acc05f0b01b2311c438243d5bcf6120981672c014f76e5cdb62b8158dc4&quot;], transactionsRoot: &quot;0x5113e5b9bb408a7b82ad324135d75543333ada8276bb13a2b8dca6f38b58edac&quot;, uncles: [], withdrawals: [{ address: &quot;0x210b3cb99fa1de0a64085fa80e18c22fe4722a1b&quot;, amount: &quot;0xd827da&quot;, index: &quot;0x8e9d47&quot;, validatorIndex: &quot;0x82c3d&quot; }, { address: &quot;0xb9d7934878b5fb9610b3fe8a5e441e8fad7e293f&quot;, amount: &quot;0xd87c41&quot;, index: &quot;0x8e9d4f&quot;, validatorIndex: &quot;0x82c45&quot; }, withdrawalsRoot: &quot;0x4915e375cb0b2df0dfb9115fab5c0acef3abebd037cdc693edc065f3a8da44b0&quot; }  ","version":null,"tagName":"h3"},{"title":"Ethereum Explorer​","type":1,"pageTitle":"Ethereum","url":"/Wisdom-Hub/blockchain/Ethereum/#ethereum-explorer","content":"https://etherscan.io/https://rinkeby.etherscan.io/address/CONTRACT_ADDRESS ","version":null,"tagName":"h2"},{"title":"References​","type":1,"pageTitle":"Ethereum","url":"/Wisdom-Hub/blockchain/Ethereum/#references","content":"https://ethereum.org/en/developers/docs/https://docs.infura.io/networks/ethereumhttps://eips.ethereum.org/https://github.com/web3/web3.jshttps://web3js.org ","version":null,"tagName":"h2"},{"title":"My ETH Address​","type":1,"pageTitle":"Ethereum","url":"/Wisdom-Hub/blockchain/Ethereum/#my-eth-address","content":"0xc9b64496986E7b6D4A68fDF69eF132A35e91838e ","version":null,"tagName":"h2"},{"title":"Python","type":0,"sectionRef":"#","url":"/Wisdom-Hub/ai/python-for-ai","content":"","keywords":"","version":null},{"title":"Install​","type":1,"pageTitle":"Python","url":"/Wisdom-Hub/ai/python-for-ai#install","content":"sudo pacman -S python python --version  Libraries and Executable path: import sys print ('\\n'.join(sys.path)) # /usr/lib/python312.zip # /usr/lib/python3.12 # /usr/lib/python3.12/lib-dynload # /home/mlibre/.local/lib/python3.12/site-packages # /usr/lib/python3.12/site-packages print (sys.executable) # /usr/bin/python help(&quot;a&quot;.find) # Help on built-in function find: # find(...) method of builtins.str instance # S.find(sub[, start[, end]]) -&gt; int # Return the lowest index in S where substring sub is found, # such that sub is contained within S[start:end]. Optional # arguments start and end are interpreted as in slice notation. # Return -1 on failure.  ","version":null,"tagName":"h2"},{"title":"Jupyter Notebook​","type":1,"pageTitle":"Python","url":"/Wisdom-Hub/ai/python-for-ai#jupyter-notebook","content":"pip install notebook --break-system-packages jupyter notebook  You can also open http://localhost:8888/tree or http://localhost:8888/lab ","version":null,"tagName":"h2"},{"title":"Concepts​","type":1,"pageTitle":"Python","url":"/Wisdom-Hub/ai/python-for-ai#concepts","content":"","version":null,"tagName":"h2"},{"title":"String​","type":1,"pageTitle":"Python","url":"/Wisdom-Hub/ai/python-for-ai#string","content":"text = &quot;abcd&quot; print (&quot;thank :) %s&quot; % text) # abcd print (f&quot;thank :) {text[0:3]}&quot;) # abc print (f'''thanks :) {text[1:]} # bcd {text[-1]} # d ''') text2 = &quot;pi is {pi:.2f}&quot; print(text2.format(pi = 3.144444)) # pi is 3.14 text3 = &quot;pi is {} or {}&quot; print(text3.format(3.14, 3)) # pi is 3.14 or 3 text4 = &quot;pi is {0} or {1}&quot; print(text4.format(3.14, 3)) # pi is 3.14 or 3 text5 = &quot;a big number {0:,.3f}&quot; print(text5.format(3000.14567)) # a big number 3,000.146 text6 = &quot;a big number {:,.3f}&quot; print(text6.format(3000.14567)) # a big number 3,000.146 text7 = &quot;pi is a number&quot; isLoc, isLoc2 = text7.find(&quot;is&quot;), text2.index(&quot;is&quot;) print(isLoc, isLoc2) # 3 3  ","version":null,"tagName":"h3"},{"title":"Number​","type":1,"pageTitle":"Python","url":"/Wisdom-Hub/ai/python-for-ai#number","content":"piString = &quot;3.14&quot; pi = float(piString) # 3.14 b = int(pi) # 3 print(f''' Multiplication: {pi * b} Division: {pi / b} Floor division: {pi // b} Modulus: {pi % b} Exponentiation: {pi ** b} ''')  ","version":null,"tagName":"h3"},{"title":"List​","type":1,"pageTitle":"Python","url":"/Wisdom-Hub/ai/python-for-ai#list","content":"mixed = [&quot;apple&quot;, 2, 3.5, True] mixed.append(&quot;orange&quot;) mixed.remove(3.5) print(mixed) # ['apple', 2, True, 'orange'] squares = [x ** 2 for x in range(10)] print(squares) # [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]  ","version":null,"tagName":"h3"},{"title":"Tuple​","type":1,"pageTitle":"Python","url":"/Wisdom-Hub/ai/python-for-ai#tuple","content":"fruits = (&quot;apple&quot;, &quot;banana&quot;, &quot;cherry&quot;) # Tuples are immutable, so you can't modify them directly fruits[0] = &quot;kiwi&quot; # would raise an error  ","version":null,"tagName":"h3"},{"title":"Dictionary​","type":1,"pageTitle":"Python","url":"/Wisdom-Hub/ai/python-for-ai#dictionary","content":"person = { &quot;name&quot;: &quot;Alice&quot;, &quot;age&quot;: 25, &quot;city&quot;: &quot;New York&quot; } print(person) # {'name': 'Alice', 'age': 25, 'city': 'New York'} print(person[&quot;name&quot;]) # Alice print(person.keys()) # dict_keys(['name', 'age', 'city']) print(person.items()) # dict_items([('name', 'Alice'), ('age', 25), ('city', 'New York')])  ","version":null,"tagName":"h3"},{"title":"Loop​","type":1,"pageTitle":"Python","url":"/Wisdom-Hub/ai/python-for-ai#loop","content":"text = &quot;abcd&quot; for i in text: print(i) # a b c d for i in range(5): print(i) # 0 1 2 3 4 # Looping through a list fruits = [&quot;apple&quot;, &quot;banana&quot;, &quot;cherry&quot;] for fruit in fruits: print(fruit) # apple banana cherry # Looping through a dictionary person = {&quot;name&quot;: &quot;Alice&quot;, &quot;age&quot;: 25, &quot;city&quot;: &quot;New York&quot;} for key, value in person.items(): print(f&quot;{key}: {value}&quot;) # name: Alice # age: 25 # city: New York  ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"Python","url":"/Wisdom-Hub/ai/python-for-ai#functions","content":"def greet(name=&quot;Guest&quot;): return f&quot;Hello, {name}!&quot; print(greet()) # Hello, Guest! print(greet(&quot;Bob&quot;)) # Hello, Bob! def sum_all(*args): return sum(args) print(sum_all(1, 2, 3, 4)) # 10 def describe_person(**kwargs): for key, value in kwargs.items(): print(f&quot;{key}: {value}&quot;) describe_person(name=&quot;Alice&quot;, age=25, city=&quot;New York&quot;) # name: Alice # age: 25 # city: New York add = lambda x, y: x + y print(add(3, 5)) # 8 # Using lambda with sort points = [(2, 3), (1, 2), (4, 1)] secondValue = lambda point: point[1] # always returns second value points.sort(key=secondValue) print(points) # [(4, 1), (1, 2), (2, 3)] def my_decorator(func): def wrapper(): print(&quot;Something is happening before the function is called.&quot;) func() print(&quot;Something is happening after the function is called.&quot;) return wrapper @my_decorator def say_hello(): print(&quot;Hello!&quot;) say_hello() # Output: # Something is happening before the function is called. # Hello! # Something is happening after the function is called.  ","version":null,"tagName":"h3"},{"title":"class​","type":1,"pageTitle":"Python","url":"/Wisdom-Hub/ai/python-for-ai#class","content":"class Person: def __init__(self, name): self._name = name @property def name(self): return self._name @name.setter def name(self, value): # now we can set and get with &quot;name&quot; not &quot;_name&quot; self._name = value class Employee(Person): # inherits from Person species = &quot;Homo sapiens&quot; # Class variable def __init__(self, name, employee_id): super().__init__(name) self.employee_id = employee_id self._test1 = &quot;test1&quot; # Protected attribute self.__test2 = &quot;test2&quot; # Private attribute def get_employee_details(self): return f&quot;Name: {self.name}, Employee ID: {self.employee_id}&quot; # Creating an instance of the subclass employee1 = Employee(&quot;Bob&quot;, &quot;E1234&quot;) print(employee1.get_employee_details()) # Name: Bob, Age: 30, Employee ID: E1234 employee1.name = &quot;Alice&quot; print(employee1.get_employee_details()) # Name: Alice, Age: 30, Employee ID: E1234 employee1.employee_id = &quot;E1235&quot; print(employee1.get_employee_details())  ","version":null,"tagName":"h3"},{"title":"Error handling​","type":1,"pageTitle":"Python","url":"/Wisdom-Hub/ai/python-for-ai#error-handling","content":"try: result = 10 / 0 except ZeroDivisionError: print(&quot;Cannot divide by zero!&quot;) except ValueError: print(&quot;Invalid value!&quot;) else: print(&quot;error is not ValueError or ZeroDivisionError&quot;) finally: print(&quot;This will execute no matter what&quot;) # Rasing and error def check_age(age): if age &lt; 5: raise ValueError(&quot;Age must be 5 or older&quot;) return &quot;Access granted&quot; try: check_age(4) except ValueError as e: print(e)  ","version":null,"tagName":"h3"},{"title":"Math​","type":1,"pageTitle":"Python","url":"/Wisdom-Hub/ai/python-for-ai#math","content":"import math as m m.pi # 3.141592653589793 from math import * print(pi) import random as r print(r.random())  ","version":null,"tagName":"h2"},{"title":"NumPy​","type":1,"pageTitle":"Python","url":"/Wisdom-Hub/ai/python-for-ai#numpy","content":"pip install numpy --break-system-packages  import numpy as np arr = np.array([1, 2, 3, 4, 5]) print(arr) # [1 2 3 4 5] # Creating a 2D array arr2d = np.array([[1, 2, 3], [4, 5, 6]]) print(arr2d) # [[1 2 3] # [4 5 6]] print(arr2d.shape) # (2, 3) # Creating a 2D array arr2d = np.array([[1, 2, 3], [4, 5, 6, 7]]) # Raises ValueError. The requested array has an inhomogeneous shape after 1 dimensions arr = np.array([1, 2, 3, 4, 5]) # Mean print(np.mean(arr)) # 3.0 # Sum print(np.sum(arr)) # 15 # Standard deviation print(np.std(arr)) # 1.4142135623730951 # Minimum and Maximum print(np.min(arr)) # 1 print(np.max(arr)) # 5 # Dot for 1d array vector_a = np.array([1, 2, 3]) vector_b = np.array([4, 5, 6]) dot_product = np.dot(vector_a, vector_b) # 1∗4 + 2∗5 + 3∗6 = 4+10+18=32 print(&quot;Dot product of vectors:&quot;, dot_product) # Dot product of vectors: 32 # Dot for 2d array matrix_a = np.array([[1, 2], [3, 4]]) matrix_b = np.array([[5, 6], [7, 8]]) matrix_product = np.dot(matrix_a, matrix_b) print(&quot;Dot product of matrices:\\n&quot;, matrix_product) # [ [19 22], [43 50] ] # Save to a file np.save('array.npy', arr) # Load from a file loaded_arr = np.load('array.npy') print(loaded_arr) # [1 2 3 4 5]   ","version":null,"tagName":"h2"},{"title":"Pandas​","type":1,"pageTitle":"Python","url":"/Wisdom-Hub/ai/python-for-ai#pandas","content":"pip install pandas --break-system-packages  import pandas as pd data = { 'Name': ['Alice', 'Bob', 'Charlie'], 'Age': [25, 30, 35], 'City': ['New York', 'Los Angeles', 'Chicago'] } df = pd.DataFrame(data) print(df) # Name Age City # 0 Alice 25 New York # 1 Bob 30 Los Angeles # 2 Charlie 35 Chicago df['Age'] = df['Age'] + 1 print(df['Age']) # Age column # 0 26 # 1 31 # 2 36 print(df.head(2)) # First And Second rows # Name Age City # 0 Alice 25 New York # 1 Bob 30 Los Angeles print(df.iloc[0]) # First row # Name Alice # Age 25 # City New York df1 = pd.DataFrame({ 'Name': ['Alice', 'Bob'], 'Age': [25, 30] }) df2 = pd.DataFrame({ 'Name': ['Alice', 'David'], 'Age': [35, 40] }) # Concatenating DataFrames df_concat = pd.concat([df1, df2]) # Merging DataFrames on a key df3 = pd.DataFrame({ 'Name': ['Alice', 'Bob', 'Charlie'], 'City': ['New York', 'Los Angeles', 'Chicago'] }) merged_df = pd.merge(df_concat, df3, on='Name') print(merged_df) # Name Age City # 0 Alice 25 New York # 1 Bob 30 Los Angeles # 2 Alice 35 New York  ","version":null,"tagName":"h2"},{"title":"Matplotlib​","type":1,"pageTitle":"Python","url":"/Wisdom-Hub/ai/python-for-ai#matplotlib","content":"pip install matplotlib --break-system-packages  import matplotlib.pyplot as plt x = [1, 2, 3, 4, 5] y = [2, 3, 5, 7, 11] plt.plot(x, y) plt.xlabel('X Axis') plt.ylabel('Y Axis') plt.title('Simple Line Plot') plt.show()  ","version":null,"tagName":"h2"},{"title":"References​","type":1,"pageTitle":"Python","url":"/Wisdom-Hub/ai/python-for-ai#references","content":"https://www.youtube.com/watch?v=ZUeSxQ67wD8 ","version":null,"tagName":"h2"},{"title":"Ollama","type":0,"sectionRef":"#","url":"/Wisdom-Hub/ai/ollama","content":"","keywords":"","version":null},{"title":"Rocm​","type":1,"pageTitle":"Ollama","url":"/Wisdom-Hub/ai/ollama#rocm","content":"First make sure you have rocm or NVIDIA CUDA installed. ","version":null,"tagName":"h2"},{"title":"Arch​","type":1,"pageTitle":"Ollama","url":"/Wisdom-Hub/ai/ollama#arch","content":"sudo pacman -S base-devel cmake gcc python3 # pyenv is a tool to manage multiple versions of Python curl https://pyenv.run | bash echo 'export PYENV_ROOT=&quot;$HOME/.pyenv&quot;' &gt;&gt; ~/.zshrc echo '[[ -d $PYENV_ROOT/bin ]] &amp;&amp; export PATH=&quot;$PYENV_ROOT/bin:$PATH&quot;' &gt;&gt; ~/.zshrc echo 'eval &quot;$(pyenv init -)&quot;' &gt;&gt; ~/.zshrc source ~/.zshrc pyenv install 3.12 pyenv versions pyenv global 3.12 # or use system to get back to system python # pyenv global system pip install --upgrade pip --break-system-packages # If you have permission issues # sudo rm /usr/lib/python3.12/EXTERNALLY-MANAGED # sudo chmod a+rwx /usr/lib/python3.12/ -R # https://wiki.archlinux.org/title/GPGPU # Remove old packages sudo pacman -Rns hsakmt-roct comgr hsa-rocr rocm-opencl-sdk rocm-opencl-runtime hip-runtime-amd miopen-hip rocm-clang-ocl roctracer rocminfo rocprim rocrand rocsolver rocsparse rocthrust rocm-smi-lib rocm-language-runtime rocm-hip-sdk rocm-hip-runtime rocalution rocm-hip-libraries rocfft rocblas rccl hipsparse hipcub hipsolver hiprand hipfft hipblas composable-kernel rocm-ml-libraries rocm-opencl-sdk rocm-ml-sdk # Install rocm sudo pamac install rocm-core hsa-rocr rocm-opencl-runtime comgr roctracer hsakmt-roct rocm-language-runtime rocminfo rocm-cmake hip rocm-smi-lib rocm-clang-ocl rocm-hip-runtime rocm-hip-sdk rocm-opencl-sdk rocm-device-libs --no-confirm sudo usermod -a -G render,video $LOGNAME sudo reboot rocminfo  ","version":null,"tagName":"h3"},{"title":"Ubuntu​","type":1,"pageTitle":"Ollama","url":"/Wisdom-Hub/ai/ollama#ubuntu","content":"# https://rocm.docs.amd.com/projects/install-on-linux/en/latest/install/quick-start.html # https://rocm.docs.amd.com/projects/install-on-linux/en/latest/install/native-install/ubuntu.html # https://rocm.docs.amd.com/projects/install-on-linux/en/latest/install/amdgpu-install.html # https://rocm.docs.amd.com/projects/install-on-linux/en/latest/install/post-install.html sudo apt update sudo apt install &quot;linux-headers-$(uname -r)&quot; &quot;linux-modules-extra-$(uname -r)&quot; sudo usermod -a -G render,video $LOGNAME # Add the current user to the render and video groups wget https://repo.radeon.com/amdgpu-install/6.2/ubuntu/noble/amdgpu-install_6.2.60200-1_all.deb sudo apt install ./amdgpu-install_6.2.60200-1_all.deb sudo apt update sudo apt install amdgpu-dkms rocm  ","version":null,"tagName":"h3"},{"title":"Old GPUs​","type":1,"pageTitle":"Ollama","url":"/Wisdom-Hub/ai/ollama#old-gpus","content":"# If you are using RDNA or RDNA 2 architecture like AMD Radeon RX 6500 XT, you may need to follow this step: sudo nano ~/.profile # Add the following lines: export HSA_OVERRIDE_GFX_VERSION=10.3.0 export ROC_ENABLE_PRE_VEGA=1 sudo systemctl edit --full ollama.service Environment=&quot;HSA_OVERRIDE_GFX_VERSION=10.3.0&quot; Environment=&quot;ROC_ENABLE_PRE_VEGA=1&quot;  ","version":null,"tagName":"h3"},{"title":"Test​","type":1,"pageTitle":"Ollama","url":"/Wisdom-Hub/ai/ollama#test","content":"pip install -U transformers datasets evaluate accelerate --user sudo pip install -U transformers datasets evaluate accelerate # https://www.tensorflow.org/install/pip # https://rocm.docs.amd.com/projects/install-on-linux/en/latest/install/3rd-party/tensorflow-install.html#install-tensorflow-versions pip install --user tensorflow-rocm==&quot;2.16.1&quot; -f &quot;https://repo.radeon.com/rocm/manylinux/rocm-rel-6.2/&quot; --upgrade # cp312 means you need to have python 3.12 # https://pytorch.org/ # if you have downloaded torch-2.6.0+rocm6.2.4-cp313-cp313-manylinux_2_28_x86_64.whl manually pip3 install -U torch torchvision torchaudio /usr/lib/python3.13/site-packages/torch-2.6.0+rocm6.2.4-cp313-cp313-manylinux_2_28_x86_64.whl --index-url https://download.pytorch.org/whl/rocm6.2.4 --break-system-packages # pip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/rocm6.2.4 --break-system-packages pip3 install -U torch torchvision torchaudio --index-url https://download.pytorch.org/whl/rocm6.1 --user # sudo pip3 install -U torch torchvision torchaudio --index-url https://download.pytorch.org/whl/rocm6.1 pip3 install -U xformers --user # sudo pip3 install -U xformers  import tensorflow as tf import torch print(tf.config.list_physical_devices()) print(tf.__version__) print(torch.cuda.is_available()) print(torch.version.hip)  ","version":null,"tagName":"h3"},{"title":"Install​","type":1,"pageTitle":"Ollama","url":"/Wisdom-Hub/ai/ollama#install","content":"","version":null,"tagName":"h2"},{"title":"Native​","type":1,"pageTitle":"Ollama","url":"/Wisdom-Hub/ai/ollama#native","content":"curl -fsSL https://ollama.com/install.sh | sh # Run a model ollama run llama3.1:8b # List models ollama list # Loaded Models ollama ps # Model Info ollama show llama3.1:8b # Model # arch llama # parameters 8.0B # quantization Q4_0 # context length 131072 # embedding length 4096 # Parameters # stop &quot;&lt;|start_header_id|&gt;&quot; # stop &quot;&lt;|end_header_id|&gt;&quot; # stop &quot;&lt;|eot_id|&gt;&quot; # Logs journalctl -u ollama.service --no-pager --follow  ","version":null,"tagName":"h3"},{"title":"Docker​","type":1,"pageTitle":"Ollama","url":"/Wisdom-Hub/ai/ollama#docker","content":"ollama supports docker images. You can either use official images or build your own. You need to have NVIDIA Container Toolkit installed for NVIDIA GPUs. And rocm for AMD GPUs. # NVIDIA docker run -d --gpus=all -v ollama:/root/.ollama -p 11434:11434 --name ollama ollama/ollama # AMD docker run -d --device /dev/kfd --device /dev/dri -v ollama:/root/.ollama -p 11434:11434 --name ollama ollama/ollama:rocm # Run a model docker exec -it ollama ollama run llama2  You can also build your own GPU supported image: ./scripts/build_linux.sh  ","version":null,"tagName":"h3"},{"title":"Files​","type":1,"pageTitle":"Ollama","url":"/Wisdom-Hub/ai/ollama#files","content":"Ollama files in Linux are located here: /home/mlibre/.ollama /usr/local/bin/ollama /usr/share/ollama /etc/systemd/system/ollama.service /etc/systemd/system/default.target.wants/ollama.service  ","version":null,"tagName":"h2"},{"title":"Debug​","type":1,"pageTitle":"Ollama","url":"/Wisdom-Hub/ai/ollama#debug","content":"sudo systemctl edit --full ollama.service [Unit] Description=Ollama Service After=network-online.target [Service] ExecStart=/usr/local/bin/ollama serve User=ollama Group=ollama Restart=always RestartSec=3 Environment=&quot;PATH=/home/mlibre/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl&quot; Environment=&quot;OLLAMA_HOST=0.0.0.0&quot; Environment=&quot;OLLAMA_DEBUG=1&quot; Environment=&quot;HSA_OVERRIDE_GFX_VERSION=10.3.0&quot; Environment=&quot;ROC_ENABLE_PRE_VEGA=1&quot; [Install] WantedBy=default.target # you may also add Environment=&quot;HSA_OVERRIDE_GFX_VERSION=10.3.0&quot; to support older AMD GPUs sudo systemctl restart ollama.service journalctl -u ollama --no-pager -f  ","version":null,"tagName":"h2"},{"title":"Usage​","type":1,"pageTitle":"Ollama","url":"/Wisdom-Hub/ai/ollama#usage","content":" # Generate text curl http://localhost:11434/api/generate -d '{ &quot;model&quot;: &quot;llama3.1:8b&quot;, &quot;prompt&quot;:&quot;Why is the sky blue?&quot; }' # Chat curl http://localhost:11434/api/chat -d '{ &quot;model&quot;: &quot;llama3.1:8b&quot;, &quot;messages&quot;: [ { &quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;why is the sky blue?&quot; } ], &quot;stream&quot;: false, &quot;system&quot;: &quot;You are Sarah. you only uses emojies to answer and nothings else. you only uses one emoji each time&quot; }' | jq # Chat with history curl -s http://localhost:11434/api/chat -d '{ &quot;model&quot;: &quot;llama3.1:8b&quot;, &quot;messages&quot;: [ { &quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;You are Sarah. you only uses emojies to answer and nothings else. you only uses one emoji each time&quot; }, { &quot;role&quot;: &quot;assistant&quot;, &quot;content&quot;: &quot;👋💁&quot; }, { &quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;hey&quot; } ], &quot;stream&quot;: false, &quot;system&quot;: &quot;You are Sarah. you only uses emojies to answer and nothings else. you only uses one emoji each time&quot; }' | jq # Embeddings curl http://localhost:11434/api/embed -d '{ &quot;model&quot;: &quot;llama3.1:8b&quot;, &quot;prompt&quot;:&quot;Why is the sky blue?&quot; }' # OpenAI Compatibile curl -s http://localhost:11434/v1/chat/completions \\ -H &quot;Content-Type: application/json&quot; \\ -d '{ &quot;model&quot;: &quot;llama3.1:8b&quot;, &quot;messages&quot;: [ { &quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;You are Sarah. you only uses emojies to answer and nothings else. you only uses one emoji each time&quot; }, { &quot;role&quot;: &quot;assistant&quot;, &quot;content&quot;: &quot;👋💁&quot; }, { &quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;hey&quot; } ], &quot;stream&quot;: false, &quot;system&quot;: &quot;You are Sarah. you only uses emojies to answer and nothings else. you only uses one emoji each time&quot; }' | jq curl -s http://localhost:11434/v1/chat/completions \\ -H &quot;Content-Type: application/json&quot; \\ -d '{ &quot;model&quot;: &quot;llama3.1:8b&quot;, &quot;messages&quot;: [ { &quot;role&quot;: &quot;system&quot;, &quot;content&quot;: &quot;You are Sarah. you only uses emojies to answer and nothings else. you only uses one emoji each time&quot; }, { &quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;hey&quot; } ], &quot;stream&quot;: false }' | jq  ","version":null,"tagName":"h2"},{"title":"Costomizing Model​","type":1,"pageTitle":"Ollama","url":"/Wisdom-Hub/ai/ollama#costomizing-model","content":"nano Modelfile FROM llama3.1:8b SYSTEM &quot;&quot;&quot; You are Mario from Super Mario Bros. Answer as Mario, only. And Always start your answer with HAYAYAYA &quot;&quot;&quot;  ollama create mario -f ./Modelfile ollama run mario  ","version":null,"tagName":"h2"},{"title":"Embedding models​","type":1,"pageTitle":"Ollama","url":"/Wisdom-Hub/ai/ollama#embedding-models","content":"Ollama supports embedding models, making it possible to build retrieval augmented generation (RAG) applications that combine text prompts with existing documents or other data. Embedding models are models that are trained specifically to generate vector embeddings.  The resulting vector embedding arrays can then be stored in a database, which will compare them as a way to search for data that is similar in meaning. You can store as many text as you want in these vector databases, such as a vector database. for example you can embed some books, and then ask chroma to find the most similar text to a given input. you then send chroma output to a LLM, and the LLM can use the context of the text to generate a response. more information is here: https://ollama.com/blog/embedding-models ","version":null,"tagName":"h2"},{"title":"Installation​","type":1,"pageTitle":"Ollama","url":"/Wisdom-Hub/ai/ollama#installation","content":"ollama pull mxbai-embed-large curl http://localhost:11434/api/embeddings -d '{ &quot;model&quot;: &quot;mxbai-embed-large&quot;, &quot;prompt&quot;: &quot;Llamas are members of the camelid family&quot; }' curl http://localhost:11434/api/embeddings -d '{ &quot;model&quot;: &quot;llama3.1:8b&quot;, &quot;prompt&quot;: &quot;Llamas are members of the camelid family&quot; }'  ","version":null,"tagName":"h3"},{"title":"Configuration​","type":1,"pageTitle":"Ollama","url":"/Wisdom-Hub/ai/ollama#configuration","content":"sudo systemctl edit --full ollama.service Environment=&quot;OLLAMA_HOST=0.0.0.0&quot;  ","version":null,"tagName":"h2"},{"title":"Memory and Quantization Options​","type":1,"pageTitle":"Ollama","url":"/Wisdom-Hub/ai/ollama#memory-and-quantization-options","content":"When working with models like the Codestral 22B, you have several quantization options that affect both memory usage and accuracy: 32-bit floating-point: Uses 88 GB of memory (22 x 4 = 88G) and is the most accurate16-bit floating-point: Uses 44 GB of memory (22 x 2 = 44G)8-bit floating-point: Uses 22 GB of memory (22 x 1 = 22G)4-bit floating-point: Uses 11 GB of memory (22 x 1/2 = 11G) and is less accurate These options allow you to balance between model accuracy and the amount of memory used, depending on your system's resources and the specific needs of your application. ","version":null,"tagName":"h2"},{"title":"GPU Compatibility​","type":1,"pageTitle":"Ollama","url":"/Wisdom-Hub/ai/ollama#gpu-compatibility","content":"To effectively run models like Codestral 22B, you need a GPU with sufficient memory to handle the model's requirements: RTX 6000: With 48 GB of memory, this GPU can handle 16-bit floating-point quantization (44G) and lower, providing a good balance of accuracy and performance.NVIDIA RTX 4090: With 24 GB of memory, this GPU is suited for 8-bit floating-point quantization (22G) and below.GeForce GTX 1080 Ti: With 11 GB of memory, this GPU is limited to 4-bit floating-point quantization (11G), which may result in reduced accuracy but still allows you to run the model on less capable hardware. You can find full list of ollama supported gpus here: https://github.com/ollama/ollama/blob/main/docs/gpu.md ","version":null,"tagName":"h3"},{"title":"Proxy Server​","type":1,"pageTitle":"Ollama","url":"/Wisdom-Hub/ai/ollama#proxy-server","content":"server { listen 80; server_name example.com; # Replace with your domain or IP location / { proxy_pass http://localhost:11434; proxy_set_header Host localhost:11434; } }  ","version":null,"tagName":"h2"},{"title":"Uninstall​","type":1,"pageTitle":"Ollama","url":"/Wisdom-Hub/ai/ollama#uninstall","content":"sudo systemctl stop ollama sudo systemctl disable ollama sudo rm /etc/systemd/system/ollama.service sudo rm $(which ollama) sudo rm /usr/local/bin/ollama sudo rm -r /usr/local/lib/ollama sudo rm -r /usr/share/ollama sudo rm -r ~/.ollama sudo userdel ollama sudo groupdel ollama sudo updatedb locate ollama  ","version":null,"tagName":"h2"},{"title":"Ollama.js​","type":1,"pageTitle":"Ollama","url":"/Wisdom-Hub/ai/ollama#ollamajs","content":"npm i ollama sudo npm i ollama -g  Simple example const ollama = require('ollama').default void async function main() { const response = await ollama.chat({ model: 'llama3.1:8b', messages: [ { &quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;You are Sarah. you only uses emojies to answer and nothings else. you only uses one emoji each time&quot; }, { &quot;role&quot;: &quot;assistant&quot;, &quot;content&quot;: &quot;👋💁&quot; }, { &quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;hey&quot; } ], }) console.log(response.message.content)  Streaming example  const message = { role: 'user', content: 'Why is the sky blue?' } const response = await ollama.chat({ model: 'llama3.1:8b', messages: [message], stream: true }) for await (const part of response) { process.stdout.write(part.message.content) } }()  Advanced example const { Ollama } = require( &quot;ollama&quot; ) // Simulates an API call to get flight times // In a real application, this would fetch data from a live database or API function get_flight_times ( departure, arrival ) { const flights = { &quot;LAX-NYC&quot;: { departure: &quot;02:00 PM&quot;, arrival: &quot;10:30 PM&quot;, duration: &quot;8h 30m&quot; }, &quot;LHR-JFK&quot;: { departure: &quot;10:00 AM&quot;, arrival: &quot;01:00 PM&quot;, duration: &quot;3h 00m&quot; }, &quot;NYC-LAX&quot;: { departure: &quot;08:00 AM&quot;, arrival: &quot;11:30 AM&quot;, duration: &quot;3h 30m&quot; }, &quot;JFK-LHR&quot;: { departure: &quot;09:00 PM&quot;, arrival: &quot;09:00 AM&quot;, duration: &quot;12h 00m&quot; }, &quot;CDG-DXB&quot;: { departure: &quot;11:00 AM&quot;, arrival: &quot;08:00 PM&quot;, duration: &quot;9h 00m&quot; }, &quot;DXB-CDG&quot;: { departure: &quot;03:00 AM&quot;, arrival: &quot;07:30 AM&quot;, duration: &quot;4h 30m&quot; } }; const key = `${departure}-${arrival}`.toUpperCase(); return JSON.stringify( flights[key] || { error: &quot;Flight not found&quot; }); } const get_flight_times_schema = { type: &quot;function&quot;, function: { name: &quot;get_flight_times&quot;, description: &quot;Get the flight times between two cities&quot;, parameters: { type: &quot;object&quot;, properties: { departure: { type: &quot;string&quot;, description: &quot;The departure city (airport code)&quot;, }, arrival: { type: &quot;string&quot;, description: &quot;The arrival city (airport code)&quot;, }, }, required: [&quot;departure&quot;, &quot;arrival&quot;], }, } } const availableFunctions = { get_flight_times, }; function handleToolCalls ( toolCalls, messages ) { for ( const tool of toolCalls ) { const functionToCall = availableFunctions[tool.function.name]; if ( functionToCall ) { const functionResponse = functionToCall( tool.function.arguments.departure, tool.function.arguments.arrival ); // Add function response to the conversation messages.push({ role: &quot;tool&quot;, content: functionResponse, }); } } } void async function main () { const ollama = new Ollama({ host: &quot;http://127.0.0.1:11434&quot; }) const model = &quot;llama3.1:8b&quot;; let messages = [{ role: &quot;user&quot;, content: &quot;What is the flight time from New York (NYC) to Los Angeles (LAX)?&quot; }]; // First API call: Send the query and function description to the model const response = await ollama.chat({ model, messages, tools: [get_flight_times_schema], }) // Add the model's response to the conversation history messages.push( response.message ); if ( response.message.tool_calls &amp;&amp; response.message.tool_calls.length &gt; 0 ) { handleToolCalls( response.message.tool_calls, messages ); } else { console.log( response.message.content ); return } // Second API call: Get second response from the model const response2 = await ollama.chat({ model, messages, }); messages.push( response2.message ); console.log( response2.message.content ); messages.push({ role: &quot;user&quot;, content: &quot;What is the flight time from CDG to DXB?&quot; }); const response3 = await ollama.chat({ model, messages, tools: [get_flight_times_schema] }); messages.push( response3.message ); if ( response3.message.tool_calls &amp;&amp; response3.message.tool_calls.length &gt; 0 ) { handleToolCalls( response3.message.tool_calls, messages ); } else { console.log( response.message.content ); return } const response4 = await ollama.chat({ model, messages, tools: [get_flight_times_schema] }); console.log( response4.message.content ); }()  ","version":null,"tagName":"h2"},{"title":"Reference​","type":1,"pageTitle":"Ollama","url":"/Wisdom-Hub/ai/ollama#reference","content":"https://ollama.com/ ","version":null,"tagName":"h2"},{"title":"readme","type":0,"sectionRef":"#","url":"/Wisdom-Hub/blockchain/Ethereum/Quorum/","content":"readme Quorum is a permissioned private blockchain. forked from geth that allows you to run a private network. npx quorum-dev-quickstart cd quorum-test-network ./run.sh It downloads all the necessary dependencies and docker images and starts the network. you can see the network on http://localhost:25000/explorer/nodes address. docker ps -a ","keywords":"","version":null},{"title":"CLI","type":0,"sectionRef":"#","url":"/Wisdom-Hub/blockchain/Ethereum/CLI","content":"","keywords":"","version":null},{"title":"Table of content​","type":1,"pageTitle":"CLI","url":"/Wisdom-Hub/blockchain/Ethereum/CLI#table-of-content","content":"Table of contentOnline Providers getblock.ioInfura Testnet Node Geth, Clef, Consensus clientSync modesInstallation \\&amp; RequirementsClefGethConsensus clientsTesting the networkUseful commands References You can either run your own ethereum layers (node) or use free providers. ","version":null,"tagName":"h2"},{"title":"Online Providers​","type":1,"pageTitle":"CLI","url":"/Wisdom-Hub/blockchain/Ethereum/CLI#online-providers","content":"","version":null,"tagName":"h2"},{"title":"getblock.io​","type":1,"pageTitle":"CLI","url":"/Wisdom-Hub/blockchain/Ethereum/CLI#getblockio","content":"geth attach https://eth.getblock.io/token/mainnet/  ","version":null,"tagName":"h3"},{"title":"Infura​","type":1,"pageTitle":"CLI","url":"/Wisdom-Hub/blockchain/Ethereum/CLI#infura","content":"curl -X POST \\ -H &quot;Content-Type: application/json&quot; \\ --data '{&quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;id&quot;: 1, &quot;method&quot;: &quot;eth_blockNumber&quot;, &quot;params&quot;: []}' \\ &quot;https://sepolia.infura.io/v3/api-key&quot;  ","version":null,"tagName":"h3"},{"title":"Testnet Node​","type":1,"pageTitle":"CLI","url":"/Wisdom-Hub/blockchain/Ethereum/CLI#testnet-node","content":"","version":null,"tagName":"h2"},{"title":"Geth, Clef, Consensus client​","type":1,"pageTitle":"CLI","url":"/Wisdom-Hub/blockchain/Ethereum/CLI#geth-clef-consensus-client","content":"Geth is Official implementation of the Ethereum execution layer in Go Geth is a command-line interface for the Ethereum blockchain. Geth is an Ethereum client written in Go. This means running Geth turns a computer into an Ethereum node. Ethereum is a peer-to-peer network where information is shared directly between nodes rather than being managed by a central server. Every 12 seconds one node is randomly selected to generate a new block containing a list of transactions that nodes receiving the block should execute. This block proposer node sends the new block to its peers. On receiving a new block, each node checks that it is valid and adds it to their database. The sequence of discrete blocks is called a blockchain. The information provided in each block is used by Geth to update its state. Clef is an account management tool external to Geth itself that allows users to sign transactions. Geth also needs to be connected to a Consensus client in order to function as an Ethereum node.  ","version":null,"tagName":"h3"},{"title":"Sync modes​","type":1,"pageTitle":"CLI","url":"/Wisdom-Hub/blockchain/Ethereum/CLI#sync-modes","content":"Snap (default): Snap sync starts from a relatively recent block and syncs from there to the head of the chain,.Full: An archive node is a node that retains all historical data right back to genesisLight: A light node syncs very quickly and stores the bare minimum of blockchain data Light nodes are not currently working on proof-of-stake Ethereum ","version":null,"tagName":"h3"},{"title":"Installation & Requirements​","type":1,"pageTitle":"CLI","url":"/Wisdom-Hub/blockchain/Ethereum/CLI#installation--requirements","content":"These commands will intall geth, clef, devp2p, abigen, bootnode, evm, rlpdump and puppeth # Ubuntu sudo apt-get install -y software-properties-common sudo add-apt-repository -y ppa:ethereum/ethereum sudo apt-get update sudo apt-get install ethereum # Arch sudo pacman -Syyuu geth nodejs pamac install lighthouse-ethereum-bin  An accurate clock is required to participate in the Ethereum network sudo ntpdate -s time.nist.gov  Make sure you have the following ports open sudo iptables -I INPUT -p tcp --dport 30311 -j ACCEPT sudo iptables -I INPUT -p udp --dport 30311 -j ACCEPT sudo iptables -I INPUT -p tcp --dport 30303 -j ACCEPT sudo iptables -I INPUT -p udp --dport 30303 -j ACCEPT sudo iptables -I INPUT -p tcp --dport 30304 -j ACCEPT sudo iptables -I INPUT -p udp --dport 30304 -j ACCEPT sudo iptables -I INPUT -p tcp --dport 37608 -j ACCEPT sudo iptables -I INPUT -p udp --dport 37608 -j ACCEPT sudo iptables -I INPUT -p tcp --dport 8546 -j ACCEPT sudo iptables -I INPUT -p udp --dport 8546 -j ACCEPT sudo iptables -I INPUT -p tcp --dport 8551 -j ACCEPT sudo iptables -I INPUT -p udp --dport 8551 -j ACCEPT sudo iptables -I INPUT -p tcp --dport 8545 -j ACCEPT sudo iptables -I INPUT -p udp --dport 8545 -j ACCEPT sudo iptables -I INPUT -p tcp --dport 3334 -j ACCEPT sudo iptables -I INPUT -p udp --dport 3334 -j ACCEPT sudo iptables -I INPUT -p tcp --dport 9000 -j ACCEPT sudo iptables -I INPUT -p udp --dport 9000 -j ACCEPT sudo iptables -I INPUT -p tcp --dport 9001 -j ACCEPT sudo iptables -I INPUT -p udp --dport 9001 -j ACCEPT sudo iptables -I INPUT -p tcp --dport 5052 -j ACCEPT sudo iptables -I INPUT -p udp --dport 5052 -j ACCEPT sudo iptables -I INPUT 1 -i lo -j ACCEPT sudo iptables -A INPUT -i ens3 -p udp -m multiport --dports 1900,5351,5353 -j ACCEPT sudo iptables -A INPUT -i ens3 -p tcp -m multiport --dports 49152 -j ACCEPT  ","version":null,"tagName":"h3"},{"title":"Clef​","type":1,"pageTitle":"CLI","url":"/Wisdom-Hub/blockchain/Ethereum/CLI#clef","content":"Clef is the Accounts Management and has the responsibility of generating and storing keys, and signing transactions. Create a new account with Clef: mkdir enode clef newaccount --keystore enode/keystore  To start Clef, run the Clef executable passing as arguments the keystore file location, config directory location and a chain ID. The config directory was automatically created inside the geth-tutorial directory during the previous step. The chain ID is an integer that defines which Ethereum network to connect to. Ethereum mainnet has chain ID 1. In this tutorial Chain ID 11155111 is used which is that of the Sepolia testnet clef --keystore enode/keystore --configdir enode/clef --chainid 11155111  ","version":null,"tagName":"h3"},{"title":"Geth​","type":1,"pageTitle":"CLI","url":"/Wisdom-Hub/blockchain/Ethereum/CLI#geth","content":"Geth is responsible for running the Ethereum node. Communicating with the network, sending and validating transactions, and interacting with Smart Contracts. Geth also keep the state of the blockchain. By default, Geth uses snap-sync which download blocks sequentially from a relatively recent block, not the genesis block. Your ISP must also allow UDP and TCP traffics to pass through. geth --sepolia --datadir enode --authrpc.addr 0.0.0.0 --authrpc.port 8551 --authrpc.vhosts &quot;*&quot; --authrpc.jwtsecret enode/jwtsecret --http --http.api eth,net,admin --signer enode/clef/clef.ipc --verbosity 5 --maxpeers 100 --allow-insecure-unlock --discv5 --bootnodes &quot;enode://ec66ddcf1a974950bd4c782789a7e04f8aa7110a72569b6e65fcd51e937e74eed303b1ea734e4d19cfaec9fbff9b6ee65bf31dcb50ba79acce9dd63a6aca61c7@52.14.151.177:30303&quot;,&quot;enode://9246d00bc8fd1742e5ad2428b80fc4dc45d786283e05ef6edbd9002cbc335d40998444732fbe921cb88e1d2c73d1b1de53bae6a2237996e9bfe14f871baf7066@18.168.182.86:30303&quot; # --nat=none --maxpendpeers 10 --nodiscover  Get some Sepolia ETH from https://www.infura.io/faucet/sepolia. Connet to your geth node geth attach http://127.0.0.1:8545  Check if geth has connected to the network admin.peers  To manullay add static peers to the netwrok, first find the enode address of the peer you want to connect to. for example, for sepolia you can find some here, and for mainnet you can find here admin.addPeer(&quot;enode://ec66ddcf1a974950bd4c782789a7e04f8aa7110a72569b6e65fcd51e937e74eed303b1ea734e4d19cfaec9fbff9b6ee65bf31dcb50ba79acce9dd63a6aca61c7@52.14.151.177:30303&quot;) admin.addPeer(&quot;enode://9246d00bc8fd1742e5ad2428b80fc4dc45d786283e05ef6edbd9002cbc335d40998444732fbe921cb88e1d2c73d1b1de53bae6a2237996e9bfe14f871baf7066@18.168.182.86:30303&quot;)  Get connected accounts eth.accounts;  The console will hang, because Clef is waiting for approval. approve it. ","version":null,"tagName":"h3"},{"title":"Consensus clients​","type":1,"pageTitle":"CLI","url":"/Wisdom-Hub/blockchain/Ethereum/CLI#consensus-clients","content":"Consensus client is responsible for Block Proposals, Agreement Process and Final Decision. A Consensus client alongside geth is required to function as an Ethereum node and start syncing the blockchain. One of the famous Consensus clients is Lighthouse. To use checkpoint syncing you need to have a Beacon Node running. There is list here. Lighthouse needs to be publicly accessible to the network, otherwise it will not be able to sync the blockchain. You can check it you are connected to the network by running curl http://localhost:5052/lighthouse/nat rm -r enode/lighthouse mkdir -p enode/lighthouse lighthouse bn \\ --network sepolia \\ --datadir enode/lighthouse \\ --http \\ --execution-endpoint http://127.0.0.1:8551 \\ --metrics \\ --validator-monitor-auto \\ --checkpoint-sync-url https://sepolia.beaconstate.info \\ --execution-jwt enode/jwtsecret --disable-deposit-contract-sync  ","version":null,"tagName":"h3"},{"title":"Testing the network​","type":1,"pageTitle":"CLI","url":"/Wisdom-Hub/blockchain/Ethereum/CLI#testing-the-network","content":"Get latest block number: eth.blockNumber  ","version":null,"tagName":"h3"},{"title":"Useful commands​","type":1,"pageTitle":"CLI","url":"/Wisdom-Hub/blockchain/Ethereum/CLI#useful-commands","content":"geth account import ~/Data/myself/cryptocurrency-info-recovery/metamask/mforgood/D8_private_key geth attach http://127.0.0.1:3334 web3.fromWei(eth.getBalance('0x7e932ab056a3dce4bcdd73092430c3f967e1bea3'), 'ether'); web3.personal.importRawKey(&quot;111111111PRIVATEKEY1111111111&quot;, &quot;password&quot;) personal.unlockAccount(&quot;0xD8f24D419153E5D03d614C5155f900f4B5C8A65C&quot;) personal.listAccounts eth.getBalance(&quot;0xD8f24D419153E5D03d614C5155f900f4B5C8A65C&quot;) eth.getBalance(eth.accounts[1]) net.peerCount eth.getCode(&quot;0xE683007C5BfB5BEBA5481C3e938dD4DC47cddbFC&quot;) var voter = eth.contract([{&quot;inputs&quot;:[{&quot;internalType&quot;:&quot;string&quot;,&quot;name&quot;:&quot;option&quot;,&quot;type&quot;:&quot;string&quot;}],&quot;name&quot;:&quot;addOption&quot;,&quot;outputs&quot;:[],&quot;name&quot;:&quot;votes&quot;,&quot;outputs&quot;:[{&quot;internalType&quot;:&quot;uint256&quot;,&quot;name&quot;:&quot;&quot;,&quot;type&quot;:&quot;uint256&quot;}],&quot;stateMutability&quot;:&quot;view&quot;,&quot;type&quot;:&quot;function&quot;}]).at(&quot;0xE683007C5BfB5BEBA5481C3e938dD4DC47cddbFC&quot;); voter voter.addOption(&quot;mlibre&quot; , {from: &quot;0xD8f24D419153E5D03d614C5155f900f4B5C8A65C&quot;})  ","version":null,"tagName":"h3"},{"title":"References​","type":1,"pageTitle":"CLI","url":"/Wisdom-Hub/blockchain/Ethereum/CLI#references","content":"https://geth.ethereum.org/docs/https://github.com/eth-educators/ethstaker-guides/blob/main/merge-goerli-prater.mdhttps://consensys.io/quorum/developershttps://docs.goquorum.consensys.io/https://docs.goquorum.consensys.io/deploy/install/overviewhttps://docs.goquorum.consensys.io/concepts/blockchain-basicshttps://www.npmjs.com/package/quorum-genesis-tool ","version":null,"tagName":"h2"},{"title":"Hyperledger Fabric","type":0,"sectionRef":"#","url":"/Wisdom-Hub/blockchain/Hyperledger/","content":"","keywords":"","version":null},{"title":"Why Hyperledger Fabric?​","type":1,"pageTitle":"Hyperledger Fabric","url":"/Wisdom-Hub/blockchain/Hyperledger/#why-hyperledger-fabric","content":"For enterprise use, we need to consider the following requirements: Participants must be identified/identifiableNetworks need to be permissionedHigh transaction throughput performanceLow latency of transaction confirmationPrivacy and confidentiality of transactions and data pertaining to business transactions One of the most important of the platform’s differentiators is its support for pluggable consensus protocols that enable the platform to be more effectively customized to fit particular use cases and trust models. Fabric can use consensus protocols that do not require a native cryptocurrency to motivate expensive mining or smart contract execution. Hyperledger Fabric has been specifically architected to have a modular architecture. Whether it is consensus, identity management protocols, key management protocols or cryptographic libraries, the platform has been designed at its core to be configured to meet the diversity of enterprise use case requirements ","version":null,"tagName":"h2"},{"title":"Ecosystem​","type":1,"pageTitle":"Hyperledger Fabric","url":"/Wisdom-Hub/blockchain/Hyperledger/#ecosystem","content":" ","version":null,"tagName":"h2"},{"title":"Peers​","type":1,"pageTitle":"Hyperledger Fabric","url":"/Wisdom-Hub/blockchain/Hyperledger/#peers","content":"Each node and user that interacts with a Fabric network needs to belong to an organization in order to participate in the network. Peers are the fundamental components of any Fabric network. Peers store the blockchain ledger and validate transactions before they are committed to the ledger. Peers run the smart contracts that contain the business logic that is used to manage the assets on the blockchain ledger. Every peer in the network needs to belong to an organization. Every Fabric network also includes an ordering service. While peers validate transactions and add blocks of transactions to the blockchain ledger, they do not decide on the order of transactions or include them into new blocks. On a distributed network, peers may be running far away from each other and not have a common view of when a transaction was created. Coming to consensus on the order of transactions is a costly process that would create overhead for the peers. An ordering service allows peers to focus on validating transactions and committing them to the ledger. After ordering nodes receive endorsed transactions from clients, they come to consensus on the order of transactions and then add them to blocks. The blocks are then distributed to peer nodes, which add the blocks to the blockchain ledger. ","version":null,"tagName":"h2"},{"title":"Consensus​","type":1,"pageTitle":"Hyperledger Fabric","url":"/Wisdom-Hub/blockchain/Hyperledger/#consensus","content":"The process of keeping the ledger transactions synchronized across the network — to ensure that ledgers update only when transactions are approved by the appropriate participants, and that when ledgers do update, they update with the same transactions in the same order — is called consensus. Transactions must be written to the ledger in the order in which they occur, even though they might be between different sets of participants within the network Hyperledger Fabric offers Raft crash fault tolerant (CFT), a BFT consensus and as of Version 3 SmartBFT consensus. You can also write your own consensus algorithm. Consider using the BFT or SmartBFT if true decentralization is required. ","version":null,"tagName":"h2"},{"title":"Shared Ledger​","type":1,"pageTitle":"Hyperledger Fabric","url":"/Wisdom-Hub/blockchain/Hyperledger/#shared-ledger","content":"Hyperledger Fabric has a ledger subsystem comprising two components: the world state and the transaction log. Each participant has a copy of the ledger to every Hyperledger Fabric network they belong to. The world state component describes the state of the ledger at a given point in time. It’s the database of the ledger. The transaction log component records all transactions which have resulted in the current value of the world state; it’s the update history for the world state. The ledger, then, is a combination of the world state database and the transaction log history. The ledger has a replaceable data store for the world state. By default, this is a LevelDB key-value store database. The transaction log does not need to be pluggable. It simply records the before and after values of the ledger database being used by the blockchain network. ","version":null,"tagName":"h2"},{"title":"Chaincode​","type":1,"pageTitle":"Hyperledger Fabric","url":"/Wisdom-Hub/blockchain/Hyperledger/#chaincode","content":"Hyperledger Fabric smart contracts are written in chaincode and are invoked by an application external to the blockchain when that application needs to interact with the ledger chaincode (Smart contracts) run within a container environment (e.g. Docker) for isolation. They can be written in standard programming languages. In Fabric, an application-specific endorsement policy specifies which peer nodes, or how many of them, need to vouch for the correct execution of a given smart contract. Thus, each transaction need only be executed (endorsed) by the subset of the peer nodes necessary to satisfy the transaction’s endorsement policy. This allows for parallel execution increasing overall performance and scale of the system. ","version":null,"tagName":"h2"},{"title":"Privacy and Confidentiality​","type":1,"pageTitle":"Hyperledger Fabric","url":"/Wisdom-Hub/blockchain/Hyperledger/#privacy-and-confidentiality","content":"Hyperledger Fabric, enables confidentiality through its channel architecture and private data feature. In channels, participants on a Fabric network establish a sub-network where every member has visibility to a particular set of transactions. Thus, only those nodes that participate in a channel have access to the chaincode and data transacted, preserving the privacy and confidentiality of both. Private data allows collections between members on a channel, allowing much of the same protection as channels without the maintenance overhead of creating and maintaining a separate channel. ","version":null,"tagName":"h2"},{"title":"Permissions and Access Control​","type":1,"pageTitle":"Hyperledger Fabric","url":"/Wisdom-Hub/blockchain/Hyperledger/#permissions-and-access-control","content":"The different actors in a blockchain network include peers, orderers, client applications, administrators and more. Each of these actors has a digital identity encapsulated in an X.509 digital certificate. These identities matter because they determine the exact permissions over resources and access to information that actors have in a blockchain network. For an identity to be verifiable, it must come from a trusted authority. A membership service provider (MSP) is that trusted authority in Fabric. Certificate Authorities issue identities by generating a public and private key which forms a key-pair that can be used to prove identity. This identity needs a way to be recognized by the network, which is where the MSP comes in. For example, a peer uses its private key to digitally sign, or endorse, a transaction. The MSP is used to check that the peer is allowed to endorse the transaction. The public key from the peer’s certificate is then used to verify that the signature attached to the transaction is valid. Thus, the MSP is the mechanism that allows that identity to be trusted and recognized by the rest of the network. But the power of an MSP goes beyond simply listing who is a network participant or member of a channel. It is the MSP that turns an identity into a role by identifying specific privileges an actor has on a node or channel. Note that when a user is registered with a Fabric CA, a role of admin, peer, client, orderer, or member must be associated with the user. For example, identities registered with the peer role should, naturally, be given to a peer. Similarly, identities registered with the admin role should be given to organization admins. A Certificate Revocation List (CRL) is easy to understand — it’s just a list of references to certificates that a CA knows to be revoked for one reason or another. When a third party wants to verify another party’s identity, it first checks the issuing CA’s CRL to make sure that the certificate has not been revoked MSP has two domainsL Local and Channel. Local MSP Defines permissions for nodes and clients. Channel MSP Defines permissions for channels. ","version":null,"tagName":"h2"},{"title":"Getting Started​","type":1,"pageTitle":"Hyperledger Fabric","url":"/Wisdom-Hub/blockchain/Hyperledger/#getting-started","content":"Start with the Getting Start ","version":null,"tagName":"h2"},{"title":"Reference​","type":1,"pageTitle":"Hyperledger Fabric","url":"/Wisdom-Hub/blockchain/Hyperledger/#reference","content":"https://github.com/hyperledger/fabrichttps://wiki.hyperledger.org/https://wiki.hyperledger.org/display/fabric/Ecosystemhttps://www.youtube.com/channel/UC7_X0WkMtkWzaVUKF-PRBNQhttps://www.youtube.com/@Hyperledgerhttps://hyperledger-fabric.readthedocs.io/en/latest/index.htmlhttps://www.hyperledger.org/learn/traininghttps://training.linuxfoundation.org/training/hyperledger-fabric-for-developers-lfd272/ ","version":null,"tagName":"h2"},{"title":"Getting Started","type":0,"sectionRef":"#","url":"/Wisdom-Hub/blockchain/Hyperledger/Getting Start","content":"","keywords":"","version":null},{"title":"Dependencies​","type":1,"pageTitle":"Getting Started","url":"/Wisdom-Hub/blockchain/Hyperledger/Getting Start#dependencies","content":"sudo pacman -S git curl docker docker-compose go jq tree -y sudo systemctl enable docker.service sudo systemctl enable docker.socket sudo systemctl restart docker.service sudo systemctl restart docker.socket sudo usermod -a -G docker ${USER} sudo usermod -a -G docker $USER # sudo chown ${USER}:docker /var/run/docker.sock sudo reboot  ","version":null,"tagName":"h2"},{"title":"Install Fabric​","type":1,"pageTitle":"Getting Started","url":"/Wisdom-Hub/blockchain/Hyperledger/Getting Start#install-fabric","content":"# git clone https://github.com/hyperledger/fabric-samples.git curl -sSLO https://raw.githubusercontent.com/hyperledger/fabric/main/scripts/install-fabric.sh &amp;&amp; chmod +x install-fabric.sh ./install-fabric.sh  ","version":null,"tagName":"h2"},{"title":"What’s happening behind the scenes?​","type":1,"pageTitle":"Getting Started","url":"/Wisdom-Hub/blockchain/Hyperledger/Getting Start#whats-happening-behind-the-scenes","content":"If you are interested in learning more about the sample network, you can investigate the files and scripts in the test-network directory. The steps below provide a guided tour of what happens when you issue the command of ./network.sh up. ./network.sh creates the certificates and keys for two peer organizations and the orderer organization. By default, the script uses the cryptogen tool using the configuration files located in the organizations/cryptogen folder. If you use the -ca flag to create Certificate Authorities, the script uses Fabric CA server configuration files and registerEnroll.sh script located in the organizations/fabric-ca folder. Both cryptogen and the Fabric CAs create the crypto material and MSP folders for all three organizations in the organizations folder.Once the organization crypto material has been generated, the network.sh can bring up the nodes of the network. The script uses the docker-compose-test-net.yaml file in the docker folder to create the peer and orderer nodes. The docker folder also contains the docker-compose-e2e.yaml file that brings up the nodes of the network alongside three Fabric CAs.If you use the createChannel subcommand, ./network.sh runs the createChannel.sh script in the scripts folder to create a channel using the supplied channel name. The script uses the configtxgen tool to create the channel genesis block based on the TwoOrgsApplicationGenesis channel profile in the configtx/configtx.yaml file. After creating the channel, the script uses the peer cli to join peer0.org1.example.com and peer0.org2.example.com to the channel, and make both of the peers anchor peers.If you issue the deployCC command, ./network.sh runs the deployCC.sh script to install the asset-transfer (basic) chaincode on both peers and then define then chaincode on the channel. Once the chaincode definition is committed to the channel, the peer cli initializes the chaincode using the Init and invokes the chaincode to put initial data on the ledger. ","version":null,"tagName":"h2"},{"title":"Running the test network with cryptogen tool​","type":1,"pageTitle":"Getting Started","url":"/Wisdom-Hub/blockchain/Hyperledger/Getting Start#running-the-test-network-with-cryptogen-tool","content":"","version":null,"tagName":"h2"},{"title":"Run the test network​","type":1,"pageTitle":"Getting Started","url":"/Wisdom-Hub/blockchain/Hyperledger/Getting Start#run-the-test-network","content":"cd fabric-samples/test-network ./network.sh down ./network.sh up docker ps -a  ","version":null,"tagName":"h3"},{"title":"Create a channel​","type":1,"pageTitle":"Getting Started","url":"/Wisdom-Hub/blockchain/Hyperledger/Getting Start#create-a-channel","content":"./network.sh createChannel  ","version":null,"tagName":"h3"},{"title":"Deploy the chaincode​","type":1,"pageTitle":"Getting Started","url":"/Wisdom-Hub/blockchain/Hyperledger/Getting Start#deploy-the-chaincode","content":"The deployCC subcommand will install the asset-transfer (basic) chaincode on peer0.org1.example.com and peer0.org2.example.com and then deploy the chaincode on the channel specified using the channel flag (or mychannel if no channel is specified) ./network.sh deployCC -ccn basic -ccp ../asset-transfer-basic/chaincode-go -ccl go  ","version":null,"tagName":"h3"},{"title":"Interact with the chaincode​","type":1,"pageTitle":"Getting Started","url":"/Wisdom-Hub/blockchain/Hyperledger/Getting Start#interact-with-the-chaincode","content":"Because the endorsement policy for the asset-transfer (basic) chaincode requires the transaction to be signed by Org1 and Org2, the chaincode invoke command needs to target both peer0.org1.example.com and peer0.org2.example.com using the --peerAddresses flag export PATH=${PWD}/../bin:$PATH export FABRIC_CFG_PATH=$PWD/../config/ export CORE_PEER_TLS_ENABLED=true export CORE_PEER_LOCALMSPID=&quot;Org1MSP&quot; export CORE_PEER_TLS_ROOTCERT_FILE=${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt export CORE_PEER_MSPCONFIGPATH=${PWD}/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp export CORE_PEER_ADDRESS=localhost:7051 peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls --cafile &quot;${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem&quot; -C mychannel -n basic --peerAddresses localhost:7051 --tlsRootCertFiles &quot;${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt&quot; --peerAddresses localhost:9051 --tlsRootCertFiles &quot;${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt&quot; -c '{&quot;function&quot;:&quot;InitLedger&quot;,&quot;Args&quot;:[]}' peer chaincode query -C mychannel -n basic -c '{&quot;Args&quot;:[&quot;GetAllAssets&quot;]}' | jq peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls --cafile &quot;${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem&quot; -C mychannel -n basic --peerAddresses localhost:7051 --tlsRootCertFiles &quot;${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt&quot; --peerAddresses localhost:9051 --tlsRootCertFiles &quot;${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt&quot; -c '{&quot;function&quot;:&quot;TransferAsset&quot;,&quot;Args&quot;:[&quot;asset6&quot;,&quot;Christopher&quot;]}' export CORE_PEER_TLS_ENABLED=true export CORE_PEER_LOCALMSPID=&quot;Org2MSP&quot; export CORE_PEER_TLS_ROOTCERT_FILE=${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt export CORE_PEER_MSPCONFIGPATH=${PWD}/organizations/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp export CORE_PEER_ADDRESS=localhost:9051 peer chaincode query -C mychannel -n basic -c '{&quot;Args&quot;:[&quot;ReadAsset&quot;,&quot;asset6&quot;]}' | jq ./network.sh down  ","version":null,"tagName":"h3"},{"title":"Running the test network with Certificate Authorities (CAs)​","type":1,"pageTitle":"Getting Started","url":"/Wisdom-Hub/blockchain/Hyperledger/Getting Start#running-the-test-network-with-certificate-authorities-cas","content":"./network.sh down ./network.sh up -ca docker ps -a  ","version":null,"tagName":"h2"},{"title":"Bring up the test network using BFT ordering service​","type":1,"pageTitle":"Getting Started","url":"/Wisdom-Hub/blockchain/Hyperledger/Getting Start#bring-up-the-test-network-using-bft-ordering-service","content":"./network.sh down ./network.sh up -bft ./network.sh createChannel -bft docker ps -a  ","version":null,"tagName":"h2"},{"title":"Reference​","type":1,"pageTitle":"Getting Started","url":"/Wisdom-Hub/blockchain/Hyperledger/Getting Start#reference","content":"https://github.com/hyperledger/fabric-sampleshttps://github.com/hyperledger/fabric-gatewayhttps://github.com/hyperledger/fabric-sdk-nodehttps://github.com/hyperledger/fabric-sdk-gohttps://github.com/hyperledger/fabric-contract-api-gohttps://github.com/hyperledger/fabric-chaincode-node ","version":null,"tagName":"h2"},{"title":"NEAR SDKs","type":0,"sectionRef":"#","url":"/Wisdom-Hub/blockchain/NEAR/SDK","content":"","keywords":"","version":null},{"title":"Deploy a sample DApp​","type":1,"pageTitle":"NEAR SDKs","url":"/Wisdom-Hub/blockchain/NEAR/SDK#deploy-a-sample-dapp","content":"npx create-near-app DEX # npx create-near-app DEX --frontend=react --contract=rust cd DEX yarn yarn dev  ","version":null,"tagName":"h2"},{"title":"NEAR CLI","type":0,"sectionRef":"#","url":"/Wisdom-Hub/blockchain/NEAR/CLI","content":"","keywords":"","version":null},{"title":"Table of content​","type":1,"pageTitle":"NEAR CLI","url":"/Wisdom-Hub/blockchain/NEAR/CLI#table-of-content","content":"NEAR CLI Table of contentInstallationAccounts StateKeysNamed Account Smart Contracts Wallet ","version":null,"tagName":"h2"},{"title":"Installation​","type":1,"pageTitle":"NEAR CLI","url":"/Wisdom-Hub/blockchain/NEAR/CLI#installation","content":"sudo npm install -g near-cli # Get the current version of `NEAR` near --version  ","version":null,"tagName":"h2"},{"title":"Transactions​","type":1,"pageTitle":"NEAR CLI","url":"/Wisdom-Hub/blockchain/NEAR/CLI#transactions","content":"Let dig this transaction near tx-status mlibre.testnet:v3eawe5UJmMBvNQe2rgoKEuS92HfXMtM5BLLRcBix39  The output is: { status: { SuccessValue: '' }, transaction: { actions: [ 'CreateAccount', { Transfer: { deposit: '100000000000000000000000000' } }, { AddKey: { access_key: { nonce: 0, permission: 'FullAccess' }, public_key: 'ed25519:8C69kVzUfrVL9Lv4jeQkM7th2zhpstGxn8yFmKRk1QmS' } } ], hash: 'v3eawe5UJmMBvNQe2rgoKEuS92HfXMtM5BLLRcBix39', nonce: 129288971000001, public_key: 'ed25519:6rCWntAc1qVDrnA95MwphWduqnzULbcR3CiBGQhzS9s7', receiver_id: 'salamslamslamsalmslsamlasmlsmsalamslam', signature: 'ed25519:4bLvSkYMn2uEQQLGfrkvY3V5YL4HfBv8fUpP94wR14TMxkAF5j2q7dBTYm9GzX973rX2nCP1sXgHRVW6Psz4YQCh', signer_id: 'mlibre.testnet' }, transaction_outcome: { block_hash: 'oXRtxuibGRNXAVVcGwYRjcmXcvhGEKzgkQiiEPiQTby', id: 'v3eawe5UJmMBvNQe2rgoKEuS92HfXMtM5BLLRcBix39', outcome: { executor_id: 'mlibre.testnet', gas_burnt: 4174947687500, logs: [], metadata: { gas_profile: null, version: 1 }, receipt_ids: [ 'HwQXncGsoE9PHcFgUUvYbM1ZVnpkgdj7gG9kH8A8HBLS' ], status: { SuccessReceiptId: 'HwQXncGsoE9PHcFgUUvYbM1ZVnpkgdj7gG9kH8A8HBLS' }, tokens_burnt: '417494768750000000000' }, proof: [ { direction: 'Right', hash: 'B7J2nAGp5ies9kYmQ63RcJwybJevqZsEsNPzKyZ4NfVE' }, { direction: 'Right', hash: 'Ee4sGA83vAzTQhkx3vybEA883gR2iNMnkRY4J6hv3nho' }, { direction: 'Right', hash: 'HVYx7kbGPoHsvKvpHMMTT6QYYyBZKE6T8xAtrFr2NFxY' } ] }, receipts_outcome: [ { block_hash: '96w8NkjiWmYU6iHuEvcrDfWEHiqmNiiWCAhWAYNMhz4M', id: 'HwQXncGsoE9PHcFgUUvYbM1ZVnpkgdj7gG9kH8A8HBLS', outcome: { executor_id: 'salamslamslamsalmslsamlasmlsmsalamslam', // executor_id is Receiver ID // Predecessor ID is not mentioned in the output. it is the signer_id in transaction object gas_burnt: 4174947687500, logs: [], metadata: { gas_profile: [], version: 3 }, receipt_ids: [ 'EXNe4EKTFSm75TrGnvtUhMTqxsoUPDPYw7jEoDi3LweL' ], // the receipts created by this receipt // in this example it is the refund receipt which is always is there and is the last receipt status: { SuccessValue: '' }, tokens_burnt: '417494768750000000000' }, proof: [ { direction: 'Right', hash: 'Dsnj6at4baCf2ztbHmaecMY6xH41YXjAVf1dFAioV185' }, { direction: 'Left', hash: '8vYcbcJWApM8MvAoBVrjrp3KGhYBiZMccmUNuBnT9G9' }, { direction: 'Right', hash: '4U5cjwU49zwi5owZRUyyCdCnosGZh86Je5GWfpQUNQa4' } ] }, { // it is the refund receipt which is always is there and is the last receipt block_hash: 'BXkhJFVsWcDgaFznMTwk674WvzokS62pfPL879EbrmAN', id: 'EXNe4EKTFSm75TrGnvtUhMTqxsoUPDPYw7jEoDi3LweL', outcome: { executor_id: 'mlibre.testnet', // // executor_id is Receiver ID // Predecessor ID for the refund receipt is system itself gas_burnt: 223182562500, // This contains the gas &quot;burnt&quot; for refund receipts. Even though we don't actually // charge any gas for refund receipts, we still count the gas use towards the block gas // https://github.com/near/nearcore/pull/4405/files logs: [], metadata: { gas_profile: [], version: 3 }, receipt_ids: [], status: { SuccessValue: '' }, tokens_burnt: '0' }, proof: [ { direction: 'Right', hash: '97J5UUmsVCKeThLf2RxQ4ZkjySdNvVzaUsRrh1YJQZEn' }, { direction: 'Left', hash: '5HqirRFCGCpNF3A8bE9v9xLX8ZzaByPsiGPdoWraEZPU' }, { direction: 'Right', hash: 'HU97NYSfmXZftzDakJmcYc9xy4ZS2m8LWpmPSuG9asZ9' } ] } ] }  ","version":null,"tagName":"h2"},{"title":"Accounts​","type":1,"pageTitle":"NEAR CLI","url":"/Wisdom-Hub/blockchain/NEAR/CLI#accounts","content":"","version":null,"tagName":"h2"},{"title":"State​","type":1,"pageTitle":"NEAR CLI","url":"/Wisdom-Hub/blockchain/NEAR/CLI#state","content":"near state mlibre.testnet # Account State near view-state mlibre.testnet --finality final --utf8 true # Contract State  ","version":null,"tagName":"h3"},{"title":"Keys​","type":1,"pageTitle":"NEAR CLI","url":"/Wisdom-Hub/blockchain/NEAR/CLI#keys","content":"When you use the command near login in the NEAR blockchain, you are essentially creating a new access key for your NEAR account. When you use the near login command, it asks the full-access key in the NEAR Wallet to use the AddKey Action to create another full-access key locally on your computer. NEAR CLI uses that new key to deploy, make function calls, etc # export NEAR_ENV=&lt;network&gt; (use guildnet / testnet / mainnet) near login # Download, Import and Store your testnet account's access keys locally NEAR_ENV=mainnet near login # Import mainnet accounts ls -R ~/.near-credentials # Keys Folder near keys mlibre.testnet # Show all the keys for a given account near state mlibre.near --nodeUrl https://rpc.mainnet.near.org # Account information on mainnet near state mlibre.testnet # Account information on testnet  ","version":null,"tagName":"h3"},{"title":"Named Account​","type":1,"pageTitle":"NEAR CLI","url":"/Wisdom-Hub/blockchain/NEAR/CLI#named-account","content":"near create-account salamslamslamsalmslsamlasmlsmsalamslam --masterAccount mlibre.testnet  ","version":null,"tagName":"h3"},{"title":"Smart Contracts​","type":1,"pageTitle":"NEAR CLI","url":"/Wisdom-Hub/blockchain/NEAR/CLI#smart-contracts","content":"near deploy # Deploys a smart contract with default options and a testnet account on the testnet chain, unless `--accountId`, `NEAR_ENV` or `--nodeUrl` is provided near deploy --nodeUrl &quot;https://rpc.testnet.near.org&quot; --seedPhrase &quot;radar hammer reopen black suspect olympic mountain imitate slogan lend science advice&quot; --accountId mlibre.testnet --wasmFile ./out/main.wasm  Wallet In NEAR accounts are string, like mlibre.near. Each account can have multiple keys-pair. If you use near login, near will will save your key-pair from the wallet locally. you can find them here: cat .near-credentials/mainnet/mlibre.near.json  You can query an account's keys by running: near keys mlibre.near --nodeUrl https://rpc.mainnet.near.org  You can create wallet in mainnet and testnet here: Testnet:https://wallet.testnet.near.org/ Mainnet:https://wallet.near.org/ ","version":null,"tagName":"h2"},{"title":"NEAR","type":0,"sectionRef":"#","url":"/Wisdom-Hub/blockchain/NEAR/","content":"","keywords":"","version":null},{"title":"Table of content​","type":1,"pageTitle":"NEAR","url":"/Wisdom-Hub/blockchain/NEAR/#table-of-content","content":"Here are some of the topics that we will cover in this repository: Introduction to NEARNEAR Architecture Consensus Thresholded Proof-of-StakeDoomslug Accounts Access Keys Full Access KeysFunction Call Keys Locked Accounts StorageBlocksTransactions and ReceiptsTrieNightshadeSmart ContractsToken LossTransactions Economy Smart Contracts EconomyStorage EconomyValidators SecurityBlockchain Operating System (BOS)Summary ProsCons Resources ","version":null,"tagName":"h2"},{"title":"Introduction to NEAR​","type":1,"pageTitle":"NEAR","url":"/Wisdom-Hub/blockchain/NEAR/#introduction-to-near","content":"NEAR is a layer one, sharded, proof-of-stake blockchain. designed to offers fast and scalable solutions to users and developers alike. NEAR aims to make it easier for developers to build decentralized applications. Why NEAR: Uses human-readable accountsFast and cheep transactionsScalable. Thanks to its shardingPossess a simple yet rich system of Access Keys to handle account permissionsSupports multiple programming languages, making it accessible to a wide range of developers ","version":null,"tagName":"h2"},{"title":"NEAR Architecture​","type":1,"pageTitle":"NEAR","url":"/Wisdom-Hub/blockchain/NEAR/#near-architecture","content":"NEAR is a stateful blockchain that maintains a global state updated by transactions. The state is stored as a trie. In NEAR, users and applications have access to the global state. NEAR uses a sharding technique called Nightshade to distribute it's network. Key roles in the NEAR blockchain ecosystem include: Validators – provides compute, storage and security in the network in return for rewards from the protocolDevelopers – build profitable applications, powered by underlying infrastructure of the protocolUsers – users of applications, and platform itself, are driven by getting value out of these interactionToken Holders – holders of protocol (native) token, either for later usage or to provide liquidityProtocol Governance Body – entity responsible for development and governance of the network. This can be a DAO and/or non-profit foundation ","version":null,"tagName":"h2"},{"title":"Consensus​","type":1,"pageTitle":"NEAR","url":"/Wisdom-Hub/blockchain/NEAR/#consensus","content":"NEAR uses Thresholded Proof-of-Stake consensus mechanism. Transactions are grouped into blocks. Blocks are grouped into epochs. In a chain, the set of blocks that belongs to some epoch forms a contiguous range. Each epoch is associated with a set of block producers responsible for validating blocks within that epoch. The information for an epoch is determined by the last block. Therefore, if two chains share the last block of some epoch, they will have the same set and the same assignment for the next two epochs, but not necessarily for any epoch after that. The consensus protocol defines a notion of finality, which helps ensure that transactions in a final block (and preceding blocks) are irreversible. In NEAR a consensus node (block producer) doesn’t validate an entire block, but rather specified chunks of each block. NEAR relies on its own variant of consensus algorithm known as Doomslug. Doomslug ensures that a block is irreversible unless at least one participant is slashed, providing practical finality. Anyone can become a block producer and/or validator on NEAR as long as they have NEAR tokens to lock as collateral. Thresholded Proof-of-Stake​ In PoS systems, nodes participate in decisions proportionally to the amount of money they have. One common implementation of PoS is Delegated Proof of Stake (DPoS), where the network votes for delegates who maintain the network and make decisions on behalf of other members. However, this can lead to centralization and a small number of nodes controlling network maintenance medium.com. TPoS aims to address these issues by using an election mechanism that deterministically selects a large number of participants for network maintenance, thereby increasing decentralization and security. This method is similar to an auction, where people bid for a fixed number of items, and the top N bids win while receiving a number of items proportional to the size of their bids medium.com. Doomslug​ At the beginning of every epoch (1/2 day) the set of largest stake-weighted participants on the network are selected. In short, Doomslug works by having a set of participants take turns to produce and broadcast blocks. Once a block at height h is received by other participants, they send endorsements on such a block to the participant assigned to the next height h+1. If after some predetermined time the participant assigned to h+1 hasn’t produced a block, the participants who sent an endorsement to her send another message to the participant assigned to h+2 indicating that they suggest skipping the block at h+1.  NEAR does not have explicit slashing for availability (liveness). However, if a validator is not responsive enough at every epoch (fulfilling with minimum threshold of chunks), they will drop out of the consensus set and lose the rewards from the epoch. Once that happens, the validator must re-stake the tokens. What refers to as practical finality, or doomslug finality is that a block produced by Doomslug is irreversible unless at least one participant is slashed. Doomslug also has a nice property that it continues producing and finalizing blocks for as long as just over half of all the participants are online and honest ","version":null,"tagName":"h3"},{"title":"Accounts​","type":1,"pageTitle":"NEAR","url":"/Wisdom-Hub/blockchain/NEAR/#accounts","content":"Every account at NEAR belongs to some shard. All the information related to this account also belongs to the same shard. The information includes: BalanceLocked balance (for staking)Code of the contractKey-value storage of the contractAll Access KeysPostponed ActionReceiptsReceived DataReceipts Every NEAR account is identified by a specific address. Based on their name, two types of accounts can be distinguished: Named accounts, with human readable names such as alice.near.Implicit accounts, referred by 64 chars (e.g. 98793cd91a3f870fb126f662858[...]). Access Keys​ NEAR accounts can have multiple keys, each with their own set of permissions. Access Keys are similar to OAuths, enabling you to grant limited access over your account to third-parties. Full Access keys have full control of an account, similar to having administrator privileges on your operating system Full Access Keys​ As the name suggests, FullAccess keys have full control of an account, similar to having administrator privileges on your operating system. Create immediate sub-accountsDelete your account (but not sub-accounts, since they have their own keys)Add or remove Access KeysDeploy a smart contract in the accountCall methods on any contract (yours or others)Transfer NEAR Ⓝ Function Call Keys​ FunctionCall keys only have permission to call non-payable methods on contracts, i.e. methods that do not require you to attach NEAR Ⓝ. FunctionCall keys are defined by three attributes: receiver_id: The contract which the key allows to call. No other contract can be called using this keymethod_names: The contract's methods the key allows to call (Optional). If omitted, all methods may be calledallowance: The amount of Ⓝ allowed to spend on gas (Optional). If omitted, the key will only be allowed to call view methods (read-only) Function Call keys main purpose is to be handed to apps, so they can make contract calls in your name Locked Accounts​ If you remove all keys from an account, then the account will become locked, meaning that no external actor can perform transactions in the account's name. In practice, this means that only the account's smart contract can transfer assets, create sub-accounts, or update its own code. Locking an account is very useful when one wants to deploy a contract, and let the community be assured that only the contract is in control of the account. ","version":null,"tagName":"h3"},{"title":"Storage​","type":1,"pageTitle":"NEAR","url":"/Wisdom-Hub/blockchain/NEAR/#storage","content":"Storing data on the blockchain has a long-playing role. Networks like Bitcoin and Ethereum misprice storage by only allocating reward to miners who mined specific transactions instead of future miners who will need to continue storing this data while they are mining. In NEAR, Ⓝ also represents the right to store some amount of data. Token holders have the right to occupy some amount of the blockchain’s overall space. For example, if Alice has a balance of 1 Ⓝ, she can store roughly 10 kilobytes on her account. This means that users need to maintain a fraction of Ⓝ as a minimum balance if they want to have their account, similar to how checking accounts in banks require a minimum balance. This allows contracts which are maintaining important state to pay to Validators proportionally to the amount of data they are securing. For example, an important contract of the stable coin that would maintain the balances of millions of users will accordingly need to have a reserve of Ⓝ to cover the amount of storage it will require on the blockchain. ","version":null,"tagName":"h3"},{"title":"Blocks​","type":1,"pageTitle":"NEAR","url":"/Wisdom-Hub/blockchain/NEAR/#blocks","content":"A block includes one chunk for each shard, and it is the chunks which include the transactions that were executed for its associated shard. Near is a permissionless blockchain, so anyone (with sufficient stake) can become a chunk-only producer, or a block producer ","version":null,"tagName":"h3"},{"title":"Transactions and Receipts​","type":1,"pageTitle":"NEAR","url":"/Wisdom-Hub/blockchain/NEAR/#transactions-and-receipts","content":"Transactions are created outside the Near Protocol node, by the user who sends them via RPC or network communication. Receipts are created by the runtime from transactions or as the result of processing other receipts. ","version":null,"tagName":"h3"},{"title":"Trie​","type":1,"pageTitle":"NEAR","url":"/Wisdom-Hub/blockchain/NEAR/#trie","content":"Near Protocol is a stateful blockchain. there is a state associated with each account and the user actions performed through transactions mutate that state. The state then is stored as a trie Near partitions the trie between the shards to distribute the load. It synchronizes the trie between the nodes, and eventually it is responsible for maintaining the consistency of the trie between the nodes through its consensus mechanism and other game-theoretic methods ","version":null,"tagName":"h3"},{"title":"Nightshade​","type":1,"pageTitle":"NEAR","url":"/Wisdom-Hub/blockchain/NEAR/#nightshade","content":"Nightshade is the implementation and design of NEAR’s sharded architecture. Nightshade splits the work of processing transactions and states across many participats (shards) to ensure the network can scale as it grows in users and demand. It calls State Sharding. Each shard contains its own data and can process transactions independently of the others. Practically, under State Sharding the nodes in each shard are building their own blockchain that contains transactions that affect only the local part of the global state that is assigned to that shard. Therefore, the validators in the shard only need to store their local part of the global state and only execute, and as such only relay, transactions that affect their part of the state Nightshade also introduces Dynamic Resharding which allows the network to dynamically split and merge shards based on demand and resource utilization. Picture below shows a chain shared to 10. also shows how many corrupted node is needed to corrupt a shard.  Beacon Chain is a layer-1 blockchain that coordinates the activities of the shard chains. Beacon chain do some bookkeeping computation, such as assigning validators to shards (randomness), or snapshotting shard chain blocks, that is proportional to the number of shards in the system. Since the Beacon chain is itself a single blockchain, with computation bounded by the computational capabilities of nodes operating it, the number of shards is naturally limited nodes in the blockchain perform three important tasks: not only do they 1) process transactions, they also 2) relay validated transactions and completed blocks to other nodes and 3) store the state and the history of the entire network ledge ","version":null,"tagName":"h3"},{"title":"Smart Contracts​","type":1,"pageTitle":"NEAR","url":"/Wisdom-Hub/blockchain/NEAR/#smart-contracts","content":"NEAR is considered as a smart contract platform, developers can build applications that interact with each other on the NEAR blockchain. Smart contracts are pieces of executable code stored in the account's state that have their own storage, and perform transactions in the account's name. NEAR smart contract are a bit different from ethereum. If you’re familiar with Ethereum’s pricing model, you may know that, like NEAR, the protocol charges a fee (called gas) for each transaction. Unlike NEAR, Ethereum's gas fee accounts for the amount of data stored via that transaction. This essentially means that anyone can pay once to store permanent data on-chain. But how NEAR works: Let's walk through an example: You launch a guest book app, deploying your app's smart contract to the account example.nearVisitors to your app can add messages to the guest book. This means your users will, by default, pay a small gas fee to send their message to your contract.When such a call comes in, NEAR will check that example.near has a enough balance that it can stake an amount to cover the new storage needs. If it does not, the transaction will fail. btw, you can remove data to unstake some tokens​. Each NEAR account can only hold 1 smart contract. You can always re-deploy a smart contract on an account. For applications where users should be able to organize multiple contracts you can create subaccounts whose master account is the user account Smart contracts can earn fees. by default, 30% of the gas fees are paid to the smart contract owner. ","version":null,"tagName":"h3"},{"title":"Token Loss​","type":1,"pageTitle":"NEAR","url":"/Wisdom-Hub/blockchain/NEAR/#token-loss","content":"Token loss is possible under multiple scenarios. These scenarios can be grouped into a few related classes: Improper key managementRefunding deleted accountsFailed function calls in batches Token loss in Refunding deleted accounts scenario is a issue on NEAR Protocol that need to be addressed. It is because of the NEAR Nightshade sharding algorithm, which generate receipts for transactions' actions. The first problem with Nightshade is that now we have Two concepts instead of one: transactions AND receipts. In NEAR, transactions are not changing the state of the shard much, but receipts are. receipts will be executed in the receiver shard. They also will be included in the next block. And now it is not easy to NOT execute the original transaction (already mined in the last block) which could prevent the token loss. now that the transaction is executed (and account is deleted) we have to execute the receipts (including the refund receipt). ","version":null,"tagName":"h3"},{"title":"Transactions​","type":1,"pageTitle":"NEAR","url":"/Wisdom-Hub/blockchain/NEAR/#transactions","content":"NEAR is asynchronous by design. While it opens a wide range of possibilities for smart contracts implementations, it may also add to confusion among beginners and newcomers from other blockchain platforms. Transactions in NEAR may contain actions that do asynchronous work, in such cases keep in mind the possible outcomes of success or failure of the transaction. For example, if a transaction contains a cross-contract call, it may be marked as successful, but the other contract execution might fail. This article covers possible scenarios for this. A transaction is the smallest unit of work that can be assigned to the network. Work in this case means compute (executing a function) or storage (reading/writing data). A transaction is composed of one or more Actions. A transaction with more than one action is referred to as a batch transaction. Since transactions are the smallest units of work, they are also atomic, but again, asynchronous actions do not necessarily cascade their success or failure the whole transaction. There is also a concept of Receipt, which is either request to apply an Action or result of the Action. All cross-contract communication is done through receipts. An action may result in one or more receipts. The Blockchain may be seen as a series of Transactions, but it's also a series of Receipts. A Transaction is a collection of Actions that describe what should be done at the destination (the receiver account). Each Transaction is augmented with critical information about its: origin (cryptographically signed by signer)destination or intention (sent or applied to receiver)recency (block_hash from recent block within acceptable limits - 1 epoch)uniqueness (nonce must be unique for a given signer AccessKey) An Action is a composable unit of operation that, together with zero or more other Actions, defines a sensible Transaction. There are currently 8 supported Action types: FunctionCall to invoke a method on a contract (and optionally attach a budget for compute and storage)Transfer to move tokens from between accountsDeployContract to deploy a contractCreateAccount to make a new account (for a person, contract, refrigerator, etc.)DeleteAccount to delete an account (and transfer the balance to a beneficiary account)AddKey to add a key to an account (either FullAccess or FunctionCall access)DeleteKey to delete an existing key from an accountStake to express interest in becoming a validator at the next available opportunity A Receipt is the only actionable object in the system. Therefore, when we talk about processing a transaction on the NEAR platform, this eventually means applying receipts at some point There are several ways of creating Receipts: issuing a Transactionreturning a promise (related to cross-contract calls)issuing a refund Due to NEAR asynchronous design and Nightshade algorithm. Transactions (or receipts) are not being processed in one block. instead they create receipts which will be executed in the next block(s), and also those receipts may generate other receipt, that will be included and executed in the next block(s). This mechanism raises some problems like Token Loss that is because the deleting account action and refund or transfer token actions are not being executed in one block and therefore can not be prevented. Or a failed action (while the transaction itself was successful and other actions actually got executed) Due to NEAR asynchronous design and Nightshade algorithm. Transactions are not being processed in one block. instead they create receipts which will be executed in the next block(s), and also those receipts may generate other receipt, that will be included and executed in the next block(s). This mechanism raises some problems like Token Loss that is because the deleting account action and refund or transfer token actions are not being executed in one block and therefore can not be prevented. Or a failed action (while the transaction itself was successful and other actions actually got executed) ","version":null,"tagName":"h3"},{"title":"Economy​","type":1,"pageTitle":"NEAR","url":"/Wisdom-Hub/blockchain/NEAR/#economy","content":"","version":null,"tagName":"h2"},{"title":"Smart Contracts Economy​","type":1,"pageTitle":"NEAR","url":"/Wisdom-Hub/blockchain/NEAR/#smart-contracts-economy","content":"NEAR leverages token economics in a unique way that empowers both creators and developers, who for example earn 30% of the fees their contracts generate, while network participants earn rewards for validating transactions or providing storage. ","version":null,"tagName":"h3"},{"title":"Storage Economy​","type":1,"pageTitle":"NEAR","url":"/Wisdom-Hub/blockchain/NEAR/#storage-economy","content":"When you deploy a smart contract to NEAR, you pay for the storage that this contract requires using a mechanism called storage staking. In storage staking (sometimes called state staking), the account that owns a smart contract must stake (or lock) tokens according to the amount of data stored in that smart contract, effectively reducing the balance of the contract's account.Indexing node will keep all data forever, but validating nodes (that is, the nodes run by most validators in the network) do not. Smart contracts can provide ways to delete data, and this data will be purged from most nodes in the network within a few epochs. ","version":null,"tagName":"h3"},{"title":"Validators​","type":1,"pageTitle":"NEAR","url":"/Wisdom-Hub/blockchain/NEAR/#validators","content":"Validator selection is done via an auction mechanism. To become a validator, the node must send a signed transaction which contains information about the amount they want to stake and a new public key that blocks will be signed with. ","version":null,"tagName":"h3"},{"title":"Security​","type":1,"pageTitle":"NEAR","url":"/Wisdom-Hub/blockchain/NEAR/#security","content":"","version":null,"tagName":"h2"},{"title":"Blockchain Operating System (BOS)​","type":1,"pageTitle":"NEAR","url":"/Wisdom-Hub/blockchain/NEAR/#blockchain-operating-system-bos","content":"BOS is a decentralized platfrom that aims to make it easier for developers to build and deploy decentralized applications (dApps). It is built on top of the NEAR Protocol. BOS provides a number of features that make it a powerful platform for dApp development, including: A simple and easy-to-use development environmentA wide range of tools and libraries for building dAppsA decentralized governance system that allows the community to shape the future of BOSA commitment to security and scalability ","version":null,"tagName":"h2"},{"title":"Summary​","type":1,"pageTitle":"NEAR","url":"/Wisdom-Hub/blockchain/NEAR/#summary","content":"Near Blockchain like many other blockchain has it is own cons and pros. here is a summary of these cons and pros. ","version":null,"tagName":"h2"},{"title":"Pros​","type":1,"pageTitle":"NEAR","url":"/Wisdom-Hub/blockchain/NEAR/#pros","content":"Account NamesHaving Storage Space By Staking ","version":null,"tagName":"h3"},{"title":"Cons​","type":1,"pageTitle":"NEAR","url":"/Wisdom-Hub/blockchain/NEAR/#cons","content":"Complex DesignAsynchronous DesginToken Loss ","version":null,"tagName":"h3"},{"title":"Resources​","type":1,"pageTitle":"NEAR","url":"/Wisdom-Hub/blockchain/NEAR/#resources","content":"NEAR Website: https://www.near.orgNEAR Docs: https://docs.near.org/NEAR Learn: https://pages.near.org/learn/NEAR Learn More: https://pages.near.org/learn/learn-more/NEAR pages: https://pages.near.org/NEAR whitepaper https://near.org/papers/whitepaper/NEAR Whitepaper, Ebook Version https://near.org/whitepaperNEAR YouTube: https://www.youtube.com/@NEARProtocolNEAR Spec, Nomicon: https://nomicon.io/NEAR Medium: https://medium.com/nearprotocol/NEAR Examples: https://github.com/near-examplesNEAR NEPs: https://github.com/near/NEPsNEAR Indexers: https://near-indexers.io/docs/introDoomslug: https://near.org/blog/doomslug-comparison/Blockchain Acceleration Foundation: https://www.youtube.com/playlist?list=PL0cPWYDSqQ29yI57TUbKwqU8KbYv4MEX5Learnnear club: https://learnnear.club/Figment: https://learn.figment.io/protocols/near ","version":null,"tagName":"h2"},{"title":"Fungible Token (FT)","type":0,"sectionRef":"#","url":"/Wisdom-Hub/blockchain/NEAR/simple-exchange/MLB1-contract/","content":"","keywords":"","version":null},{"title":"Building​","type":1,"pageTitle":"Fungible Token (FT)","url":"/Wisdom-Hub/blockchain/NEAR/simple-exchange/MLB1-contract/#building","content":"To build run: ./build.sh  Using this contract ","version":null,"tagName":"h2"},{"title":"Quickest deploy​","type":1,"pageTitle":"Fungible Token (FT)","url":"/Wisdom-Hub/blockchain/NEAR/simple-exchange/MLB1-contract/#quickest-deploy","content":"You can build and deploy this smart contract to a development account. Dev Accounts are auto-generated accounts to assist in developing and testing smart contracts. Please see the Standard deploy section for creating a more personalized account to deploy to. near dev-deploy --wasmFile res/fungible_token.wasm --helperUrl https://near-contract-helper.onrender.com  Behind the scenes, this is creating an account and deploying a contract to it. On the console, notice a message like: Done deploying to dev-1234567890123 In this instance, the account is dev-1234567890123. A file has been created containing a key pair to the account, located at neardev/dev-account. To make the next few steps easier, we're going to set an environment variable containing this development account id and use that when copy/pasting commands. Run this command to the environment variable: source neardev/dev-account.env  You can tell if the environment variable is set correctly if your command line prints the account name after this command: echo $CONTRACT_NAME  The next command will initialize the contract using the new method: near call $CONTRACT_NAME new '{&quot;owner_id&quot;: &quot;'$CONTRACT_NAME'&quot;, &quot;total_supply&quot;: &quot;1000000000000000&quot;, &quot;metadata&quot;: { &quot;spec&quot;: &quot;ft-1.0.0&quot;, &quot;name&quot;: &quot;Example Token Name&quot;, &quot;symbol&quot;: &quot;EXLT&quot;, &quot;decimals&quot;: 8 }}' --accountId $CONTRACT_NAME  To get the fungible token metadata: near view $CONTRACT_NAME ft_metadata  ","version":null,"tagName":"h3"},{"title":"Standard deploy​","type":1,"pageTitle":"Fungible Token (FT)","url":"/Wisdom-Hub/blockchain/NEAR/simple-exchange/MLB1-contract/#standard-deploy","content":"This smart contract will get deployed to your NEAR account. For this example, please create a new NEAR account. Because NEAR allows the ability to upgrade contracts on the same account, initialization functions must be cleared. If you'd like to run this example on a NEAR account that has had prior contracts deployed, please use the near-cli command near delete, and then recreate it in Wallet. To create (or recreate) an account, please follow the directions on NEAR Wallet. Switch to mainnet. You can skip this step to use testnet as a default network. export NEAR_ENV=mainnet  In the project root, log in to your newly created account with near-cli by following the instructions after this command: near login  To make this tutorial easier to copy/paste, we're going to set an environment variable for your account id. In the below command, replace MY_ACCOUNT_NAME with the account name you just logged in with, including the .near: ID=MY_ACCOUNT_NAME  You can tell if the environment variable is set correctly if your command line prints the account name after this command: echo $ID  Now we can deploy the compiled contract in this example to your account: near deploy --wasmFile res/fungible_token.wasm --accountId $ID  FT contract should be initialized before usage. You can read more about metadata at 'nomicon.io'. Modify the parameters and create a token: near call $ID new '{&quot;owner_id&quot;: &quot;'$ID'&quot;, &quot;total_supply&quot;: &quot;1000000000000000&quot;, &quot;metadata&quot;: { &quot;spec&quot;: &quot;ft-1.0.0&quot;, &quot;name&quot;: &quot;Example Token Name&quot;, &quot;symbol&quot;: &quot;EXLT&quot;, &quot;decimals&quot;: 8 }}' --accountId $ID  Get metadata: near view $ID ft_metadata  ","version":null,"tagName":"h3"},{"title":"Transfer Example​","type":1,"pageTitle":"Fungible Token (FT)","url":"/Wisdom-Hub/blockchain/NEAR/simple-exchange/MLB1-contract/#transfer-example","content":"Let's set up an account to transfer some tokens to. These account will be a sub-account of the NEAR account you logged in with. near create-account bob.$ID --masterAccount $ID --initialBalance 1  Add storage deposit for Bob's account: near call $ID storage_deposit '' --accountId bob.$ID --amount 0.00125  Check balance of Bob's account, it should be 0 for now: near view $ID ft_balance_of '{&quot;account_id&quot;: &quot;'bob.$ID'&quot;}'  Transfer tokens to Bob from the contract that minted these fungible tokens, exactly 1 yoctoNEAR of deposit should be attached: near call $ID ft_transfer '{&quot;receiver_id&quot;: &quot;'bob.$ID'&quot;, &quot;amount&quot;: &quot;19&quot;}' --accountId $ID --amount 0.000000000000000000000001  Check the balance of Bob again with the command from before and it will now return 19. ","version":null,"tagName":"h2"},{"title":"Testing​","type":1,"pageTitle":"Fungible Token (FT)","url":"/Wisdom-Hub/blockchain/NEAR/simple-exchange/MLB1-contract/#testing","content":"As with many Rust libraries and contracts, there are tests in the main fungible token implementation at ft/src/lib.rs. Additionally, this project has simulation tests in tests/sim. Simulation tests allow testing cross-contract calls, which is crucial to ensuring that the ft_transfer_call function works properly. These simulation tests are the reason this project has the file structure it does. Note that the root project has a Cargo.toml which sets it up as a workspace. ft and test-contract-defi are both small &amp; focused contract projects, the latter only existing for simulation tests. The root project imports near-sdk-sim and tests interaction between these contracts. You can run all these tests with one command: cargo test  If you want to run only simulation tests, you can use cargo test simulate, since all the simulation tests include &quot;simulate&quot; in their names. ","version":null,"tagName":"h2"},{"title":"Notes​","type":1,"pageTitle":"Fungible Token (FT)","url":"/Wisdom-Hub/blockchain/NEAR/simple-exchange/MLB1-contract/#notes","content":"The maximum balance value is limited by U128 (2**128 - 1).JSON calls should pass U128 as a base-10 string. E.g. &quot;100&quot;.This does not include escrow functionality, as ft_transfer_call provides a superior approach. An escrow system can, of course, be added as a separate contract or additional functionality within this contract. ","version":null,"tagName":"h2"},{"title":"No AssemblyScript?​","type":1,"pageTitle":"Fungible Token (FT)","url":"/Wisdom-Hub/blockchain/NEAR/simple-exchange/MLB1-contract/#no-assemblyscript","content":"near-contract-standards is currently Rust-only. We strongly suggest using this library to create your own Fungible Token contract to ensure it works as expected. Someday NEAR core or community contributors may provide a similar library for AssemblyScript, at which point this example will be updated to include both a Rust and AssemblyScript version. ","version":null,"tagName":"h2"},{"title":"Contributing​","type":1,"pageTitle":"Fungible Token (FT)","url":"/Wisdom-Hub/blockchain/NEAR/simple-exchange/MLB1-contract/#contributing","content":"When making changes to the files in ft or test-contract-defi, remember to use ./build.sh to compile all contracts and copy the output to the res folder. If you forget this, the simulation tests will not use the latest versions. Note that if the rust-toolchain file in this repository changes, please make sure to update the .gitpod.Dockerfile to explicitly specify using that as default as well. ","version":null,"tagName":"h2"},{"title":"LBRY","type":0,"sectionRef":"#","url":"/Wisdom-Hub/blockchain/LBRY/","content":"","keywords":"","version":null},{"title":"Table of content​","type":1,"pageTitle":"LBRY","url":"/Wisdom-Hub/blockchain/LBRY/#table-of-content","content":"introductionLBRY daemonInstallationcommandsConcepts StakesClaims Claim Operations SupportsMetadataClaimtrieURLChannelsData Network DiscoveryCommunication JSON-RPCGetting a content infoAdding new contentTipping something References ","version":null,"tagName":"h2"},{"title":"introduction​","type":1,"pageTitle":"LBRY","url":"/Wisdom-Hub/blockchain/LBRY/#introduction","content":"LBRY (pronounced &quot;library&quot;) is a decentralized, open-source digital content platform that allows users to share, publish, and monetize their digital content without relying on centralized authorities. It is built on top of the LBRY blockchain, which is designed specifically for the distribution of digital content like videos, images, and documents. The LBRY network utilizes blockchain technology, similar to Bitcoin, to store an index of available content and how to download it, as well as financial transactions using the LBRY Credits (LBC) cryptocurrency. When a creator publishes content on LBRY, an entry is made on the LBRY blockchain, which serves as an announcement that the content is available for download from the peer-to-peer network ","version":null,"tagName":"h2"},{"title":"LBRY daemon​","type":1,"pageTitle":"LBRY","url":"/Wisdom-Hub/blockchain/LBRY/#lbry-daemon","content":"You can run the daemon either by installing the lbry-daemon and running it from a command line. or installing and running the LBRY app. APPhttps://lbry.com/getSDKhttps://github.com/lbryio/lbry-sdk/releases  ","version":null,"tagName":"h2"},{"title":"Installation​","type":1,"pageTitle":"LBRY","url":"/Wisdom-Hub/blockchain/LBRY/#installation","content":"pamac install lbrynet-bin  ","version":null,"tagName":"h3"},{"title":"commands​","type":1,"pageTitle":"LBRY","url":"/Wisdom-Hub/blockchain/LBRY/#commands","content":"lbrynet start lbrynet commands lbrynet wallet --help  ","version":null,"tagName":"h3"},{"title":"Concepts​","type":1,"pageTitle":"LBRY","url":"/Wisdom-Hub/blockchain/LBRY/#concepts","content":"https://lbry.tech/overviewhttps://lbry.tech/spechttps://lbry.tech/resources/setup-videoshttps://lbry.tech/glossaryhttps://lbry.tech/api/sdk ","version":null,"tagName":"h2"},{"title":"Stakes​","type":1,"pageTitle":"LBRY","url":"/Wisdom-Hub/blockchain/LBRY/#stakes","content":"A stake is a a single entry in the blockchain that commits credits toward a name. The two types of stakes are claims and supports. All stakes have these properties: id: A 20-byte hash, unique among all stakes. See Stake Identifier Generationamount: A quantity of tokens used to back the stake ","version":null,"tagName":"h3"},{"title":"Claims​","type":1,"pageTitle":"LBRY","url":"/Wisdom-Hub/blockchain/LBRY/#claims","content":"A claim is a stake that stores metadata. There are two types of claims. Stream claims declare the availability, access method, and publisher of a stream. Channel claims create a pseudonym that can be used as the publisher of stream claims. { &quot;claimID&quot;: &quot;6e56325c5351ceda2dd0795a30e864492910ccbf&quot;, &quot;amount&quot;: 1.0, &quot;name&quot;: &quot;lbry&quot;, &quot;value&quot;: { &quot;stream&quot;: { &quot;title&quot;: &quot;What is LBRY?&quot;, &quot;author&quot;: &quot;Samuel Bryan&quot;, &quot;description&quot;: &quot;What is LBRY? An introduction with Alex Tabarrok&quot;, &quot;language&quot;: &quot;en&quot;, &quot;license&quot;: &quot;Public Domain&quot;, &quot;thumbnail&quot;: &quot;https://s3.amazonaws.com/files.lbry.io/logo.png&quot;, &quot;mediaType&quot;: &quot;video/mp4&quot;, &quot;streamHash&quot;: &quot;232068af6d51325c4821ac897d13d7837265812164021ec832cb7f18b9caf6c77c23016b31bac9747e7d5d9be7f4b752&quot;, }, }, &quot;meta&quot;: { &quot;support_amount&quot;: &quot;4900.021&quot;, } }  Claim Operations​ There are three claim operations: create, update, and abandon. create: Makes a new claim.update: Changes the value, amount, or channel of an existing claim. Does not change the claim's ID.abandon: Withdraws a claim, freeing the associated credits to be used for other purposes. ","version":null,"tagName":"h3"},{"title":"Supports​","type":1,"pageTitle":"LBRY","url":"/Wisdom-Hub/blockchain/LBRY/#supports","content":"A support is a stake that lends its amount to bolster an existing claim. Supports have one extra property in addition to the stake properties: claimID: The ID of the claim that this support is bolstering. Here is an example support for the above claim: { &quot;supportID&quot;: &quot;fbcc019294468e03a5970dd2adec1535c52365e6&quot;, &quot;amount&quot;: 45.12, &quot;claimID&quot;: &quot;6e56325c5351ceda2dd0795a30e864492910ccbf&quot;, }  ","version":null,"tagName":"h3"},{"title":"Metadata​","type":1,"pageTitle":"LBRY","url":"/Wisdom-Hub/blockchain/LBRY/#metadata","content":"{ &quot;stream&quot;: { &quot;title&quot;: &quot;What is LBRY?&quot;, &quot;author&quot;: &quot;Samuel Bryan&quot;, &quot;description&quot;: &quot;What is LBRY? An introduction with Alex Tabarrok&quot;, &quot;language&quot;: &quot;en&quot;, &quot;license&quot;: &quot;Public Domain&quot;, &quot;thumbnail&quot;: &quot;https://s3.amazonaws.com/files.lbry.io/logo.png&quot;, &quot;mediaType&quot;: &quot;video/mp4&quot;, &quot;streamHash&quot;: &quot;232068af6d51325c4821ac897d13d7837265812164021ec832cb7f18b9caf6c77c23016b31bac9747e7d5d9be7f4b752&quot; } }  ","version":null,"tagName":"h3"},{"title":"Claimtrie​","type":1,"pageTitle":"LBRY","url":"/Wisdom-Hub/blockchain/LBRY/#claimtrie","content":"A claimtrie is a data structure used to store the set of all claims and prove the correctness of URL resolution. The claimtrie is implemented as a Merkle tree that maps names to claims. Claims are stored as leaf nodes in the tree. Names are stored as the normalized path from the root node to the leaf node. The root hash is the hash of the root node. It is stored in the header of each block in the blockchain. Nodes use the root hash to efficiently and securely validate the state of the claimtrie. Multiple claims can exist for the same name. They are all stored in the leaf node for that name. See Claim Ordering ","version":null,"tagName":"h3"},{"title":"URL​","type":1,"pageTitle":"LBRY","url":"/Wisdom-Hub/blockchain/LBRY/#url","content":"URLs are memorable references to claims. All URLs: contain a name (see Claim Properties), andresolve to a single, specific claim for that name The ultimate purpose of much of the claim and blockchain design is to provide memorable URLs that can be provably resolved by clients without a full copy of the blockchain (e.g. Simplified Payment Verification wallets). Components A URL is a name with one or more modifiers. A bare name on its own resolves to the controlling claim at the latest block height. Here are some common URL structures. Stream Claim Name A controlling stream claim. lbry://meet-lbry Channel Claim Name A controlling channel claim. lbry://@lbry Channel Claim Name and Stream Claim Name A URL containing both a channel and a stream claim name. URLs containing both are resolved in two steps. First, the channel is resolved to its associated claim. Then the stream claim name is resolved to get the appropriate claim from among the claims in the channel. lbry://@lbry/meet-lbry Claim ID A claim for this name with this claim ID. Partial prefix matches are allowed (see URL Resolution). lbry://meet-lbry:7a0aa95c5023c21c098 lbry://meet-lbry:7a lbry://@lbry:3f/meet-lbry Note: in a previous version of this spec, the ## character was used to signify the claim ID portion of the url. This character is now deprecated and will stop being supported in the future. Sequence The n_th accepted claim for this name. _n must be a positive number. This can be used to reference claims in the order in which they were made, rather than by the amount of credits backing a claim. lbry://meet-lbry1 lbry://@lbry1/meet-lbry ","version":null,"tagName":"h3"},{"title":"Channels​","type":1,"pageTitle":"LBRY","url":"/Wisdom-Hub/blockchain/LBRY/#channels","content":"Channels are the unit of identity. A channel is a claim for a name beginning with @ that contains a metadata structure for identity rather than content. Included in the metadata is the channel’s public key. Here’s an example: &quot;claimID&quot;: &quot;6e56325c5351ceda2dd0795a30e864492910ccbf&quot;, &quot;name&quot;: &quot;@lbry&quot;, &quot;amount&quot;: 6.26, &quot;value&quot;: { &quot;channel&quot;: { &quot;keyType&quot;: &quot;SECP256k1&quot;, &quot;publicKey&quot;: &quot;3056301006072a8648ce3d020106052b8104000a03420004180488ffcb3d1825af538b0b952f0eba6933faa6d8229609ac0aeadfdbcf49C59363aa5d77ff2b7ff06cddc07116b335a4a0849b1b524a4a69d908d69f1bcebb&quot; } }  Claims published to a channel contain a signature made with the corresponding private key. A valid signature proves channel membership. The purpose of channels is to allow content to be clustered under a single pseudonym or identity. This allows publishers to easily list all their content, maintain attribution, and build their brand. ","version":null,"tagName":"h3"},{"title":"Data​","type":1,"pageTitle":"LBRY","url":"/Wisdom-Hub/blockchain/LBRY/#data","content":"Files published using LBRY are stored in a distributed fashion by the clients participating in the network. Each file is split into many small pieces. Each piece is encrypted and announced to the network. The pieces may also be uploaded to other hosts on the network that specialize in rehosting content. The purpose of this process is to enable file storage and access without relying on centralized infrastructure, and to create a marketplace for data that allows hosts to be paid for their services. ","version":null,"tagName":"h3"},{"title":"Network Discovery​","type":1,"pageTitle":"LBRY","url":"/Wisdom-Hub/blockchain/LBRY/#network-discovery","content":"The only problem is that the initial connection requires a DNSFeed. To retrieve a list of bitcoin nodes' IPs. IPV4 is also kinda centralized itself. Assigning, limited amounts, and ... These problems probably can be solved by IPV6 and some sort of new network protocol where every network card/program can broadcast their IPV6 to any connected neighbor. and retrieve the IPV6 blockchain-based table. the IPV6 table should be in blockchain so it can't be manipulated by governments, ISPs, or the neighbor card itself. (removing, changing an IP cause to rebuild the whole blockchain every time an IP is added to the blockchain, also every single IPV6 that you have got from the neighbor card, has to have the same manipulated table, same as 51% bitcoin attack) Network discovery in bitcoin, ETH:https://medium.com/harmony-one/peer-discovery-in-harmony-network-6a07f9401c61 ","version":null,"tagName":"h2"},{"title":"Communication​","type":1,"pageTitle":"LBRY","url":"/Wisdom-Hub/blockchain/LBRY/#communication","content":"LBRY daemon is the central point of communication between clients and the network. ","version":null,"tagName":"h2"},{"title":"JSON-RPC​","type":1,"pageTitle":"LBRY","url":"/Wisdom-Hub/blockchain/LBRY/#json-rpc","content":"RPC: is not a network protocol like http. things like REST that defines how to interact with a server. and just like REST works over http or ... JOSN-RPC: RPC that uses json as the data schema. https://medium.com/@ConsenSys/blockchain-underpinnings-2c43ba03ecc9 ","version":null,"tagName":"h3"},{"title":"Getting a content info​","type":1,"pageTitle":"LBRY","url":"/Wisdom-Hub/blockchain/LBRY/#getting-a-content-info","content":"curl --header &quot;Content-Type: application/json&quot; --data '{ &quot;method&quot;: &quot;resolve&quot;, &quot;params&quot;: { &quot;urls&quot;: &quot;@mlibre:e/raspberry-pi-mining-guide:6&quot; }}' http://localhost:5279 { &quot;jsonrpc&quot;: &quot;2.0&quot;, &quot;result&quot;: { &quot;@mlibre:e/raspberry-pi-mining-guide:6&quot;: { &quot;address&quot;: &quot;bSvwdAMw9bokK4e1ZeaMFZc8HnjY217eFU&quot;, &quot;amount&quot;: &quot;5.0&quot;, &quot;canonical_url&quot;: &quot;lbry://@mlibre#e/raspberry-pi-mining-guide#6&quot;, &quot;claim_id&quot;: &quot;6faebe6745e0e4d42b44100cfcd11f86cd17cb52&quot;, &quot;meta&quot;: { &quot;effective_amount&quot;: &quot;811.5&quot;, &quot;reposted&quot;: 0, &quot;support_amount&quot;: &quot;806.5&quot;, . . . &quot;permanent_url&quot;: &quot;lbry://raspberry-pi-mining-guide#6faebe6745e0e4d42b44100cfcd11f86cd17cb52&quot;, &quot;short_url&quot;: &quot;lbry://raspberry-pi-mining-guide#6&quot;, &quot;signing_channel&quot;: { &quot;address&quot;: &quot;bRgZm5DdqoRiEH6JsYVnJSWkoynzvTkfH4&quot;, &quot;amount&quot;: &quot;0.005&quot;, &quot;canonical_url&quot;: &quot;lbry://@mlibre#e&quot;, &quot;claim_id&quot;: &quot;e2b347558eec20aee84bf4657efa3832bb5a4ab9&quot;, . . . &quot;txid&quot;: &quot;e686fe8317b416c474f1f4985c0138746e07987500ac694de8b9bd19eda20072&quot;, &quot;type&quot;: &quot;claim&quot;, &quot;value&quot;: { &quot;languages&quot;: [ &quot;en&quot; ], &quot;license&quot;: &quot;Public Domain&quot;, &quot;release_time&quot;: &quot;1617295323&quot;, &quot;source&quot;: { &quot;hash&quot;: &quot;a6ff0d82557ecc5e16fb75d0ea8e0f010b93dfee43ddf0d820543967ed126d83596380babaf255519f1f0a677793acdc&quot;, &quot;media_type&quot;: &quot;text/markdown&quot;, &quot;name&quot;: &quot;post.md&quot;, &quot;sd_hash&quot;: &quot;38ce95698f7eea4306071c865b4af81bc76bdc8664055560b020c667d815eaa11a83eecc1e72632fee4a8b4e5693c90a&quot;, &quot;size&quot;: &quot;9938&quot; }, &quot;stream_type&quot;: &quot;document&quot;, &quot;tags&quot;: [ &quot;blockchain&quot;, &quot;mining&quot;, &quot;monero&quot;, &quot;raspberry pi&quot;, &quot;xmr&quot; ], &quot;thumbnail&quot;: { &quot;url&quot;: &quot;https://spee.ch/a/2eef8b272d343bbf.jpg&quot; }, &quot;title&quot;: &quot;Ultimate Guide For Monero Mining with Raspberry Pi&quot; }, &quot;value_type&quot;: &quot;stream&quot; } }  ","version":null,"tagName":"h3"},{"title":"Adding new content​","type":1,"pageTitle":"LBRY","url":"/Wisdom-Hub/blockchain/LBRY/#adding-new-content","content":"curl --header &quot;Content-Type: application/json&quot; --data '{ &quot;method&quot;: &quot;publish&quot;, &quot;params&quot;: { &quot;name&quot;: &quot;test&quot;, &quot;file_path&quot;: &quot;/home/mlibre/Downloads/tree.jpg&quot;, &quot;bid&quot;: &quot;0.001&quot;, &quot;metadata&quot;: { &quot;description&quot;: &quot;Check out this test&quot;, &quot;title&quot;: &quot;test&quot;, &quot;languages&quot;: &quot;en&quot;, &quot;license&quot;: &quot;Public Domain&quot;, &quot;tags&quot;: [] }}}' http://localhost:5279 curl --header &quot;Content-Type: application/json&quot; --data '{&quot;method&quot;:&quot;publish&quot;,&quot;params&quot;:{&quot;name&quot;:&quot;flower&quot;,&quot;title&quot;:&quot;Flora, Bloom&quot;,&quot;description&quot;:&quot;Flora, Bloom, Flower&quot;,&quot;locations&quot;:[],&quot;bid&quot;:&quot;0.00100000&quot;,&quot;languages&quot;:[&quot;en&quot;],&quot;tags&quot;:[&quot;flower&quot;,&quot;bloom&quot;,&quot;flora&quot;,&quot;nature&quot;],&quot;thumbnail_url&quot;:&quot;https://spee.ch/2/06afc05c4adeca74.jpg&quot;,&quot;blocking&quot;:true,&quot;preview&quot;:false,&quot;license&quot;:&quot;Public Domain&quot;,&quot;release_time&quot;:1617809791,&quot;channel_id&quot;:&quot;61514a4f83bb8671f6fcdb70fcf81fb3ce31e1dc&quot;,&quot;file_path&quot;:&quot;/home/mlibre/Downloads/tree.jpg&quot;}' http://localhost:5279  ","version":null,"tagName":"h3"},{"title":"Tipping something​","type":1,"pageTitle":"LBRY","url":"/Wisdom-Hub/blockchain/LBRY/#tipping-something","content":"curl --header &quot;Content-Type: application/json&quot; --data '{ &quot;method&quot;: &quot;support_create&quot;, &quot;params&quot;: { &quot;amount&quot;: &quot;0.001&quot;, &quot;claim_id&quot;: &quot;@mlibre#e2b347558eec20aee84bf4657efa3832bb5a4ab9&quot;, &quot;--tip&quot; }}' http://localhost:5279  ","version":null,"tagName":"h3"},{"title":"References​","type":1,"pageTitle":"LBRY","url":"/Wisdom-Hub/blockchain/LBRY/#references","content":"https://lbry.tech/spec ","version":null,"tagName":"h2"},{"title":"Polygon","type":0,"sectionRef":"#","url":"/Wisdom-Hub/blockchain/Polygon/","content":"","keywords":"","version":null},{"title":"Table Of Contents​","type":1,"pageTitle":"Polygon","url":"/Wisdom-Hub/blockchain/Polygon/#table-of-contents","content":"How to write Smart Contracts on PolygonHow to transfer ERC-20 tokens to the Polygon chainHow to transfer ERC-721 tokens to the Polygon chainHow to transfer ERC-1155 tokens to the Polygon chainReferences ","version":null,"tagName":"h2"},{"title":"References​","type":1,"pageTitle":"Polygon","url":"/Wisdom-Hub/blockchain/Polygon/#references","content":"https://polygon.technology/ ","version":null,"tagName":"h2"},{"title":"How to transfer ERC-1155 tokens to the Polygon (Matic) chain","type":0,"sectionRef":"#","url":"/Wisdom-Hub/blockchain/Polygon/PoS Bridge/erc1155-pos-bridge","content":"","keywords":"","version":null},{"title":"Goerli​","type":1,"pageTitle":"How to transfer ERC-1155 tokens to the Polygon (Matic) chain","url":"/Wisdom-Hub/blockchain/Polygon/PoS Bridge/erc1155-pos-bridge#goerli","content":"The Goerli testnet is pre-configured in Metamask's list of available networks. You can select it from the dropdown list at the top of the Metamask interface. You can fund your account with testnet Ether from the Goerli Authenticated faucet as long as you are willing to make a post on a valid Twitter or Facebook account. If this is not something you wish to do, there is an alternative faucet at goerli-faucet.slock.it ","version":null,"tagName":"h2"},{"title":"Mumbai​","type":1,"pageTitle":"How to transfer ERC-1155 tokens to the Polygon (Matic) chain","url":"/Wisdom-Hub/blockchain/Polygon/PoS Bridge/erc1155-pos-bridge#mumbai","content":"You can either open mumbai.polygonscan.com and click on &quot;Add Mumbai Network&quot; in the footer at the bottom of the page or add it manually using the following information: Network Name: Polygon Mumbai testnetRPC URL: https://rpc-mumbai.maticvigil.com/Chain ID: 80001Currency Symbol: MATICBlock Explorer URL: https://mumbai.polygonscan.com/  You can fund your Mumbai account with MATIC here MLBs ERC-1155 Contract ERC-1155 is a token standard where you can have multiple fungible and non-fungible tokens in one smart contract. MLBs is the contract we have already deployed on the Goerli testnet. An standdard OpenZeppelin ERC-1155. This contract contains two tokens only: MLBFun which is a fungible token with id 0MLBNFun which is a non-fungible token with id 1 We'll map this contract and transfer some tokens. You can find a step-by-step guide to creating an ERC-1155 token here Contract info: Name: MLBs Tokens: MLBFun, MLBNFun Owner: 0xD8f24D419153E5D03d614C5155f900f4B5C8A65C Contract Address: 0x11C47A4F19cc52923b9C495080ADB441ADe38883 Goerli etherscan: https://goerli.etherscan.io/address/0x11C47A4F19cc52923b9C495080ADB441ADe38883  Gather this information for the contract you intend to map. Wallet Balance using Web3js ERC-1155 contracts have a balanceOf function. It takes two arguments: Wallet Address: The address, for example, the contract owner (0xD8f24D419153E5D03d614C5155f900f4B5C8A65C)TokenID: The token ID. For example, 0 refers to the MLBFun token in our ERC-1155 contract  If you have already configured a provider and the truffle-hdwallet-provider, you can use this function to check your ERC-1155 tokens. async function getTokenBalance(web3, address, contractABI, contractAddress) { let contractInstance = new web3.eth.Contract(contractABI, contractAddress); let result = await contractInstance.methods.balanceOf(address, 0).call() // 0 is a tokenID console.log(`TokenID ${0}:` , result); result = await contractInstance.methods.balanceOf(address, 1).call() // 1 is a tokenID console.log(`TokenID ${1}:` , result); }  The balanceOf output for our contract in Goerli would be like: TokenID 0: 7000000000000000000 TokenID 1: 1  And for Mumbai: TokenID 0: 0 TokenID 1: 0  The full source code is: const Web3 = require(&quot;web3&quot;); const HDWalletProvider = require(&quot;@truffle/hdwallet-provider&quot;) const secrets = require('./secrets.json') let address = &quot;0xD8f24D419153E5D03d614C5155f900f4B5C8A65C&quot;; // The address to check balance of let contractAddressInMumbai = &quot;0x7242B6E18F85DB7b2A19d027e0b81Dcf6637C68b&quot;; // Mumbai Contract Address let contractABIMumbai = [{&quot;inputs&quot;:[{&quot;internalType&quot;:&quot;uint256&quot;,&quot;name&quot;:&quot;MLBF.......&quot;}]}] let contractAddressGoerli = &quot;0x11C47A4F19cc52923b9C495080ADB441ADe38883&quot;; // Goerli Contract Address let contractABIGoerli = [{&quot;inputs&quot;:[{&quot;internalType&quot;:&quot;uint256&quot;,&quot;name&quot;:&quot;MLBF.......&quot;}]}] const provider = new HDWalletProvider(secrets.privateKey, secrets.mumbai); // mumbai Provider // const provider = new HDWalletProvider(secrets.privateKey, secrets.localGeth); // Goerli Provider const web3 = new Web3(provider); (async () =&gt; { try { await getBalance() } catch (e) { console.log(e) } })() async function getBalance() { let contractInstance = new web3.eth.Contract(contractABIMumbai, contractAddressInMumbai); let result = await contractInstance.methods.balanceOf(address, 0).call() console.log(`TokenID ${0}:` , result); result = await contractInstance.methods.balanceOf(address, 1).call() console.log(`TokenID ${1}:` , result); }  secrets.json: contains Seed, privateKey of the address (0xd8f2). And Mumbai API URL. ex: { &quot;privateKey&quot;: &quot;This should be the private key of an account specifically made for use on the Goerli testnet&quot;, &quot;seed&quot;: &quot;This should be a Secret Recovery Phrase from Metamask and ONLY used on Ethereum testnets&quot;, &quot;mumbai&quot;: &quot;https://matic-mumbai--jsonrpc.datahub.figment.io/apikey/YOUR_API_KEY/&quot;, &quot;localGeth&quot;: &quot;http://127.0.0.1:8545&quot; }  Mapping Now that everything is ready. Let's map our MLBs contract. Go to mapper.matic.today and complete the form Make sure the token you want to map has had its contract verified on Etherscan Choose Gorli Testnet -&gt; Mumbai testnet At this time the mapping process is not immediate. It can take up to 3 days to be confirmed. Then open mapper.matic.today, and enter the contract address to see if it has been added.  As you may notice, the contract address in Goerli and Mumbai is not the same. Let's remember to add it to Metamask so it shows up when we are connected to Mumbai as well. Open MetamaskSelect the Mumbai testnet from the list of available networksAdd TokenPaste the contract address there (0x7242B6E18F85DB7b2A19d027e0b81Dcf6637C68b) We don't yet have any tokens in Mumbai. We can transfer some across the bridge and check our balance again afterward. Transfer using SDK Let's take a look at the workflow for transferring tokens with the SDK: Approve: The owner of the token has to approve the Ethereum Predicate Contract which will lock the amount of token they want to transfer to Polygon.Deposit: Then a function has to be called on the RootChainManger contract which will trigger the ChildChainManager contract on the Mumbai testnet. The ChildChainManager contract will then call the deposit function of the Child token contract. Child contract is the copy of the Goerli token contract in Mumbai.  ","version":null,"tagName":"h2"},{"title":"Providers​","type":1,"pageTitle":"How to transfer ERC-1155 tokens to the Polygon (Matic) chain","url":"/Wisdom-Hub/blockchain/Polygon/PoS Bridge/erc1155-pos-bridge#providers","content":"To interact with Goerli and Mumbai we can either run a local node (which is slightly more difficult) or use the RPC endpoints of infrastructure providers like DataHub or Infura (which is much simpler). For Goerli, we will run a local Geth node. You can also use infura. For Mumbai, we will use DataHub ","version":null,"tagName":"h2"},{"title":"Goerli​","type":1,"pageTitle":"How to transfer ERC-1155 tokens to the Polygon (Matic) chain","url":"/Wisdom-Hub/blockchain/Polygon/PoS Bridge/erc1155-pos-bridge#goerli-1","content":"Install the Geth client, if you have not installed it already, then run: geth --goerli --http --syncmode=light --http.api=&quot;eth,net,web3,personal,txpool&quot; --allow-insecure-unlock --http.corsdomain &quot;*&quot;  The default endpoint is 127.0.0.1:8545. You can get attached and see if everything is fine: geth attach http://127.0.0.1:8545 eth.getBalance(&quot;0xD8f24D419153E5D03d614C5155f900f4B5C8A65C&quot;)  ","version":null,"tagName":"h3"},{"title":"Mumbai​","type":1,"pageTitle":"How to transfer ERC-1155 tokens to the Polygon (Matic) chain","url":"/Wisdom-Hub/blockchain/Polygon/PoS Bridge/erc1155-pos-bridge#mumbai-1","content":"Sign up for a DataHub Choose the Polygon service from the DataHub Services DashboardScroll down to see the Polygon endpoint URLsCopy the Mumbai Testnet JSONRPC URL. It is probably located hereForm the URL like so, replacing the text YOUR_API_KEY with the API key you got from DataHub:https://matic-mumbai--jsonrpc.datahub.figment.io/apikey/YOUR_API_KEY/ ","version":null,"tagName":"h3"},{"title":"Installing helpers​","type":1,"pageTitle":"How to transfer ERC-1155 tokens to the Polygon (Matic) chain","url":"/Wisdom-Hub/blockchain/Polygon/PoS Bridge/erc1155-pos-bridge#installing-helpers","content":"Now that we have the information we need and the other important pieces in place, we can write some useful code using the maticjs client library and the HDWalletProvider class from Truffle. We will need to install both of these packages on the commandline with the Node package manager. Use these commands to install the packages and save them in the project manifest, package.json: npm install @maticnetwork/maticjs --save npm install @truffle/hdwallet-provider --save  ","version":null,"tagName":"h2"},{"title":"Approve​","type":1,"pageTitle":"How to transfer ERC-1155 tokens to the Polygon (Matic) chain","url":"/Wisdom-Hub/blockchain/Polygon/PoS Bridge/erc1155-pos-bridge#approve","content":"To approve the Ethereum Predicate Contract we just need to call the approveERC1155ForDeposit function. The code for this is straightforward: let result = await maticPOSClient.approveERC1155ForDeposit(rootToken, { from: user, gasPrice: &quot;10000000000&quot; });  ","version":null,"tagName":"h2"},{"title":"Deposit​","type":1,"pageTitle":"How to transfer ERC-1155 tokens to the Polygon (Matic) chain","url":"/Wisdom-Hub/blockchain/Polygon/PoS Bridge/erc1155-pos-bridge#deposit","content":"Next, we would call the depositERC20ForUser function of the Ethereum Predicate Contract: let result_2 = await maticPOSClient.depositSingleERC1155ForUser( rootToken, user, tokenId.toString(), amount, data, { from: user, gasPrice: &quot;10000000000&quot; } )  To bring it all together in JavaScript that can be executed either in a web browser or on the commandline, we can add some constants and use an external file to hold the sensitive API keys and wallet seed phrases. This is a complete example of how to use maticjs and the HDWalletProvider class to communicate with a deployed smart contract on Polygon. Use the following code as a guide for building your own solution! // main.js const HDWalletProvider = require(&quot;@truffle/hdwallet-provider&quot;) const { MaticPOSClient } = require(&quot;@maticnetwork/maticjs&quot;) const secrets = require(&quot;./secrets.json&quot;) let user = &quot;0xD8f24D419153E5D03d614C5155f900f4B5C8A65C&quot; let rootToken = &quot;0x11C47A4F19cc52923b9C495080ADB441ADe38883&quot; // Goerli Contract Address let amount = 999 // amount of token we want to trasnfer let tokenId = 0 // Token ID let data = &quot;0x0&quot; // Additional data const parentProvider = new HDWalletProvider(secrets.seed, &quot;http://127.0.0.1:8545&quot;) // // Local Geth client address const maticProvider = new HDWalletProvider(secrets.seed, secrets.mumbai) // DataHub Mumbai Testnet JSONRPC URL const maticPOSClient = new MaticPOSClient({ network: &quot;testnet&quot;, version: &quot;mumbai&quot;, parentProvider, maticProvider }); (async () =&gt; { try { let result = await maticPOSClient.approveERC1155ForDeposit(rootToken, { from: user, gasPrice: &quot;10000000000&quot; }) let result_2 = await maticPOSClient.depositSingleERC1155ForUser( rootToken, user, tokenId.toString(), amount, data, { from: user, gasPrice: &quot;10000000000&quot; } ) console.log(result) console.log(result_2) } catch (error) { console.log(error) } })()  The expected output for approveERC1155ForDeposit is something like this: { blockHash: '0xc6b7b5a0ace622ca73abb20923fd1995976f8fbff0ea2b92111f72924288c204', blockNumber: 5571533, contractAddress: null, cumulativeGasUsed: 26780, effectiveGasPrice: '0x2540be400', from: '0xd8f24d419153e5d03d614c5155f900f4b5c8a65c', gasUsed: 26780, logsBloom: '0xstatus: true, to: '0x11c47a4f19cc52923b9c495080adb441ade38883', transactionHash: '0x2627a28ff17a57565445bb4222b5ccf99389e325c3b388ba21c8293288bea1e7', transactionIndex: 0, type: '0x0', events: { ApprovalForAll: { address: '0x11C47A4F19cc52923b9C495080ADB441ADe38883', blockNumber: 5571533, transactionHash: '0x2627a28ff17a57565445bb4222b5ccf99389e325c3b388ba21c8293288bea1e7', transactionIndex: 0, blockHash: '0xc6b7b5a0ace622ca73abb20923fd1995976f8fbff0ea2b92111f72924288c204', logIndex: 0, removed: false, id: 'log_c2ae5ce3', returnValues: [Result], event: 'ApprovalForAll', signature: '0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31', raw: [Object] } } }  And for depositSingleERC1155ForUser: { blockHash: '0x1a95b0e2633ea2691841c358ad87811ad0413e6e60d3c1a1dd0b738fbf4bb0e0', blockNumber: 5571535, contractAddress: null, cumulativeGasUsed: 497826, effectiveGasPrice: '0x2540be400', from: '0xd8f24d419153e5d03d614c5155f900f4b5c8a65c', gasUsed: 125838, logsBloom: '0xa010000', status: true, to: '0xbbd7cbfa79faee899eaf900f13c9065bf03b1a74', transactionHash: '0xfd107f2ce76b183153eaff4bccaff6873386ef89e6e5937bf30aa153612757ee', transactionIndex: 1, type: '0x0', events: { '0': { address: '0xB19a86ba1b50f0A395BfdC3557608789ee184dC8', blockNumber: 5571535, transactionHash: '0xfd107f2ce76b183153eaff4bccaff6873386ef89e6e5937bf30aa153612757ee', transactionIndex: 1, blockHash: '0x1a95b0e2633ea2691841c358ad87811ad0413e6e60d3c1a1dd0b738fbf4bb0e0', logIndex: 1, removed: false, id: 'log_6fa41672', returnValues: Result {}, event: undefined, signature: null, raw: [Object] }, '1': { address: '0x11C47A4F19cc52923b9C495080ADB441ADe38883', . . . } }  Just a few things to mention: secrets.json: contains Seed, privateKey of the address (0xd8f2). And Mumbai API URL. ex: { &quot;privateKey&quot;: &quot;This should be the private key of an account specifically made for use on the Goerli testnet&quot;, &quot;seed&quot;: &quot;This should be a Secret Recovery Phrase from Metamask and ONLY used on Ethereum testnets&quot;, &quot;mumbai&quot;: &quot;https://matic-mumbai--jsonrpc.datahub.figment.io/apikey/YOUR_API_KEY/&quot; }  @truffle/hdwallet-provider: Handles signing transactions processfrom: The Goerli address we created token and want to send transactions withrootToken: The ERC-1155 contract address on the Goerli testnetamount: the amount of token we want to transfer. ","version":null,"tagName":"h2"},{"title":"Not able to run main.js​","type":1,"pageTitle":"How to transfer ERC-1155 tokens to the Polygon (Matic) chain","url":"/Wisdom-Hub/blockchain/Polygon/PoS Bridge/erc1155-pos-bridge#not-able-to-run-mainjs","content":"If you are facing an error message like Error: execution reverted: ERC1155: approve to the zero address  The contract probably has not been mapped yet. If you have not run Geth, you will get an error like this (node:3962) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 1) (node:3962) [DEP0018] DeprecationWarning: Unhandled terminate the Node.js process with a non-zero exit code. node_modules/safe-event-emitter/index.js:74 throw err ^ Error: PollingBlockTracker - encountered an error while attempting to update latest block: Error: connect ECONNREFUSED 127.0.0.1:8545  If you get an error like this { code: -32000, message: 'getDeleteStateObject (0000000000000000000000000000000000000000) error: no suitable peers available' }  Wait a bit and try again ","version":null,"tagName":"h2"},{"title":"Sync & Confirmation​","type":1,"pageTitle":"How to transfer ERC-1155 tokens to the Polygon (Matic) chain","url":"/Wisdom-Hub/blockchain/Polygon/PoS Bridge/erc1155-pos-bridge#sync--confirmation","content":"It takes up to 5 minutes for Mumbai to read data from the Goerli chain and sync itself. Once it has synced, then we can check the token balance via web3js. The balanceOf output for our contract in Goerli would be like: TokenID 0: 6999999999999998935 TokenID 1: 1  And for Mumbai: TokenID 0: 999 TokenID 1: 0  Transfer using Web UI Transferring assets through Web UI is pretty simple. Just like the SDK, there is the Approve and a Deposit steps. Open mintnft Make sure Goerli Testnet is selected in Metamask Enter the contract address in Goerli and Mumbai, and ID of the token you want to transfer. We put 0 (MLBFun) Click on Approve Then review the transaction details, like gas fees and the smart contract you are sending tokens to - before clicking on Confirm Now, wait until you receive confirmations. Metamask and the website both will send a notification. Now Click on Deposit Once the transaction is mined, the process is complete! It takes about 7 minutes to complete the transfer. As mentioned before Polygon needs about 5 minutes to sync. Conclusion Congratulations! By completing this tutorial you learned how to use the Polygon PoS Bridge. We have configured Metamask and Geth, to communicate with the Goerli testnet and the Mumbai testnet. We then mapped an ERC-1155 contract between the networks so it can be transferred via the bridge. Finally, we called functions on the PoS Bridge contracts and moved our assets from Ethereum to Polygon. About The Author I'm mlibre, a random guy from the solar galaxy. I am interested in blockchain tech and find it very useful for lots of things. Feel free to check my Github ","version":null,"tagName":"h2"},{"title":"Building a simple swap DApp On The NEAR Blockchain","type":0,"sectionRef":"#","url":"/Wisdom-Hub/blockchain/NEAR/simple-exchange/","content":"","keywords":"","version":null},{"title":"Table of Contents​","type":1,"pageTitle":"Building a simple swap DApp On The NEAR Blockchain","url":"/Wisdom-Hub/blockchain/NEAR/simple-exchange/#table-of-contents","content":"RequirementsSetting up near-cliAccounts &amp; WalletSetting up rustGetting startedMLB1 contract Building MLB1 contractDeploying MLB1 contract Exchange contract Deploying the contractSwap near to token Web UIHosting On SkynetReferencesAbout The AuthorDonations ","version":null,"tagName":"h2"},{"title":"Requirements​","type":1,"pageTitle":"Building a simple swap DApp On The NEAR Blockchain","url":"/Wisdom-Hub/blockchain/NEAR/simple-exchange/#requirements","content":"We will use the following technologies: NEAR CLI v2.2.0 or higher installed globallynear-sdk v3 or higher installed globallyNodejs and NPM v14.17.6 LTS or higher installedRust v1.56 or higher installedReact v17.0.1 or higher installednear-api-js v0.43.1 or higher installedparcel v2 or higher installed ","version":null,"tagName":"h2"},{"title":"Setting up near-cli​","type":1,"pageTitle":"Building a simple swap DApp On The NEAR Blockchain","url":"/Wisdom-Hub/blockchain/NEAR/simple-exchange/#setting-up-near-cli","content":"NEAR CLI is a Node.js application that relies on near-api-js to connect to and interact with the NEAR blockchain. Create accounts, access keys, sign &amp; send transactions with this command line interface tool. sudo npm install -g near-cli near login # Store testnet access keys locally  near login will open the browser, testnet wallet page. You will login to the testnet and store the access keys locally. Note: All the near commands work on the testnet chain (https://rpc.testnet.near.org), unless you specify the NEAR_ENV variable or provide the --nodeUrl flag. ","version":null,"tagName":"h2"},{"title":"Accounts & Wallet​","type":1,"pageTitle":"Building a simple swap DApp On The NEAR Blockchain","url":"/Wisdom-Hub/blockchain/NEAR/simple-exchange/#accounts--wallet","content":"In NEAR, accounts are string, like mlibre.near. Each account can have multiple keys-pair. If you use near login, near will save your key-pair from the wallet into your local computer. You can find them here: cat .near-credentials/testnet/ACCOUNT_ID.near.json  You can also query an account's public keys by running: near keys mlibre.testnet  Go ahead and create a testnet wallet. https://wallet.testnet.near.org/ ","version":null,"tagName":"h2"},{"title":"Setting up rust​","type":1,"pageTitle":"Building a simple swap DApp On The NEAR Blockchain","url":"/Wisdom-Hub/blockchain/NEAR/simple-exchange/#setting-up-rust","content":"Rust is a modern systems programming language, focused on safety, speed and concurrency. It is used to write high-performance, distributed systems. Rust also supports WebAssembly. it is currently, the preferred programming language for writing smart contracts on NEAR. install Rust, and add the wasm to the rust toolchain. # https://www.rust-lang.org/ rustup target add wasm32-unknown-unknown  ","version":null,"tagName":"h2"},{"title":"Getting started​","type":1,"pageTitle":"Building a simple swap DApp On The NEAR Blockchain","url":"/Wisdom-Hub/blockchain/NEAR/simple-exchange/#getting-started","content":"First, we write a fungible token (FT) named MLB1 in rust, and will deploy it on the chain. We use it as the near-token swap pair.We write an Exchange Contract that will handle the swap functionality. Each token-near pair, one exchange contract.We make a simple Web UI to interact with the Exchange Contract, using near-sdk-js and React libraries.We host our DApp on Skynet. ","version":null,"tagName":"h2"},{"title":"MLB1 contract​","type":1,"pageTitle":"Building a simple swap DApp On The NEAR Blockchain","url":"/Wisdom-Hub/blockchain/NEAR/simple-exchange/#mlb1-contract","content":"MLB1 is the symbol of the token we are going to deploy on the NEAR testnet. We will use the official template for the contract, which is based on the NEP-141 standard. Note, In NEAR each account can only have one smart contract. And re-deploying contracts DOES NOT create a new state. ","version":null,"tagName":"h2"},{"title":"Building MLB1 contract​","type":1,"pageTitle":"Building a simple swap DApp On The NEAR Blockchain","url":"/Wisdom-Hub/blockchain/NEAR/simple-exchange/#building-mlb1-contract","content":"git clone https://github.com/near-examples/FT.git MLB1 # cloning the FT template cd MLB1 ./build.sh # Build  ","version":null,"tagName":"h3"},{"title":"Deploying MLB1 contract​","type":1,"pageTitle":"Building a simple swap DApp On The NEAR Blockchain","url":"/Wisdom-Hub/blockchain/NEAR/simple-exchange/#deploying-mlb1-contract","content":"From now we consider mlibre.testnet as the master account. near create-account mlb1.mlibre.testnet --masterAccount mlibre.testnet # Create a sub account for mlb1 contract near state mlb1.mlibre.testnet # checking the newly created account state near deploy --wasmFile res/fungible_token.wasm --accountId mlb1.mlibre.testnet # Deploying the contract  Deploy output is something like this: Starting deployment. Account id: mlb1.mlibre.testnet, node: https://rpc.testnet.near.org, helper: https://helper.testnet.near.org, file: res/fungible_token.wasm Transaction Id 8JJCqCXiwVCppQTExUXJBnnXkj4pzvqjNN2jJx5RPeGs To see the transaction in the transaction explorer, please open this url in your browser https://explorer.testnet.near.org/transactions/8JJCqCXiwVCppQTExUXJBnnXkj4pzvqjNN2jJx5RPeGs Done deploying to mlb1.mlibre.testnet  You can check the account in the explorer, there you will find the actions that happened.  Now we should call the new method of the contract to initialize a token: near call mlb1.mlibre.testnet new '{&quot;owner_id&quot;: &quot;mlb1.mlibre.testnet&quot;, &quot;total_supply&quot;: &quot;1000000000000000&quot;, &quot;metadata&quot;: { &quot;spec&quot;: &quot;ft-1.0.0&quot;, &quot;name&quot;: &quot;MLB1&quot;, &quot;symbol&quot;: &quot;MLB1&quot;, &quot;decimals&quot;: 8 }}' --accountId mlb1.mlibre.testnet  You can check the explorer for details, or query the account's state with cli: near state mlb1.mlibre.testnet # Account status # near view-state mlb1.mlibre.testnet --finality final # key-value status # near view-state mlb1.mlibre.testnet --finality final --utf8 # key-value status in utf8 # near view mlb1.mlibre.testnet ft_metadata # Token metadata  Output is something like this: { amount: '100000262536618865600000010', block_hash: 'Br6C34jP4B587P7S4fXPocxfMYe85bzU252UH9KXjudf', block_height: 72853693, code_hash: '7Mjzf1s65QZ7aeh7xFjfoihrqpinVS7FaNmyh7kqupEN', locked: '0', storage_paid_at: 0, storage_usage: 226967, formattedAmount: '100.00026253661886560000001' }  And for MLB1 balance of the account: near view mlb1.mlibre.testnet ft_balance_of '{&quot;account_id&quot;: &quot;mlb1.mlibre.testnet&quot;}'  ","version":null,"tagName":"h3"},{"title":"Exchange contract​","type":1,"pageTitle":"Building a simple swap DApp On The NEAR Blockchain","url":"/Wisdom-Hub/blockchain/NEAR/simple-exchange/#exchange-contract","content":"The exchange contract takes a token address parameter in its new method, which is the token that can be swapped for NEAR and vice versa. Follow the official template to start a new contract. cargo new exchange # Follow the doc: https://docs.near.org/docs/develop/contracts/rust/intro  The folder structure looks like this: ├── Cargo.toml ├── src │ └── lib.rs └── target └── exchange.wasm  Contract code is straightforward: // lib.rs use near_sdk::borsh::{self, BorshDeserialize, BorshSerialize}; use near_sdk::{env, log, near_bindgen, ext_contract, AccountId, Balance, PanicOnDefault, PromiseOrValue}; near_sdk::setup_alloc!(); #[ext_contract(mlb1)] trait FungibleToken { fn ft_transfer(&amp;mut self, receiver_id: String, amount: String, memo: Option&lt;String&gt;); fn ft_total_supply(&amp;self) -&gt; String; fn ft_balance_of(&amp;self, account_id: String) -&gt; String; } #[near_bindgen] #[derive(Default, BorshDeserialize, BorshSerialize)] pub struct Exchange { token_address: AccountId, logo_url: String } #[near_bindgen] impl Exchange { #[init] pub fn new(_token_address: AccountId) -&gt; Self { assert!(!env::state_exists(), &quot;Already initialized&quot;); assert!(&amp;env::signer_account_id() == &amp;env::current_account_id(), &quot;Owner's method&quot;); Self { token_address: _token_address, logo_url: &quot;&quot;.to_string() } } #[payable] pub fn near_to_token(&amp;mut self) { let near = env::attached_deposit(); let account = &amp;env::signer_account_id(); env::log(near.to_string().as_bytes()); env::log(account.to_string().as_bytes()); mlb1::ft_transfer( account.to_string(), near.to_string(), None, &amp;self.token_address.to_string(), // mlb1 account id 1, // yocto NEAR to attach 5_000_000_000_000 // gas to attach ); } pub fn get_token_address(self) -&gt; AccountId { self.token_address } pub fn set_token_address(&amp;mut self, _token_address: AccountId) { assert!(&amp;env::signer_account_id() == &amp;env::current_account_id(), &quot;Owner's method&quot;); self.token_address = _token_address } pub fn set_logo_url(&amp;mut self, url: String) { assert!(&amp;env::signer_account_id() == &amp;env::current_account_id(), &quot;Owner's method&quot;); self.logo_url = url } pub fn get_logo_url(self) -&gt; String { self.logo_url } }  new function is used to initialize the contract. assert!(&amp;env::signer_account_id() == &amp;env::current_account_id() is used to check if the current account is the owner of the contract. near_to_token function is used to swap NEAR for tokensset_token_address function is used to set the token address.get_token_address function is used to get the token address. And Cargo.toml is: [package] name = &quot;exchange&quot; version = &quot;1.0.0&quot; authors = [&quot;Mlibre &lt;m.gh@linuxmail.org&gt;&quot;] edition = &quot;2021&quot; [lib] crate-type = [&quot;cdylib&quot;, &quot;rlib&quot;] [dependencies] near-sdk = &quot;3.1.0&quot; [profile.release] codegen-units = 1 # Tell `rustc` to optimize for small code size. opt-level = &quot;z&quot; lto = true debug = false panic = &quot;abort&quot; overflow-checks = true  As you can see in [dependencies] section, we are using near-sdk version 3.1.0 rust library. ","version":null,"tagName":"h2"},{"title":"Deploying the contract​","type":1,"pageTitle":"Building a simple swap DApp On The NEAR Blockchain","url":"/Wisdom-Hub/blockchain/NEAR/simple-exchange/#deploying-the-contract","content":"Lets create an account for the exchange contract, compile and deploy it: # near delete exchange.mlibre.testnet mlibre.testnet near create-account exchange.mlibre.testnet --masterAccount mlibre.testnet cargo build --target wasm32-unknown-unknown --release cp target/wasm32-unknown-unknown/release/*.wasm ./target near deploy --wasmFile target/exchange.wasm --accountId exchange.mlibre.testnet  There is a new method in the exchange contract, we should call it to initialize the token: near call exchange.mlibre.testnet new '{&quot;_token_address&quot;: &quot;mlb1.mlibre.testnet&quot;}' --accountId exchange.mlibre.testnet # near call exchange.mlibre.testnet set_token_address '{&quot;_token_address&quot;: &quot;mlb1.mlibre.testnet&quot;}' --accountId exchange.mlibre.testnet # near deploy exchange.mlibre.testnet --wasmFile target/exchange.wasm --initFunction 'new' --initArgs '{&quot;_token_address&quot;: &quot;mlb1.mlibre.testnet&quot;}' near view exchange.mlibre.testnet get_token_address --accountId exchange.mlibre.testnet  In order to deposit some MLB1 to the exchange contract, we need to call the storage_deposit method: near call mlb1.mlibre.testnet storage_deposit '' --accountId exchange.mlibre.testnet --amount 0.0125 near call mlb1.mlibre.testnet ft_transfer '{&quot;receiver_id&quot;: &quot;exchange.mlibre.testnet&quot;, &quot;amount&quot;: &quot;1900&quot;}' --accountId mlb1.mlibre.testnet --amount 0.000000000000000000000001 near view mlb1.mlibre.testnet ft_balance_of '{&quot;account_id&quot;: &quot;mlb1.mlibre.testnet&quot;}'  ","version":null,"tagName":"h3"},{"title":"Swap near to token​","type":1,"pageTitle":"Building a simple swap DApp On The NEAR Blockchain","url":"/Wisdom-Hub/blockchain/NEAR/simple-exchange/#swap-near-to-token","content":"Now to swap some NEAR for MLB1 as mlibre.testnet, we call the near_to_token method: near call mlb1.mlibre.testnet storage_deposit '' --accountId mlibre.testnet --amount 0.0125 near call exchange.mlibre.testnet near_to_token --accountId mlibre.testnet --amount 0.000000000000000000000001 near view mlb1.mlibre.testnet ft_balance_of '{&quot;account_id&quot;: &quot;exchange.mlibre.testnet&quot;}' near view mlb1.mlibre.testnet ft_balance_of '{&quot;account_id&quot;: &quot;mlibre.testnet&quot;}'  You can find the source codes here ","version":null,"tagName":"h3"},{"title":"Web UI​","type":1,"pageTitle":"Building a simple swap DApp On The NEAR Blockchain","url":"/Wisdom-Hub/blockchain/NEAR/simple-exchange/#web-ui","content":"Writing a web DApp for the exchange contract is easy. We can use the npx create-near-app web-ui tool to create a ready-to-use react, rust, parcel stack. npx create-near-app web-ui --frontend=react --contract=rust cd web-ui yarn start # Installing dependencies and starting the app  The folder structure should look like: | ├── babel.config.js ├── dist ├── package.json ├── src │ ├── App.js │ ├── assets │ │ ├── favicon.ico │ │ ├── mlogo-black.svg │ │ └── mlogo-white.svg │ ├── config.js │ ├── global.css │ ├── index.html │ ├── index.js │ ├── utils.js │ └── wallet │ └── login │ └── index.html  To connect to a wallet, signing in and out, NEAR provides near-api-js library. It is imported in utils.js. export async function initContract() { // Initialize connection to the NEAR testnet const near = await connect(Object.assign({ deps: { keyStore: new keyStores.BrowserLocalStorageKeyStore() } }, nearConfig)) // Initializing Wallet based Account. It can work with NEAR testnet wallet that // is hosted at https://wallet.testnet.near.org window.walletConnection = new WalletConnection(near) // Getting the Account ID. If still unauthorized, it's just empty string window.accountId = window.walletConnection.getAccountId() window.account = await window.walletConnection.account(); // Initializing our contract APIs by contract name and configuration window.contract = await new Contract(window.account, nearConfig.contractName, { viewMethods: ['get_token_address'], changeMethods: ['near_to_token'], sender: window.account }) }  Every time the app starts, the initContract function is called. It initializes the connection to the NEAR testnet and creates an Account, Wallet, and Contract object. Then we call the get_token_address method to get the token address in App.js. export default function App() { const [token_address, set_token_address] = React.useState() const [showNotification, setShowNotification] = React.useState(false) React.useEffect( async () =&gt; { if (window.walletConnection.isSignedIn()) { try { let token_address = await window.contract.get_token_address(); set_token_address(token_address) } catch (error) { console.log(error); } } }, [] ) . . .  We also need to change the form action to: await window.contract.near_to_token({}, 300000000000000, // attached GAS (optional) token_address.value // attached deposit in yoctoNEAR (optional) )  Before we start the app we are going to make some changes minor changes as well. Start by upgrading the parcel dependency to the latest version: Replace parcel-bundler with parcel in the package.json npm i parcel@latest Add type=&quot;module&quot; to the script tag in the src/index.html file. &lt;script type=&quot;module&quot; src=&quot;./index.js&quot;&gt;&lt;/script&gt; In config.js set the contract name to exchange.mlibre.testnet function getConfig() { return { networkId: 'testnet', nodeUrl: 'https://rpc.testnet.near.org', contractName: 'exchange.mlibre.testnet', walletUrl: 'https://wallet.testnet.near.org', helperUrl: 'https://helper.testnet.near.org', explorerUrl: 'https://explorer.testnet.near.org', } }  You can now run the app using the following command: parcel src/index.html --open   You can find the source codes here ","version":null,"tagName":"h2"},{"title":"Hosting On Skynet​","type":1,"pageTitle":"Building a simple swap DApp On The NEAR Blockchain","url":"/Wisdom-Hub/blockchain/NEAR/simple-exchange/#hosting-on-skynet","content":"After running dapp using parcel src/index.html --open, copy the dist folder and upload it on Skynet. ","version":null,"tagName":"h2"},{"title":"References​","type":1,"pageTitle":"Building a simple swap DApp On The NEAR Blockchain","url":"/Wisdom-Hub/blockchain/NEAR/simple-exchange/#references","content":"https://docs.near.orghttps://github.com/near/near-clihttps://github.com/mlibre/blockchain/tree/master/NEAR/simple-exchange ","version":null,"tagName":"h2"},{"title":"About The Author​","type":1,"pageTitle":"Building a simple swap DApp On The NEAR Blockchain","url":"/Wisdom-Hub/blockchain/NEAR/simple-exchange/#about-the-author","content":"I'm mlibre, a random guy from the solar galaxy. I am interested in blockchain tech and find it very useful for lots of things. Feel free to check my Github ","version":null,"tagName":"h2"},{"title":"Donations​","type":1,"pageTitle":"Building a simple swap DApp On The NEAR Blockchain","url":"/Wisdom-Hub/blockchain/NEAR/simple-exchange/#donations","content":"ETH: 0xc9b64496986E7b6D4A68fDF69eF132A35e91838e NEAR: mlibre.near ","version":null,"tagName":"h2"},{"title":"How to transfer ERC-20 tokens to the Polygon (Matic) chain","type":0,"sectionRef":"#","url":"/Wisdom-Hub/blockchain/Polygon/PoS Bridge/erc20-pos-bridge","content":"","keywords":"","version":null},{"title":"Table of content​","type":1,"pageTitle":"How to transfer ERC-20 tokens to the Polygon (Matic) chain","url":"/Wisdom-Hub/blockchain/Polygon/PoS Bridge/erc20-pos-bridge#table-of-content","content":"PrerequisitesRequirementsGetting startedSetting up Metamask GoerliMumbai MLB ERC20 ContractMappingTransfer using SDK ProvidersInstalling helpersApproveDepositNot able to run main.jsSync &amp; Confirmation Transfer using Web UIConclusion Prerequisites In this tutorial, We will use Metamask as our wallet. If you are not familiar with it or don't know how to use it, check this video on youtube. When you are creating a Metamask wallet, it gives you a Secret Recovery Phrase (Seed). With this seed, you can recover all of your accounts in Metamask. We will use this seed later in this tutorial. here is an article about How to reveal your Secret Recovery Phrase Requirements MetamaskNodejs v14.17.6 LTS or higher installedGeth: version 1.10.8 Getting started In order to transfer assets between root (Ethereum) and child (Polygon) contracts, they should be mapped first. This is a process by which an existing token contract is mirrored between the root and child chain. If the token you intend to transfer already exists on Polygon, this means you don't need to perform the mapping. Check the official docs to learn about the mapping process.Now that contracts are mapped. it's time to transfer the assets. We can either use the Polygon Wallet UI or the Polygon SDK We use the SDK for our ERC-20 token that is deployed on the Goerli testnetWe use the Polygon Wallet UI for tokens that are deployed on Ethereum mainnet Setting up Metamask Before we get into the details of moving the tokens, let's set up Metamask so we can check our ETH, MATIC, and MLB token balances. ","version":null,"tagName":"h2"},{"title":"Goerli​","type":1,"pageTitle":"How to transfer ERC-20 tokens to the Polygon (Matic) chain","url":"/Wisdom-Hub/blockchain/Polygon/PoS Bridge/erc20-pos-bridge#goerli","content":"The Goerli testnet is pre-configured in Metamask's list of available networks. You can select it from the dropdown list at the top of the Metamask interface. You can fund your account with testnet Ether from the Goerli Authenticated faucet as long as you are willing to make a post on a valid Twitter or Facebook account. If this is not something you wish to do, there is an alternative faucet at goerli-faucet.slock.it ","version":null,"tagName":"h2"},{"title":"Mumbai​","type":1,"pageTitle":"How to transfer ERC-20 tokens to the Polygon (Matic) chain","url":"/Wisdom-Hub/blockchain/Polygon/PoS Bridge/erc20-pos-bridge#mumbai","content":"You can either open mumbai.polygonscan.com and click on &quot;Add Mumbai Network&quot; in the footer at the bottom of the page or add it manually using the following information: Network Name: Polygon Mumbai testnetRPC URL: https://rpc-mumbai.maticvigil.com/Chain ID: 80001Currency Symbol: MATICBlock Explorer URL: https://mumbai.polygonscan.com/  You can fund your Mumbai account with MATIC here MLB ERC20 Contract MLB is the symbol of the token (deployed on the Goerli testnet) that we'll map and transfer, which is a standard OpenZeppelin ERC-20 token. You can find a step by step guide to creating an ERC-20 token here Token info: Name: Mlibre Symbol: MLB Owner: 0xD8f24D419153E5D03d614C5155f900f4B5C8A65C Contract Address: 0xd2d40892B3EebdA85e4A2742A97CA787559BF92f Goerli etherscan: https://goerli.etherscan.io/address/0xd2d40892B3EebdA85e4A2742A97CA787559BF92f  Gather this information for the token you intend to map. Mapping Now that everything is ready. Let's map our MLB token. Go to mapper.matic.today and complete the form Make sure the token you want to map has had its contract verified on Etherscan Choose Gorli Testnet -&gt; Mumbai testnet At this time the mapping process is not immediate, it can take up to 3 days to be confirmed. Then open mapper.matic.today, and enter the contract address to see if it has been added.  As you may notice, the contract address in Goerli and Mumbai are not the same. Let's remember to add it to Metamask so it shows up when we are connected to Mumbai as well. Open MetamaskSelect the Mumbai testnet from the list of available networksAdd TokenPaste the contract address there (0x0F6886ca4476D3aAb965F2D1b9185F2dd857E653) Now it should be something like:  We don't yet have any MLB tokens in Mumbai. We can transfer some across the bridge and check our Metamask balance again afterward. Transfer using SDK Let's take a look at the workflow for transferring tokens with the SDK: Approve: The owner of the token has to approve the Ethereum Predicate Contract which will lock the amount of token they want to transfer to Polygon.Deposit: Then a function has to be called on the RootChainManger contract which will trigger the ChildChainManager contract on the Mumbai testnet. The ChildChainManager contract will then call the deposit function of the Child token contract. Child contract is the copy of the Goerli token contract in Mumbai.  ","version":null,"tagName":"h2"},{"title":"Providers​","type":1,"pageTitle":"How to transfer ERC-20 tokens to the Polygon (Matic) chain","url":"/Wisdom-Hub/blockchain/Polygon/PoS Bridge/erc20-pos-bridge#providers","content":"To Interact with Goerli and Mumbai we can either run a local node (which is slightly more difficult) or use the RPC endpoints of infrastructure providers like DataHub or Infura (which is much simpler). For Goerli, we will run a local Geth node. You can also use infura. For Mumbai, we will use DataHub ","version":null,"tagName":"h2"},{"title":"Goerli​","type":1,"pageTitle":"How to transfer ERC-20 tokens to the Polygon (Matic) chain","url":"/Wisdom-Hub/blockchain/Polygon/PoS Bridge/erc20-pos-bridge#goerli-1","content":"Install the Geth client, if you have not installed it already, then run: geth --goerli --http --syncmode=light --http.api=&quot;eth,net,web3,personal,txpool&quot; --allow-insecure-unlock --http.corsdomain &quot;*&quot;  The default endpoint is 127.0.0.1:8545. You can get attached and see if everything is fine: geth attach http://127.0.0.1:8545 eth.getBalance(&quot;0xD8f24D419153E5D03d614C5155f900f4B5C8A65C&quot;)  ","version":null,"tagName":"h3"},{"title":"Mumbai​","type":1,"pageTitle":"How to transfer ERC-20 tokens to the Polygon (Matic) chain","url":"/Wisdom-Hub/blockchain/Polygon/PoS Bridge/erc20-pos-bridge#mumbai-1","content":"Sign up for a DataHubChoose the Polygon service from the DataHub Services DashboardScroll down to see the Polygon endpoint URLsCopy the Mumbai Testnet JSONRPC URL. It is probably located hereForm the URL like so, replacing the text YOUR_API_KEY with the API key you got from DataHub:https://matic-mumbai--jsonrpc.datahub.figment.io/apikey/YOUR_API_KEY/ ","version":null,"tagName":"h3"},{"title":"Installing helpers​","type":1,"pageTitle":"How to transfer ERC-20 tokens to the Polygon (Matic) chain","url":"/Wisdom-Hub/blockchain/Polygon/PoS Bridge/erc20-pos-bridge#installing-helpers","content":"Now that we have the information we need and the other important pieces in place, we can write some useful code using the maticjs client library and the HDWalletProvider class from Truffle. We will need to install both of these packages on the commandline with the node package manager. Use these commands to install the packages and save them in the project manifest, package.json: npm install @maticnetwork/maticjs --save npm install @truffle/hdwallet-provider --save  ","version":null,"tagName":"h2"},{"title":"Approve​","type":1,"pageTitle":"How to transfer ERC-20 tokens to the Polygon (Matic) chain","url":"/Wisdom-Hub/blockchain/Polygon/PoS Bridge/erc20-pos-bridge#approve","content":"To approve the Ethereum Predicate Contract we just need to call the approveERC20ForDeposit function. The code for this is straightforward: await maticPOSClient.approveERC20ForDeposit(rootToken, amount.toString(), { from, gasPrice: &quot;10000000000&quot; });  ","version":null,"tagName":"h2"},{"title":"Deposit​","type":1,"pageTitle":"How to transfer ERC-20 tokens to the Polygon (Matic) chain","url":"/Wisdom-Hub/blockchain/Polygon/PoS Bridge/erc20-pos-bridge#deposit","content":"Next, we would call the depositERC20ForUser function of the Ethereum Predicate Contract: await maticPOSClient.depositERC20ForUser(rootToken, from, amount.toString(), { from, gasPrice: &quot;10000000000&quot;, });  To bring it all together in JavaScript that can be executed either in a web browser or on the commandline, we can add some constants and use an external file to hold the sensitive API keys and wallet seed phrases. This is a complete example of how to use maticjs and the HDWalletProvider class to communicate with a deployed smart contract on Polygon. Use the following code as a guide for building your own solution! // main.js import { HDWalletProvider } from '@truffle/hdwallet-provider'; import { MaticPOSClient } from '@maticnetwork/maticjs'); import { secrets } from './secrets.json' const from = &quot;0xD8f24D419153E5D03d614C5155f900f4B5C8A65C&quot;; const rootToken = &quot;0xd2d40892B3EebdA85e4A2742A97CA787559BF92f&quot;; const amount = 999 * (10 ** 18); const parentProvider = new HDWalletProvider(secrets.seed, 'http://127.0.0.1:8545'); // Local Geth client address const maticProvider = new HDWalletProvider(secrets.seed, secrets.mumbai) // DataHub Mumbai Testnet JSONRPC URL const maticPOSClient = new MaticPOSClient({ network: &quot;testnet&quot;, version: &quot;mumbai&quot;, parentProvider, maticProvider, }); (async () =&gt; { try { let result = await maticPOSClient.approveERC20ForDeposit( rootToken, amount.toString(), { from, gasPrice: &quot;10000000000&quot;, } ); let result_2 = await maticPOSClient.depositERC20ForUser( rootToken, from, amount.toString(), { from, gasPrice: &quot;10000000000&quot;, } ); console.log(result); console.log(result_2); } catch (error) { console.log(error); } })();  The expected output for approveERC20ForDeposit is something like this: { blockHash: '0x9616fab5f19fb93580fe5dc71da9062168f1f1f5a4a5297094cad0b2b3e2dceb', blockNumber: 5513011, contractAddress: null, cumulativeGasUsed: 46263, effectiveGasPrice: '0x2540be400', from: '0xd8f24d419153e5d03d614c5155f900f4b5c8a65c', gasUsed: 46263, logsBloom: '0x0000000000000000000000000000000000000000000000800000000000000000000080000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000010000000000000000000000', status: true, to: '0xd2d40892b3eebda85e4a2742a97ca787559bf92f', transactionHash: '0x3aba80ae8938ed1abbb18560cb061f4915d202a731e5e2ec443aded67169e28a', transactionIndex: 0, type: '0x0', events: { Approval: { address: '0xd2d40892B3EebdA85e4A2742A97CA787559BF92f', blockNumber: 5513011, transactionHash: '0x3aba80ae8938ed1abbb18560cb061f4915d202a731e5e2ec443aded67169e28a', transactionIndex: 0, blockHash: '0x9616fab5f19fb93580fe5dc71da9062168f1f1f5a4a5297094cad0b2b3e2dceb', logIndex: 0, removed: false, id: 'log_0e714fbf', returnValues: [Result], event: 'Approval', signature: '0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925', raw: [Object] } } }  And for depositERC20ForUser: { blockHash: '0x622989e0d1097ea59c557663bf4fa19b3064cfb858706021a6eecb11bb1c19b2', blockNumber: 5513012, contractAddress: null, cumulativeGasUsed: 89761, effectiveGasPrice: '0x2540be400', from: '0xd8f24d419153e5d03d614c5155f900f4b5c8a65c', gasUsed: 89761, logsBloom: '0x0200000000000000000000000000000800000040000000800000000000000000000080000000000000040008000000000000200000000000008000100020000000000000000000001000000a000000000000000000000100000000000000000000000000000008000000000400000014000000000000000000000010200000000000000000000000000000000200000000000000000000000000020000080000020000000200008000000000000000040000000000000800000000000000000000000002000000000000000000000002000000140000000000200000000000000010000000000000000000000000000000000000010000000000000000000000', status: true, to: '0xbbd7cbfa79faee899eaf900f13c9065bf03b1a74', transactionHash: '0x58a7f01edc2b9772f87fca57789f0912152615813e6231ab137e4759c8f6415f', transactionIndex: 0, type: '0x0', events: { '0': { address: '0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', blockNumber: 5513012, transactionHash: '0x58a7f01edc2b9772f87fca57789f0912152615813e6231ab137e4759c8f6415f', transactionIndex: 0, blockHash: '0x622989e0d1097ea59c557663bf4fa19b3064cfb858706021a6eecb11bb1c19b2', logIndex: 0, removed: false, id: 'log_20b9b372', returnValues: Result {}, event: undefined, signature: null, raw: [Object] }, '1': { . . .  Just a few things to mention: secrets.json: contains Seed, privateKey of the address (0xd8f2). And Mumbai API URL. ex: { &quot;privateKey&quot;: &quot;This should be the private key of an account specifically made for use on the Goerli testnet&quot;, &quot;seed&quot;: &quot;This should be a Secret Recovery Phrase from Metamask and ONLY used on Ethereum testnets&quot;, &quot;mumbai&quot;: &quot;https://matic-mumbai--jsonrpc.datahub.figment.io/apikey/YOUR_API_KEY/&quot; }  @truffle/hdwallet-provider: Handles signing transactions processfrom: The Goerli address we created token and want to send transactions withrootToken: The ERC-20 contract address on the Goerli testnetamount: the amount of token we want to transfer. By default, the open zeppelin V4 ERC20 contract uses a value of 18 for decimals. That is why 999 is multiplied by (10 18)** ","version":null,"tagName":"h2"},{"title":"Not able to run main.js​","type":1,"pageTitle":"How to transfer ERC-20 tokens to the Polygon (Matic) chain","url":"/Wisdom-Hub/blockchain/Polygon/PoS Bridge/erc20-pos-bridge#not-able-to-run-mainjs","content":"If you are facing an error message like Error: execution reverted: ERC20: approve to the zero address  The contract probably has not been mapped yet. If you have not run Geth, you will get an error like this (node:3962) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 1) (node:3962) [DEP0018] DeprecationWarning: Unhandled terminate the Node.js process with a non-zero exit code. node_modules/safe-event-emitter/index.js:74 throw err ^ Error: PollingBlockTracker - encountered an error while attempting to update latest block: Error: connect ECONNREFUSED 127.0.0.1:8545  If you get an error like this { code: -32000, message: 'getDeleteStateObject (0000000000000000000000000000000000000000) error: no suitable peers available' }  Wait a bit and try again ","version":null,"tagName":"h2"},{"title":"Sync & Confirmation​","type":1,"pageTitle":"How to transfer ERC-20 tokens to the Polygon (Matic) chain","url":"/Wisdom-Hub/blockchain/Polygon/PoS Bridge/erc20-pos-bridge#sync--confirmation","content":"It takes up to 5 minutes for Mumbai to read data from the Goerli chain and sync itself. Once it has synced, then we can check the token balance in Metamask.  Transfer using Web UI Transferring assets through Web UI is pretty simple. Note that we can't use Goerli to Mumbai here. Because Web UI only supports Ethereum and Polygon mainnets. So I am going to transfer some real tokens from my Ethereum account to Polygon and pay the fees. You may just follow the images below to see how the process works. Open wallet.polygon.technology Make sure Ethereum Mainnet is selected in Metamask Click on Metamask. first login option You will be asked to sign a Signature Request to make sure you have access to the wallet. It costs no fees I chose DAI token from Ethereum Click on Transfer Then review the transaction details, like gas fees and the smart contract you are sending tokens to - before clicking on Confirm Once the transaction is mined, the process is complete! It takes about 7 minutes to complete the transfer, as mentioned before Polygon needs about 5 minutes to sync. Conclusion Congratulations! By completing this tutorial you learned how to use the Polygon PoS Bridge. We have configured Metamask and Geth, to communicate with the Goerli testnet and the Mumbai testnet. We then mapped an ERC-20 token between the networks so it can be transferred via the bridge. Finally, we called functions on the PoS Bridge contracts and moved our assets from Ethereum to Polygon. About The Author I'm mlibre, a random guy from the solar galaxy. I am interested in blockchain tech and find it very useful in lots of things. Feel free to check my Github ","version":null,"tagName":"h2"},{"title":"Docusaurus","type":0,"sectionRef":"#","url":"/Wisdom-Hub/docusaurus","content":"","keywords":"","version":null},{"title":"Install​","type":1,"pageTitle":"Docusaurus","url":"/Wisdom-Hub/docusaurus#install","content":"nano .gitignore node_modules npx create-docusaurus@latest docusaurus classic cd website # npx create-docusaurus@latest --help  ","version":null,"tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Docusaurus","url":"/Wisdom-Hub/docusaurus#configuration","content":"nano package.json &quot;mybuild&quot;: &quot;rm -r .docusaurus/; rm -r docs/; rm -rf ../docs; cp -r ../Contents docs/; docusaurus build; cp -r build ../docs&quot; nano docusaurus.config.js # Visit https://github.com/mlibre/Wisdom-Hub/blob/master/website/docusaurus.config.js  ","version":null,"tagName":"h2"},{"title":"Run​","type":1,"pageTitle":"Docusaurus","url":"/Wisdom-Hub/docusaurus#run","content":"# Starts the development server. npm start # Bundles your website into static files for production into the &quot;build&quot; folder npm run build # Build website for github pages npm run mybuild # Serves the built website locally npm run serve # Publishes the website to GitHub pages npm deploy  ","version":null,"tagName":"h2"},{"title":"Github Actions​","type":1,"pageTitle":"Docusaurus","url":"/Wisdom-Hub/docusaurus#github-actions","content":"mkdir -p .github/workflows nano .github/workflows/npm.yml  name: Generate Docs Folder on: push: branches: ['master'] jobs: build: name: Make Website runs-on: ubuntu-latest steps: - uses: actions/checkout@v3 - uses: actions/setup-node@v3 with: node-version: 20.x - name: Build docs working-directory: ./docusaurus run: npm install; npm run mybuild - name: Commit and push changes run: | git config --global user.name &quot;mlibre&quot; git config --global user.email &quot;m.gh@linuxmail.org&quot; git config --global core.autocrlf input git config --global core.fileMode false git config core.autocrlf input git config core.fileMode false git add . git commit -m &quot;Build docs&quot; git push  ","version":null,"tagName":"h2"},{"title":"Troubleshooting​","type":1,"pageTitle":"Docusaurus","url":"/Wisdom-Hub/docusaurus#troubleshooting","content":"Refresh the git repo, if anything is wrong with it: git config --global user.name &quot;mlibre&quot; git config --global user.email &quot;m.gh@linuxmail.org&quot; git config --global core.autocrlf input git config --global core.fileMode false git config core.autocrlf input git config core.fileMode false git add --renormalize . git commit -m &quot;Build docs&quot; git push  ","version":null,"tagName":"h2"},{"title":"Resources​","type":1,"pageTitle":"Docusaurus","url":"/Wisdom-Hub/docusaurus#resources","content":"Website: https://docusaurus.io/docs ","version":null,"tagName":"h2"},{"title":"How to write Smart Contracts on Polygon","type":0,"sectionRef":"#","url":"/Wisdom-Hub/blockchain/Polygon/Smart Contracts/","content":"","keywords":"","version":null},{"title":"Table of content​","type":1,"pageTitle":"How to write Smart Contracts on Polygon","url":"/Wisdom-Hub/blockchain/Polygon/Smart Contracts/#table-of-content","content":"RequirementsAccountInstallationImplementationDeployingInteracting with the blockchain GethWeb3 MATIC ","version":null,"tagName":"h2"},{"title":"Requirements​","type":1,"pageTitle":"How to write Smart Contracts on Polygon","url":"/Wisdom-Hub/blockchain/Polygon/Smart Contracts/#requirements","content":"Node.js 14ethereum-smart-contract-deployer 2.0.0 solc: 0.8.9web3: 1.6.0 ","version":null,"tagName":"h2"},{"title":"Account​","type":1,"pageTitle":"How to write Smart Contracts on Polygon","url":"/Wisdom-Hub/blockchain/Polygon/Smart Contracts/#account","content":"First, create an Ethereum account if you don't have one. If you already have, you don't need another. You just need to send some credit to your account using Matic faucet. Click on the link below, and request for a fund. https://faucet.polygon.technology/ now we need to communicate with the Testnet. Create an Datahub account. Now let's check if your account is funded. geth attach https://matic-mumbai--jsonrpc.datahub.figment.io/apikey/YOURKEY/ &gt; eth.getBalance(&quot;0xD8f24D419153E5D03d614C5155f900f4B5C8A65C&quot;) 1987540120000000000  ","version":null,"tagName":"h2"},{"title":"Installation​","type":1,"pageTitle":"How to write Smart Contracts on Polygon","url":"/Wisdom-Hub/blockchain/Polygon/Smart Contracts/#installation","content":"If you are using Arch-based Linux, like Manjaro here are the commands. for other distributions, are also almost the same. sudo pacman -S nodejs npm geth sudo npm install -g solc solcjs --version git clone https://github.com/mlibre/blockchain.git cd blockchain/Polygon/Smart Contracts npm install  ","version":null,"tagName":"h2"},{"title":"Implementation​","type":1,"pageTitle":"How to write Smart Contracts on Polygon","url":"/Wisdom-Hub/blockchain/Polygon/Smart Contracts/#implementation","content":"You can find the Voter contract source code here. In this contract, you can simply add options to vote for, start a voting process, vote the options and get the result. ","version":null,"tagName":"h2"},{"title":"Deploying​","type":1,"pageTitle":"How to write Smart Contracts on Polygon","url":"/Wisdom-Hub/blockchain/Polygon/Smart Contracts/#deploying","content":"We use ethereum-smart-contract-deployer npm module to deploy the contract. node main.js  The output is something like: Network Name: private Network Peers: 118 Solidity Version: 0.8.9 Compiling contract voter.sol Deploying Contract Voter Arguments: [ [ 'mlibre', 'Good' ] ] Transaction hash: 0x347177fb10ce9028e75bdb98885ac33f98fcd46ac67f0371d8dbac3d8e5ebe6d Owner: 0xD8f24D419153E5D03d614C5155f900f4B5C8A65C Contract Address: 0xeaFEAf1e75B89DabfAf4E8C41858AFBe51c291B8  Congratulations. you made your first contract in Polygon Network. You can find your contract address in the output log. Check it here: https://mumbai.polygonscan.com/address/0xeaFEAf1e75B89DabfAf4E8C41858AFBe51c291B8 ","version":null,"tagName":"h2"},{"title":"Interacting with the blockchain​","type":1,"pageTitle":"How to write Smart Contracts on Polygon","url":"/Wisdom-Hub/blockchain/Polygon/Smart Contracts/#interacting-with-the-blockchain","content":"The next step is to interact with the blockchain using Geth and web3js. ","version":null,"tagName":"h2"},{"title":"Geth​","type":1,"pageTitle":"How to write Smart Contracts on Polygon","url":"/Wisdom-Hub/blockchain/Polygon/Smart Contracts/#geth","content":"geth attach https://matic-mumbai--jsonrpc.datahub.figment.io/apikey/a99e72c92474b4eaec9340d7c03f3b81/ eth.getCode(&quot;0xeaFEAf1e75B89DabfAf4E8C41858AFBe51c291B8&quot;) # To load a contract using geth just need to put the abi we created, and the address var abi = [{&quot;inputs&quot;:[{&quot;internalType&quot;:&quot;string[]&quot;,&quot;name&quot;:&quot;_options&quot;,&quot;type&quot;:&quot;string[]&quot;}],&quot;stateMutability&quot;:&quot;nonpayable&quot;,&quot;type&quot;:&quot;constructor&quot;},{&quot;inputs&quot;:[{&quot;internalType&quot;:&quot;string&quot;,&quot;name&quot;:&quot;option&quot;,&quot;type&quot;:&quot;string&quot;}],&quot;name&quot;:&quot;addOption&quot;,&quot;outputs&quot;:[],&quot;stateMutability&quot;:&quot;nonpayable&quot;,&quot;type&quot;:&quot;function&quot;},{&quot;inputs&quot;:[],&quot;name&quot;:&quot;getOptions&quot;,&quot;outputs&quot;:[{&quot;internalType&quot;:&quot;string[]&quot;,&quot;name&quot;:&quot;&quot;,&quot;type&quot;:&quot;string[]&quot;}],&quot;stateMutability&quot;:&quot;view&quot;,&quot;type&quot;:&quot;function&quot;},{&quot;inputs&quot;:[],&quot;name&quot;:&quot;getVotes&quot;,&quot;outputs&quot;:[{&quot;internalType&quot;:&quot;uint256[]&quot;,&quot;name&quot;:&quot;&quot;,&quot;type&quot;:&quot;uint256[]&quot;}],&quot;stateMutability&quot;:&quot;view&quot;,&quot;type&quot;:&quot;function&quot;},{&quot;inputs&quot;:[{&quot;internalType&quot;:&quot;uint256&quot;,&quot;name&quot;:&quot;&quot;,&quot;type&quot;:&quot;uint256&quot;}],&quot;name&quot;:&quot;options&quot;,&quot;outputs&quot;:[{&quot;internalType&quot;:&quot;string&quot;,&quot;name&quot;:&quot;&quot;,&quot;type&quot;:&quot;string&quot;}],&quot;stateMutability&quot;:&quot;view&quot;,&quot;type&quot;:&quot;function&quot;},{&quot;inputs&quot;:[],&quot;name&quot;:&quot;owner&quot;,&quot;outputs&quot;:[{&quot;internalType&quot;:&quot;address&quot;,&quot;name&quot;:&quot;&quot;,&quot;type&quot;:&quot;address&quot;}],&quot;stateMutability&quot;:&quot;view&quot;,&quot;type&quot;:&quot;function&quot;},{&quot;inputs&quot;:[],&quot;name&quot;:&quot;remove&quot;,&quot;outputs&quot;:[],&quot;stateMutability&quot;:&quot;nonpayable&quot;,&quot;type&quot;:&quot;function&quot;},{&quot;inputs&quot;:[],&quot;name&quot;:&quot;startVoting&quot;,&quot;outputs&quot;:[],&quot;stateMutability&quot;:&quot;nonpayable&quot;,&quot;type&quot;:&quot;function&quot;},{&quot;inputs&quot;:[{&quot;internalType&quot;:&quot;uint256&quot;,&quot;name&quot;:&quot;option&quot;,&quot;type&quot;:&quot;uint256&quot;}],&quot;name&quot;:&quot;vote&quot;,&quot;outputs&quot;:[],&quot;stateMutability&quot;:&quot;nonpayable&quot;,&quot;type&quot;:&quot;function&quot;},{&quot;inputs&quot;:[{&quot;internalType&quot;:&quot;uint256&quot;,&quot;name&quot;:&quot;&quot;,&quot;type&quot;:&quot;uint256&quot;}],&quot;name&quot;:&quot;votes&quot;,&quot;outputs&quot;:[{&quot;internalType&quot;:&quot;uint256&quot;,&quot;name&quot;:&quot;&quot;,&quot;type&quot;:&quot;uint256&quot;}],&quot;stateMutability&quot;:&quot;view&quot;,&quot;type&quot;:&quot;function&quot;}] var voter = eth.contract(abi).at(&quot;0xeaFEAf1e75B89DabfAf4E8C41858AFBe51c291B8&quot;); voter  ","version":null,"tagName":"h3"},{"title":"Web3​","type":1,"pageTitle":"How to write Smart Contracts on Polygon","url":"/Wisdom-Hub/blockchain/Polygon/Smart Contracts/#web3","content":"To interact with the blockchain using web3js, we need to create a web3 instance. And have the contract address and the abi. So you need to keep the abi and the address in a file for later use. You can also use the deployer contract instance just after the deployment. const sender = &quot;0xD8f24D419153E5D03d614C5155f900f4B5C8A65C&quot;; const deployer = await new Deployer({ contractFilePath: &quot;voter.sol&quot;, input: [[&quot;mlibre&quot; , &quot;Good&quot;]], sender, privateKey: secrets.privateKey, address: secrets.mumbai }); const contract = await deployer.deploy(); // let abi = deployer.contract.abi // let contract = deployer.contractInstance await contract.methods.addOption(&quot;new option&quot;).send({from: sender}); const options = await contract.methods.getOptions().call(); await contract.methods.startVoting().send({from: sender}); await contract.methods.vote(0).send({from: sender}); const votes = await contract.methods.getVotes().call({ from: sender, }); console.log(options, votes);  ","version":null,"tagName":"h3"},{"title":"MATIC​","type":1,"pageTitle":"How to write Smart Contracts on Polygon","url":"/Wisdom-Hub/blockchain/Polygon/Smart Contracts/#matic","content":"MATIC is the Polygon Network native token. The MATIC token will be used as the gas fee by default. Polygon network provides an API to get the recommended gas price. The javascript code would be something like this: fetch('https://gasstation-mainnet.matic.network') .then(response =&gt; response.json()) .then(json =&gt; console.log(json))  and the result is like: { &quot;safeLow&quot;: 1, &quot;standard&quot;: 1, &quot;fast&quot;: 5, &quot;fastest&quot;: 7.5, &quot;blockTime&quot;: 2, &quot;blockNumber&quot;: 3091956 }  ","version":null,"tagName":"h2"},{"title":"Learn Linux","type":0,"sectionRef":"#","url":"/Wisdom-Hub/linux/","content":"","keywords":"","version":null},{"title":"Tutorials​","type":1,"pageTitle":"Learn Linux","url":"/Wisdom-Hub/linux/#tutorials","content":"This repository is organized into several sections, each containing tutorials for specific topics. Here's a brief overview: Access and PermissionDisk and FileSystemdLog and MonitoringShell-scriptingTextProcessesAutomationMultimediaToolsOther ","version":null,"tagName":"h2"},{"title":"My ETH Address​","type":1,"pageTitle":"Learn Linux","url":"/Wisdom-Hub/linux/#my-eth-address","content":"0xc9b64496986E7b6D4A68fDF69eF132A35e91838e ","version":null,"tagName":"h2"},{"title":"Health","type":0,"sectionRef":"#","url":"/Wisdom-Hub/Life","content":"","keywords":"","version":null},{"title":"General​","type":1,"pageTitle":"Health","url":"/Wisdom-Hub/Life#general","content":"Avoid processed foods: sausages, processed or industrial sauces and oils, Processed drinks (soda, industrial malt, etc.) Avoid artificial sweeteners and added sugar: processed chocolate milk, processed banana milk, processed fruit juice, and other artificially made combinations that contain unhealthy additives such as refined or added sugar and preservatives. These refined sugar weaken the immune system and have other negative effects Limit daily milk intake to maximum one glass Mixed with honey Avoid consuming cold temperature foods or drinks right after waking up, like cold milk or cold juice Avoid consuming cold nature foods or drinks right after waking up, like cheese or yogurt It's best to start your day with something warm, such as green tea or honey tea with dates Use bran bread: The bran is the outer layer of the grain and is rich in fiber, vitamins, minerals, and antioxidants. It provides essential nutrients like B vitamins, iron, magnesium, and dietary fiber Do not drink water with meals. From half an hour before the meal to 1.5 hours after the meal. It puts pressure on the stomach. Avoid straining to poop, as it can put pressure on the stomach. Maintain your body's energy levels. Avoid self-indulgence and masturbation, as it weakens the body. Reduce stress levels, as stress weakens the immune system. Going to bed late is not good for digestion. you should be Sleep by 11 max. Sleep properly. Lie on your back or side, but not on your stomach. Proper posture when sitting Walking for at least 10 minutes in the sun before or after noon. Take a shower at least twice a week. Showering is also exercise for your muscles. ","version":null,"tagName":"h2"},{"title":"Back, Neck, and Body​","type":1,"pageTitle":"Health","url":"/Wisdom-Hub/Life#back-neck-and-body","content":"Do daily light core exercisesDo isometric neck exercises to strengthen your neck muscles. make sure your head is not in the middle. For example, if you are doing resistance exercise in front of your head, your head better be slightly bent forward. Do this for all directions. several sessions per day, such as 3 sessions. Each movement 10 seconds or 10 repetitions.Stay active and avoid keeping your neck still. Move your neck every 30 minutes.Limit work to a maximum of 6 hours per day.Avoid impact. Avoid carrying heavy bagsAvoid bumps and cars with weak shock absorbers.Avoid bending your neck backward too much or keeping your neck bent backward for extended periods FoodsMattresses: A medium-firm mattress is generally considered to be the best option. This is because it provides enough support to keep the spine in alignment, without being too firm that restrict your movement and may causing pain, or too soft and causing sinking and misalignment ","version":null,"tagName":"h2"},{"title":"Juice​","type":1,"pageTitle":"Health","url":"/Wisdom-Hub/Life#juice","content":"Pineapple juiceCantaloupe juiceStrawberry juicePomegranate juiceMulberry juiceOrrange juice ","version":null,"tagName":"h2"},{"title":"Foods​","type":1,"pageTitle":"Health","url":"/Wisdom-Hub/Life#foods","content":"Sesame seedsFigsBananasLentilsHoney ","version":null,"tagName":"h2"},{"title":"Drinks​","type":1,"pageTitle":"Health","url":"/Wisdom-Hub/Life#drinks","content":"Honey boiled with lukewarm water + Chia seedHoney with warm boiled water + Rose waterHoney with lukewarm boiled water + lemon ","version":null,"tagName":"h2"},{"title":"disinfection​","type":1,"pageTitle":"Health","url":"/Wisdom-Hub/Life#disinfection","content":"10 minutes of breathing onion or mint fumes. 3 onionsLemon and honey Wealth in the Quran Good Person\tAction\tBad PersonUp to 700 times\t⬆️ Charity ⬇️\tLike seeds on rock A lesson from God\t⬇️ Sin, Ignorance ⬆️\tAs God allows them to stray Limited by God to prevent rebellion\t⬇️ Rebellion ⬆️\tTemporarily, followed by punishment  ","version":null,"tagName":"h2"},{"title":"Charity​","type":1,"pageTitle":"Health","url":"/Wisdom-Hub/Life#charity","content":"Surah Al-Baqarah (2:261) &quot;The example of those who spend their wealth in the way of Allah is like a seed [of grain] that sprouts seven ears; in every ear is a hundred grains. And Allah multiplies [His reward] for whom He wills.&quot; Charity, according to the Quran, brings abundant reward, multiplying wealth up to 700 times. It purifies the giver’s wealth, ensuring blessings and divine favor. Surah Al-Baqarah (2:264) &quot;O you who have believed, do not invalidate your charities with reminders or injury as does one who spends his wealth to be seen by the people and does not believe in Allah and the Last Day. His example is like that of a [large] smooth stone upon which is dust and is hit by a downpour that leaves it bare. They are unable [to keep] anything of what they have earned.&quot;  ","version":null,"tagName":"h2"},{"title":"Rebellion​","type":1,"pageTitle":"Health","url":"/Wisdom-Hub/Life#rebellion","content":"Surah Ash-Shura (42:27) &quot;If Allah were to extend [excessively] provision for His servants, they would certainly rebel throughout the earth; but He sends [it] down in an amount which He wills. Indeed, He is, of His servants, Acquainted and Seeing.&quot; Allah withholds excessive wealth from some individuals, even good ones, to prevent potential rebellion or arrogance. By limiting provisions, God preserves humility and righteousness among His servants  ","version":null,"tagName":"h2"},{"title":"Sin​","type":1,"pageTitle":"Health","url":"/Wisdom-Hub/Life#sin","content":"Surah Al-An'am (6:44) &quot;So when they forgot that by which they had been reminded, We opened to them the doors of every [good] thing until, when they rejoiced in that which they were given, We seized them suddenly, and they were [then] in despair.&quot; God allows some individuals to stray in their wrongdoing, letting them increase in wealth temporarily as a form of trial or punishment. Ultimately, such wealth lacks blessing and may lead to ruin. Surah Al-Mu’minun (23:55-56) &quot;Do they think that We extend to them wealth and children? We hasten for them good things in this life, but they do not perceive.&quot; ثروت در قرآن انسان خوب\tعمل\tانسان بدتا ۷۰۰ برابر\t⬆️ صدقه\tمانند بذر روی سنگ محدود شده توسط خدا برای منع طغیان\t⬇️ طغیان\tموقتی، و به دنبال آن مجازات است درسی از خداوند\tگناه، جهل\tموقتی، و به دنبال آن مجازات است  ","version":null,"tagName":"h2"},{"title":"صدقه​","type":1,"pageTitle":"Health","url":"/Wisdom-Hub/Life#صدقه","content":"سوره بقره (۲:۲۶۱) «مَثَلُ الَّذِینَ یُنفِقُونَ أَمْوَالَهُمْ فِی سَبِیلِ اللَّهِ کَمَثَلِ حَبَّةٍ أَنبَتَتْ سَبْعَ سَنَابِلَ فِی کُلِّ سُنبُلَةٍ مِّائَةُ حَبَّةٍ ۗ وَاللَّهُ یُضَاعِفُ لِمَن یَشَاءُ» كسانى كه اموال خود را در راه خدا انفاق مى‌كنند، همانند بذرى هستند كه هفت خوشه بروياند؛ كه در هر خوشه، يكصد دانه باشد؛ وخداوند آن را براى هر كس بخواهد و شايسته باشد ، دو يا چند برابر مى‌كند؛ و لطف خدا گسترده، و او به همه چيز داناست سوره بقره (۲:۲۶۴) «یَا أَیُّهَا الَّذِینَ آمَنُوا لَا تُبْطِلُوا صَدَقَاتِکُم بِالْمَنِّ وَالْأَذَىٰ کَالَّذِی یُنفِقُ مَالَهُ رِئَاءَ النَّاسِ وَلَا یُؤْمِنُ بِاللَّهِ وَالْیَوْمِ الْآخِرِ ۖ فَمَثَلُهُ کَمَثَلِ صَفْوَانٍ عَلَیْهِ تُرَابٌ فَأَصَابَهُ وَابِلٌ فَتَرَکَهُ صَلْدًا ۖ لَّا یَقْدِرُونَ عَلَىٰ شَیْءٍ مِّمَّا کَسَبُوا»  ","version":null,"tagName":"h2"},{"title":"طغیان​","type":1,"pageTitle":"Health","url":"/Wisdom-Hub/Life#طغیان","content":"سوره شوری (۴۲:۲۷) «وَلَوْ بَسَطَ اللَّهُ الرِّزْقَ لِعِبَادِهِ لَبَغَوْا فِی الْأَرْضِ وَلَـٰکِن یُنَزِّلُ بِقَدَرٍ مَّا یَشَاءُ ۚ إِنَّهُ بِعِبَادِهِ خَبِیرٌ بَصِیرٌ» خداوند ثروت بیش از حد را از برخی افراد، حتی افراد خوب، دریغ می‌کند تا از طغیان یا تکبر احتمالی جلوگیری کند. با محدود کردن روزی، خداوند تواضع و پرهیزگاری را در میان بندگانش حفظ می‌کند  ","version":null,"tagName":"h2"},{"title":"گناه​","type":1,"pageTitle":"Health","url":"/Wisdom-Hub/Life#گناه","content":"سوره انعام (۶:۴۴) «فَلَمَّا نَسُوا مَا ذُکِّرُوا بِهِ فَتَحْنَا عَلَیْهِمْ أَبْوَابَ کُلِّ شَیْءٍ حَتَّىٰ إِذَا فَرِحُوا بِمَا أُوتُوا أَخَذْنَاهُم بَغْتَةً فَإِذَا هُم مُّبْلِسُونَ» خداوند به برخی افراد اجازه می‌دهد در گناهکاری خود گمراه شوند و به آنها اجازه می‌دهد موقتاً ثروتشان به عنوان آزمایش یا مجازات افزایش یابد. در نهایت، چنین ثروتی فاقد برکت است و ممکن است به نابودی منجر شود. سوره مؤمنون (۲۳:۵۵-۵۶) «أَیَحْسَبُونَ أَنَّمَا نُمِدُّهُم بِهِ مِن مَّالٍ وَبَنِینَ * نُسَارِعُ لَهُمْ فِی الْخَیْرَاتِ ۚ بَل لَّا یَشْعُرُونَ» منابع Quranhttps://quran.inoor.irhttp://quran.isca.ac.irhttps://chatgpt.comhttps://claude.ai/ ","version":null,"tagName":"h2"},{"title":"How to transfer ERC-721 tokens to the Polygon (Matic) chain","type":0,"sectionRef":"#","url":"/Wisdom-Hub/blockchain/Polygon/PoS Bridge/erc721-pos-bridge","content":"","keywords":"","version":null},{"title":"Goerli​","type":1,"pageTitle":"How to transfer ERC-721 tokens to the Polygon (Matic) chain","url":"/Wisdom-Hub/blockchain/Polygon/PoS Bridge/erc721-pos-bridge#goerli","content":"The Goerli testnet is pre-configured in Metamask's list of available networks. You can select it from the dropdown list at the top of the Metamask interface. You can fund your account with testnet Ether from the Goerli Authenticated faucet as long as you are willing to make a post on a valid Twitter or Facebook account. If this is not something you wish to do, there is an alternative faucet at goerli-faucet.slock.it  ","version":null,"tagName":"h2"},{"title":"Mumbai​","type":1,"pageTitle":"How to transfer ERC-721 tokens to the Polygon (Matic) chain","url":"/Wisdom-Hub/blockchain/Polygon/PoS Bridge/erc721-pos-bridge#mumbai","content":"You can either open mumbai.polygonscan.com and click on &quot;Add Mumbai Network&quot; in the footer at the bottom of the page or add it manually using the following information: Network Name: Polygon Mumbai testnetRPC URL: https://rpc-mumbai.maticvigil.com/Chain ID: 80001Currency Symbol: MATICBlock Explorer URL: https://mumbai.polygonscan.com/  You can fund your Mumbai account with MATIC here MLBn ERC-721 Contract ERC-721 is a standard for representing ownership of non-fungible tokens. A non-fungible token can represent a piece of data stored somewhere, in a blockchain, decentralized storage, or ... MLBNft is the contract we have already deployed on the Goerli testnet. It is a standard OpenZeppelin ERC-721. This contract has a MLBn NFT, which was only minted once with TokenID 1. We'll map this contract and transfer the NFT. You can find a step-by-step guide to creating an ERC-721 token here Contract info: Name: MLBNft Token: MLBn Balance: 1 TokenID: 1 Owner: 0xD8f24D419153E5D03d614C5155f900f4B5C8A65C Contract Address: 0xcCE32d5A6B433972fA3Ff21233470D60ab7AFD6b goerli etherscan https://goerli.etherscan.io/address/0xcCE32d5A6B433972fA3Ff21233470D60ab7AFD6b  Gather this information for the contract you intend to map. Wallet Balance using Web3js ERC-721 contracts have a balanceOf function. It takes Wallet Address as an argument and returns the balance. If you have already configured a provider and the truffle-hdwallet-provider, you can use this function to check your ERC-721 token info and balance. async function getBalance(web3, contract, contractAddress) { let contractInstance = new web3.eth.Contract(ABI, contractAddress); let result = await contractInstance.methods.balanceOf(address).call() console.log(`Balance:` , result); }  The balanceOf output for our contract in Goerli would be like: Balance: 1  And for Mumbai: Balance: 0  The full source code is: const Web3 = require(&quot;web3&quot;); const HDWalletProvider = require(&quot;@truffle/hdwallet-provider&quot;) const secrets = require('./secrets.json') let address = &quot;0xD8f24D419153E5D03d614C5155f900f4B5C8A65C&quot;; // The address to check balance of let contractAddressGoerli = &quot;0xcCE32d5A6B433972fA3Ff21233470D60ab7AFD6b&quot;; // Goerli Contract Address let contractAddressInMumbai = &quot;0xf6320326327c07759602423f01D8fad4AF9E3f24&quot;; // Mumbai Contract Address let ABI = [{&quot;inputs&quot;:[],&quot;s...&quot;}] // const provider = new HDWalletProvider(secrets.privateKey, secrets.localGeth); // Goerli Provider const provider = new HDWalletProvider(secrets.privateKey, secrets.mumbai); // mumbai Provider const web3 = new Web3(provider); (async () =&gt; { try { await getBalance() } catch (e) { console.log(e) } })() async function getBalance() { let contractInstance = new web3.eth.Contract(ABI, contractAddressInMumbai); let result = await contractInstance.methods.balanceOf(address).call() console.log(`Balance` , result); }  secrets.json: contains Seed, privateKey of the address (0xd8f2). And Mumbai API URL. ex: { &quot;privateKey&quot;: &quot;This should be the private key of an account specifically made for use on the Goerli testnet&quot;, &quot;seed&quot;: &quot;This should be a Secret Recovery Phrase from Metamask and ONLY used on Ethereum testnets&quot;, &quot;mumbai&quot;: &quot;https://matic-mumbai--jsonrpc.datahub.figment.io/apikey/YOUR_API_KEY/&quot;, &quot;localGeth&quot;: &quot;http://127.0.0.1:8545&quot; }  Mapping Now that everything is ready. Let's map our MLBn contract. Go to mapper.matic.today and complete the form Make sure the token you want to map has had its contract verified on Etherscan Choose Gorli Testnet -&gt; Mumbai testnet At this time the mapping process is not immediate. It can take up to 3 days to be confirmed. Then open mapper.matic.today, and enter the contract address to see if it has been added.  As you may notice, the contract address in Goerli and Mumbai is not the same. Let's remember to add it to Metamask so it shows up when we are connected to Mumbai as well. Open MetamaskSelect the Mumbai testnet from the list of available networksAdd TokenPaste the contract address there (0xf6320326327c07759602423f01D8fad4AF9E3f24) We don't yet have any tokens in Mumbai. We can transfer some across the bridge and check our balance again afterward. Transfer using SDK Let's take a look at the workflow for transferring tokens with the SDK: Approve: The owner of the token has to approve the Ethereum Predicate Contract which will lock the amount of token they want to transfer to Polygon.Deposit: Then a function has to be called on the RootChainManger contract which will trigger the ChildChainManager contract on the Mumbai testnet. The ChildChainManager contract will then call the deposit function of the Child token contract. The Child contract is the copy of the Goerli testnet token contract in Mumbai testnet.  ","version":null,"tagName":"h2"},{"title":"Providers​","type":1,"pageTitle":"How to transfer ERC-721 tokens to the Polygon (Matic) chain","url":"/Wisdom-Hub/blockchain/Polygon/PoS Bridge/erc721-pos-bridge#providers","content":"To interact with Goerli and Mumbai we can either run a local node (which is slightly more difficult) or use the RPC endpoints of infrastructure providers like DataHub or Infura (which is much simpler). For Goerli, we will run a local Geth node. You can also use infura. For Mumbai, we will use DataHub Goerli: Install the Geth client, if you have not installed it already, then run: geth --goerli --ws --http --syncmode=light --http.api=&quot;eth,net,web3,personal,txpool&quot; --allow-insecure-unlock --http.corsdomain &quot;*&quot;  The default endpoint is 127.0.0.1:8545. You can get attached and see if everything is fine: geth attach http://127.0.0.1:8545 eth.getBalance(&quot;0xD8f24D419153E5D03d614C5155f900f4B5C8A65C&quot;)  Mumbai: Sign up for a DataHub Choose the Polygon service from the DataHub Services DashboardScroll down to see the Polygon endpoint URLsForm the URL like so, replacing the text YOUR_API_KEY with the API key you got from DataHub:https://matic-mumbai--jsonrpc.datahub.figment.io/apikey/YOUR_API_KEY/ ","version":null,"tagName":"h2"},{"title":"Installing helpers​","type":1,"pageTitle":"How to transfer ERC-721 tokens to the Polygon (Matic) chain","url":"/Wisdom-Hub/blockchain/Polygon/PoS Bridge/erc721-pos-bridge#installing-helpers","content":"Now that we have the information we need and the other important pieces in place, we can write some useful code using the maticjs client library and the HDWalletProvider class from Truffle. We will need to install both of these packages on the commandline with the Node package manager. Use these commands to install the packages and save them in the project manifest, package.json: npm install @maticnetwork/maticjs --save npm install @truffle/hdwallet-provider --save  ","version":null,"tagName":"h2"},{"title":"Approve​","type":1,"pageTitle":"How to transfer ERC-721 tokens to the Polygon (Matic) chain","url":"/Wisdom-Hub/blockchain/Polygon/PoS Bridge/erc721-pos-bridge#approve","content":"To approve the Ethereum Predicate Contract we just need to call the approveERC721ForDeposit function. The code for this is straightforward: await maticPOSClient.approveERC721ForDeposit(rootToken, tokenId, { from: user })  ","version":null,"tagName":"h2"},{"title":"Deposit​","type":1,"pageTitle":"How to transfer ERC-721 tokens to the Polygon (Matic) chain","url":"/Wisdom-Hub/blockchain/Polygon/PoS Bridge/erc721-pos-bridge#deposit","content":"Next, we would call the depositERC721ForUser function of the Ethereum Predicate Contract: await maticPOSClient.depositERC721ForUser( rootToken, user, tokenId.toString(), { from: user } )  To bring it all together in JavaScript that can be executed either in a web browser or on the commandline, we can add some constants and use an external file to hold the sensitive API keys and wallet seed phrases. This is a complete example of how to use maticjs and the HDWalletProvider class to communicate with a deployed smart contract on Polygon. Use the following code as a guide for building your own solution! // main.js const HDWalletProvider = require(&quot;@truffle/hdwallet-provider&quot;) const { MaticPOSClient } = require(&quot;@maticnetwork/maticjs&quot;) const secrets = require(&quot;./secrets.json&quot;) let user = &quot;0xD8f24D419153E5D03d614C5155f900f4B5C8A65C&quot; let rootToken = &quot;0xcCE32d5A6B433972fA3Ff21233470D60ab7AFD6b&quot; // Goerli Contract Address let childToken = &quot;0xf6320326327c07759602423f01D8fad4AF9E3f24&quot; // Goerli Contract Address let tokenId = 3 // Token ID const parentProvider = new HDWalletProvider(secrets.seed, &quot;http://127.0.0.1:8545&quot;) // // Local Geth client address const maticProvider = new HDWalletProvider(secrets.seed, secrets.mumbai) // DataHub Mumbai Testnet JSONRPC URL const maticPOSClient = new MaticPOSClient({ network: &quot;testnet&quot;, version: &quot;mumbai&quot;, parentProvider, maticProvider }); (async () =&gt; { try { let result = await maticPOSClient.approveERC721ForDeposit(rootToken, tokenId, { from: user, gasPrice: &quot;10000000000&quot; }) console.log(result) let result_2 = await maticPOSClient.depositERC721ForUser( rootToken, user, tokenId.toString(), { from: user, gasPrice: &quot;10000000000&quot; } ) console.log(result_2) } catch (error) { console.log(error) } })()  The expected output for approveERC721ForDeposit is something like this: { blockHash: '0xc20d22a31da707a97930a0277dfdc64c4d1fdabe619ee8d5c30e8ec4429de8a7', blockNumber: 5611016, contractAddress: null, cumulativeGasUsed: 29345, effectiveGasPrice: '0x87ffb64b', from: '0xd8f24d419153e5d03d614c5155f900f4b5c8a65c', gasUsed: 29345, logsBloom: '0xstatus: true, to: '0xcce32d5a6b433972fa3ff21233470d60ab7afd6b', transactionHash: '0xe397fe030e14402ecfd4920a2e4dc32f3adb7b2cd8baa6df2cb7fa22decd4b8c', transactionIndex: 0, type: '0x0', events: { Approval: { address: '0xcCE32d5A6B433972fA3Ff21233470D60ab7AFD6b', blockNumber: 5611016, transactionHash: '0xe397fe030e14402ecfd4920a2e4dc32f3adb7b2cd8baa6df2cb7fa22decd4b8c', transactionIndex: 0, blockHash: '0xc20d22a31da707a97930a0277dfdc64c4d1fdabe619ee8d5c30e8ec4429de8a7', logIndex: 0, removed: false, id: 'log_3c37d4f8', returnValues: [Result], event: 'Approval', signature: '0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925', raw: [Object] } } }  And for depositERC721ForUser:  { blockHash: '0xb353ae7b47953a6bec8c2a0d01852dbb917d4b018cf3d8243d1fd69cdde3ee56', blockNumber: 5611018, contractAddress: null, cumulativeGasUsed: 268430, effectiveGasPrice: '0x87ffb64b', from: '0xd8f24d419153e5d03d614c5155f900f4b5c8a65c', gasUsed: 111868, logsBloom: '0x0000000000000000000000000002000000000008000840000000000000000000000400000000000000040108010000000000080000000000000000000024000000004000400000001000000a000000000000000000040000000000100000000000000000020000000000000400000810000000000000000000000010000000000000000800000000000000000000000000000000000004000000020000080000020000000200000000000000000000000400000000000800000000000000000000000002000000000000000000000102000000100000000000000000400060000010000000000000000800000000000000000000000000000000000000000000', status: true, to: '0xbbd7cbfa79faee899eaf900f13c9065bf03b1a74', transactionHash: '0x5167f0d875aeeb0b9a695be6acbcfe568039f7e43084d58f6211dbf14ec8336f', transactionIndex: 2, type: '0x0', events: { '0': { address: '0x74D83801586E9D3C4dc45FfCD30B54eA9C88cf9b', blockNumber: 5611018, transactionHash: '0x5167f0d875aeeb0b9a695be6acbcfe568039f7e43084d58f6211dbf14ec8336f', transactionIndex: 2, blockHash: '0xb353ae7b47953a6bec8c2a0d01852dbb917d4b018cf3d8243d1fd69cdde3ee56', logIndex: 2, removed: false, id: 'log_bed4a03e', returnValues: Result {}, event: undefined, signature: null, raw: [Object] }, '1': { address: '0xcCE32d5A6B433972fA3Ff21233470D60ab7AFD6b', blockNumber: 5611018, transactionHash: '0x5167f0d875aeeb0b9a695be6acbcfe568039f7e43084d58f6211dbf14ec8336f', transactionIndex: 2, blockHash: '0xb353ae7b47953a6bec8c2a0d01852dbb917d4b018cf3d8243d1fd69cdde3ee56', . . .  Just a few things to mention: secrets.json: contains Seed, privateKey of the address (0xd8f2). And Mumbai API URL. ex: { &quot;privateKey&quot;: &quot;This should be the private key of an account specifically made for use on the Goerli testnet&quot;, &quot;seed&quot;: &quot;This should be a Secret Recovery Phrase from Metamask and ONLY used on Ethereum testnets&quot;, &quot;mumbai&quot;: &quot;https://matic-mumbai--jsonrpc.datahub.figment.io/apikey/YOUR_API_KEY/&quot; }  @truffle/hdwallet-provider: Handles signing transactions processfrom: The Goerli address we created token and want to send transactions withrootToken: The ERC-721 contract address on the Goerli testnetamount: the amount of token we want to transfer. Potential errors and solutions Not able to run main.js If you are facing an error message like Error: execution reverted: RootChainManager: TOKEN_NOT_MAPPED  The contract has not been mapped yet. Geth not running If you have not run Geth, you will get an error like this Error: PollingBlockTracker - encountered an error while attempting to update latest block: Error: connect ECONNREFUSED 127.0.0.1:8545  No peers available If you get an error like this { code: -32000, message: 'getDeleteStateObject (0000000000000000000000000000000000000000) error: no suitable peers available' }  Wait a bit and try again Sync &amp; Confirmation It takes up to 5 minutes for Mumbai to read data from the Goerli chain and sync itself. Once it has synced, then we can check the token balance in Metamask or via web3js. The balanceOf output for our contract in Goerli would be: Balance: 0  And for Mumbai: Balance: 1  Withdraw using SDK Now if we want to transfer our tokens from Mumbai to Goerli, similar before, we can call burnERC721 and exitERC721 functions in order. Let's take a look at the workflow for withdrawing tokens with the SDK: We will call the burn function of the Child token contract, which will burn the tokens.We will call the exit function of the RootChainManager contract, that submit the proof of burn and transfer the tokens.  ","version":null,"tagName":"h2"},{"title":"Burn​","type":1,"pageTitle":"How to transfer ERC-721 tokens to the Polygon (Matic) chain","url":"/Wisdom-Hub/blockchain/Polygon/PoS Bridge/erc721-pos-bridge#burn","content":"To burn the tokens we just need to call the burnERC721 function. The code for this is straightforward: let result = await maticPOSClient.burnERC721(childToken, tokenId, { from: user })  The expected output is something like this: { blockHash: '0x5e259cb402d7537b3d030e511865ab5e0aeb13416c72a52846fcceb2785788d8', blockNumber: 19748463, contractAddress: null, cumulativeGasUsed: 1088161, effectiveGasPrice: '0xb2d05e00', from: '0xd8f24d419153e5d03d614c5155f900f4b5c8a65c', gasUsed: 35319, logsBloom: '0xstatus: true, to: '0xf6320326327c07759602423f01d8fad4af9e3f24', transactionHash: '0x09400584a1eabdf85fc491bbbfbc9d5283905478e76fd6a5d7d22bb63e0510fa', transactionIndex: 4, type: '0x0', events: { '0': { address: '0x0000000000000000000000000000000000001010', blockNumber: 19748463, transactionHash: '0x09400584a1eabdf85fc491bbbfbc9d5283905478e76fd6a5d7d22bb63e0510fa', transactionIndex: 4, blockHash: '0x5e259cb402d7537b3d030e511865ab5e0aeb13416c72a52846fcceb2785788d8', logIndex: 9, removed: false, id: 'log_8aa0a436', returnValues: Result {}, event: undefined, signature: null, raw: [Object] }, Approval: { address: '0xf6320326327c07759602423f01D8fad4AF9E3f24', blockNumber: 19748463, transactionHash: '0x09400584a1eabdf85fc491bbbfbc9d5283905478e76fd6a5d7d22bb63e0510fa', transactionIndex: 4, blockHash: '0x5e259cb402d7537b3d030e511865ab5e0aeb13416c72a52846fcceb2785788d8', logIndex: 7, removed: false, id: 'log_a24d5618', returnValues: [Result], event: 'Approval', signature: '0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925', raw: [Object] }, Transfer: { address: '0xf6320326327c07759602423f01D8fad4AF9E3f24', blockNumber: 19748463, transactionHash: '0x09400584a1eabdf85fc491bbbfbc9d5283905478e76fd6a5d7d22bb63e0510fa', transactionIndex: 4, blockHash: '0x5e259cb402d7537b3d030e511865ab5e0aeb13416c72a52846fcceb2785788d8', logIndex: 8, removed: false, id: 'log_eb4348bf', returnValues: [Result], event: 'Transfer', signature: '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', raw: [Object] } } }  Keep the transactionHash value. We should pass it to the exit function. ","version":null,"tagName":"h2"},{"title":"Exit​","type":1,"pageTitle":"How to transfer ERC-721 tokens to the Polygon (Matic) chain","url":"/Wisdom-Hub/blockchain/Polygon/PoS Bridge/erc721-pos-bridge#exit","content":"Once the checkpoint has been submitted, we can call the exitERC721 function with the transaction hash we got by calling burnERC721: Note that it may take some time for the checkpoint to get submitted and included. You can check if it is included or not by sending the block number to this API: https://apis.matic.network/api/v1/mumbai/block-included/THE_BLOCK_NUMBER await maticPOSClient.exitERC721( burnTxHash, // transactionHash: 0x09400584a1eabdf85fc491bbbfbc9d5283905478e76fd6a5d7d22bb63e0510fa { from: user } )  The expected output is something like this: { from: '0xD8f24D419153E5D03d614C5155f900f4B5C8A65C', gas: 285406, gasLimit: 285406, gasPrice: '10000000000', nonce: 74, chainId: 5, value: 0, to: '0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74', data: '0x3805550f00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000a25f90a228421989dd0b901a037f4568e3b7554bb03b542d686e68448de982f4a254613497c08d7cb1f8e445d73e51ba1b6d9045 . . . }  The full source code is: // main.js const HDWalletProvider = require(&quot;@truffle/hdwallet-provider&quot;) const { MaticPOSClient } = require(&quot;@maticnetwork/maticjs&quot;) const secrets = require(&quot;./secrets.json&quot;) let user = &quot;0xD8f24D419153E5D03d614C5155f900f4B5C8A65C&quot; let rootToken = &quot;0xcCE32d5A6B433972fA3Ff21233470D60ab7AFD6b&quot; // Goerli Contract Address let childToken = &quot;0xf6320326327c07759602423f01D8fad4AF9E3f24&quot; // Mumbai Contract Address let tokenId = 4 // Token ID const parentProvider = new HDWalletProvider(secrets.seed, secrets.goerli) // Goerli provider address const maticProvider = new HDWalletProvider(secrets.seed, secrets.mumbai) // DataHub Mumbai Testnet JSONRPC URL const maticPOSClient = new MaticPOSClient({ network: &quot;testnet&quot;, version: &quot;mumbai&quot;, parentProvider, maticProvider }); (async () =&gt; { try { // STEP 1: // let result = await maticPOSClient.burnERC721(childToken, tokenId, { // from: user // }) // console.log(result) // STEP 2: let burnTxHash = &quot;0x09400584a1eabdf85fc491bbbfbc9d5283905478e76fd6a5d7d22bb63e0510fa&quot; // result.transactionHash let result_2 = await maticPOSClient.exitERC721( burnTxHash, { from: user, encodeAbi: true, gasPrice: &quot;10000000000&quot; } ) console.log(result_2) } catch (error) { console.log(error) } })()  Transfer using Web UI Transferring assets through Web UI is pretty simple. Just like the SDK, there is the Approve and a Deposit steps. Open MintNFT Bridge Make sure Goerli Testnet is selected in Metamask Enter the contract address in Goerli and Mumbai, and ID of the token you want to transfer. We put 1 (MLBn) Click on Approve Then review the transaction details, like gas fees and the smart contract you are sending tokens to - before clicking on Confirm Now, wait until you receive confirmations. Metamask and the website both will send a notification. Now Click on Deposit Once the transaction is mined, the process is complete! It takes about 7 minutes to complete the transfer. As mentioned before Polygon needs about 5 minutes to sync. Conclusion Congratulations! By completing this tutorial you learned how to use the Polygon PoS Bridge. We have configured Metamask and Geth, to communicate with the Goerli testnet and the Mumbai testnet. We then mapped an ERC-721 contract between the networks so it can be transferred via the bridge. Finally, we called functions on the PoS Bridge contracts and moved our assets from Ethereum to Polygon. About The Author I'm mlibre, a random guy from the solar galaxy. I am interested in blockchain tech and find it very useful for lots of things. Feel free to check my Github ","version":null,"tagName":"h2"},{"title":"Access","type":0,"sectionRef":"#","url":"/Wisdom-Hub/linux/access","content":"","keywords":"","version":null},{"title":"User and Groups​","type":1,"pageTitle":"Access","url":"/Wisdom-Hub/linux/access#user-and-groups","content":"","version":null,"tagName":"h2"},{"title":"whoami, id, groups, users​","type":1,"pageTitle":"Access","url":"/Wisdom-Hub/linux/access#whoami-id-groups-users","content":"Command\tShort Descriptionwhoami\tPrint current user's name id\tPrint user and group information groups\tPrint group memberships groups username\tShow groups for a specific user users\tShow a list of all logged-in users cat /etc/passwd\tinformation about system users cat /etc/group\tinformation about groups cat /etc/shadow\tencrypted password hashes for user accounts ","version":null,"tagName":"h3"},{"title":"passwd, useradd, adduser, usermod​","type":1,"pageTitle":"Access","url":"/Wisdom-Hub/linux/access#passwd-useradd-adduser-usermod","content":"Command\tShort Descriptionpasswd username\tChange password for the user 'username' passwd -l username\tLock user's password, she cannot use password to login or change it passwd -u username\tUnlock the password of the user useradd\tCreate new user useradd -m username\tCreate a new user with a home directory useradd -m -G groupname username\tCreate user with home directory and add them to a group useradd -m -s /bin/bash username\tCreate user with home directory and /bin/bash for login shell adduser username\tInteractively create a new user 'username' usermod -a -G groupname username\tAdd the user 'username' to the group 'groupname' usermod -l newname username\tChange the login name of the user 'username' to 'newname' usermod -m -d /new/home/dir username\tMove (create) user home directory sudo usermod --expiredate 1 username\tSet the user to expire immediately ","version":null,"tagName":"h3"},{"title":"groupadd, userdel, chage​","type":1,"pageTitle":"Access","url":"/Wisdom-Hub/linux/access#groupadd-userdel-chage","content":"Command\tShort Descriptiongroupadd\tAdd a new group to the system. sudo groupadd developers\tCreate a group named &quot;developers&quot;. sudo userdel john\tDelete the user account &quot;john&quot;. sudo userdel -r jane\tDelete the user account &quot;jane&quot; along with home directory. chage -l username\tList password aging information for a user. chage -M 90 username\tSet maximum password age to 90 days for a user. ","version":null,"tagName":"h3"},{"title":"getent​","type":1,"pageTitle":"Access","url":"/Wisdom-Hub/linux/access#getent","content":"getent retrieves entries from databases configured in /etc/nsswitch.conf Command\tShort Descriptiongetent\tRetrieve entries from administrative databases getent passwd\tRetrieve user account information (e.g., usernames, home directories) getent hosts\tRetrieve host information (e.g., IP addresses, hostnames) getent passwd mlibre\tRetrieve information for the user &quot;mlibre&quot; ","version":null,"tagName":"h3"},{"title":"/etc/skel​","type":1,"pageTitle":"Access","url":"/Wisdom-Hub/linux/access#etcskel","content":"The /etc/skel/ directory in Linux is used as a template for creating a new user's home directory. When a new user is created with the adduser or useradd -m command, the system copies the files and directories contained in the /etc/skel/ directory to the new user's home directory. ","version":null,"tagName":"h2"},{"title":"Files and Folders​","type":1,"pageTitle":"Access","url":"/Wisdom-Hub/linux/access#files-and-folders","content":"","version":null,"tagName":"h2"},{"title":"chmod​","type":1,"pageTitle":"Access","url":"/Wisdom-Hub/linux/access#chmod","content":"Command\tShort Descriptionchmod\tChange file permissions chmod +x file\tAdd execute permission to a file chmod -w file\tRemove write permission from a file chmod 644 file\tSet read and write for owner, read for group and others chmod -R 755 dir\tRecursively set permission chmod u=rwx,g=rx,o=rx file\tSet specific permissions for user, group, and others chmod u+s executable\tSet the setuid bit on an executable chmod g+s executable\tSet the setgid bit on an executable chmod a=-r file\tRemove read permission for all (owner, group, and others) chmod -x $(find /path -type f)\tRemove execute permission of all files in directory and its sub find /path -type f -exec chmod -x {} \\;\tAlternative to above command find /path -type f -print0 | xargs -0 chmod -x\tAlternative to above command a+x will set all the x bits of the file +x will set all the x bits of the file that are not present in the umask -print0 tells find to print the results separated by null characters, instead of spaces or newlines. This is useful for safely handling filenames that might contain spaces or special characters -0 tells xargs to expect input separated by null characters, and not by spaces or newlines. It ensures that xargs correctly processes the list of files provided by find ","version":null,"tagName":"h3"},{"title":"chown, chgrp, newgrp​","type":1,"pageTitle":"Access","url":"/Wisdom-Hub/linux/access#chown-chgrp-newgrp","content":"Command\tShort Descriptionchown user file\tChange the owner of a file chown user:group file\tChange the owner and group of a file chown -R user:group directory\tRecursively change the owner and group of a directory and its contents chown -c user:group file\tChange the ownership, show a message if the ownership changes chgrp\tChange group ownership of files and directories. chgrp groupname file.txt\tChange the group ownership of file.txt to groupname. chgrp -R groupname /path/to/directory\tRecursively change group ownership to groupname. chgrp --reference=file.txt test.txt\tChange group ownership of test.txt to match that of file.txt. newgrp\tChange the user primary group (default) newgrp staff\tSwitch to the 'staff' group ","version":null,"tagName":"h3"},{"title":"SUID, GUID​","type":1,"pageTitle":"Access","url":"/Wisdom-Hub/linux/access#suid-guid","content":"When the SUID permission is set on an executable file, it means that when a regular user runs that executable, it will run with the permissions of the file's owner instead of the user who is executing it. when any user executes the /usr/bin/passwd command, it runs with the elevated permissions of the root user. This is necessary because changing a user's password requires write access to the /etc/shadow file, which is typically only accessible by the root user for security reasons. The /etc/shadow file is owned by the root user and has restrictive permissions (e.g., readable and writable only by the root user). This means regular users do not have the necessary permissions to modify the file. ls -l /usr/bin/passwd -rwsr-xr-x 1 root root 51552 Jan 25 2023 /usr/bin/passwd  ","version":null,"tagName":"h3"},{"title":"Sticky bit​","type":1,"pageTitle":"Access","url":"/Wisdom-Hub/linux/access#sticky-bit","content":"The sticky bit on a directory ensures that only the owner of a file within that directory (or the superuser) can modify, delete or rename that file, even if others have write permissions on the directory or the files. Imagine you have a /tmp directory on a Linux system with the sticky bit set: chmod +t /tmp  In this setup: Alice can delete files she creates in /tmpBob can delete files he creates in /tmpOther users cannot delete files created by Alice or Bob in /tmp, enhancing file security in shared directories like /tmp ","version":null,"tagName":"h3"},{"title":"umask​","type":1,"pageTitle":"Access","url":"/Wisdom-Hub/linux/access#umask","content":"umask is a Linux command that controls the default permissions for newly created files and directories umask # 0022  For files: 666 - 0022 = 0644For directories: 777 - 0022 = 0755 # read and write permissions to the owner and remove all permissions for others and groups on newly created files: umask u=rw,go= # remove write permissions for the users, group and others on newly created directories: umask ugo-w  ","version":null,"tagName":"h3"},{"title":"Automation","type":0,"sectionRef":"#","url":"/Wisdom-Hub/linux/automation","content":"","keywords":"","version":null},{"title":"cron, at​","type":1,"pageTitle":"Automation","url":"/Wisdom-Hub/linux/automation#cron-at","content":"Command\tShort Descriptionat\tSchedule one-time tasks at 2:30pm tomorrow\tSchedule a task to run at 2:30 PM the next day at now + 1 hour\tSchedule a task to run in 1 hour from now atq\tList pending 'at' tasks crontab\tSchedule recurring tasks crontab -e\tEdit your user's crontab file crontab -l\tList your user's crontab entries crontab -r\tRemove your user's crontab */15 * * * *\tRun a command every 15 minutes using cron @reboot\tRun a command at system startup time ","version":null,"tagName":"h2"},{"title":"Disk","type":0,"sectionRef":"#","url":"/Wisdom-Hub/linux/disk-file","content":"","keywords":"","version":null},{"title":"fdisk, gdisk, parted, mkfs, mkswap, lsblk​","type":1,"pageTitle":"Disk","url":"/Wisdom-Hub/linux/disk-file#fdisk-gdisk-parted-mkfs-mkswap-lsblk","content":"Command\tShort Descriptionlsblk -af\tall devices + empty ones with infomration sudo blkid -o list\tList devices in a machine-readable format blkid /dev/sda1\tRetrieve information about /dev/sda1 sudo fdisk -l\tList partitions on all disks sudo fdisk -l /dev/sdb\tList partitions on /dev/sdb sudo fdisk /dev/sda\tLaunch fdisk for /dev/sda gdisk\tGPT disk partitioning utility sudo gdisk /dev/sda\tLaunch gdisk for /dev/sda parted\tDisk partitioning tool with more features sudo parted /dev/sda\tLaunch parted for /dev/sda mkfs.ext4 /dev/sdb1\tCreate an ext4 file system on /dev/sdb1 mkfs -t ntfs /dev/sdd1\tCreate a VFAT File System on /dev/sdd1 sudo mkswap /dev/sdc1\tCreate swap on /dev/sdc1 ","version":null,"tagName":"h2"},{"title":"df, du, fsck, tune2fs, ntfsfix​","type":1,"pageTitle":"Disk","url":"/Wisdom-Hub/linux/disk-file#df-du-fsck-tune2fs-ntfsfix","content":"Command\tShort Descriptiondu -sh /path/to/dir\tDisplay disk usage summary for a directory du -hd 1 /path/to/dir\tDisplay disk usage for each subdirectory in the specified directory df -h\tDisplay disk usage for all mounted filesystems in readable format df -hiT\tDisplay disk space usage with inodes and file system type sudo fsck /dev/sda1\tCheck and repair the file system on /dev/sda1 sudo fsck -y /dev/sdb2\tAutomatically repair the file system on /dev/sdb2 sudo fsck -C /dev/sdc1\tDisplay progress while checking and repairing /dev/sdc1 sudo fsck.ext4 -yvfBcD /dev/sda4\tCheck and repair /dev/sda4 tune2fs -l /dev/sda1\tDisplay detailed filesystem information for /dev/sda1 ntfsfix -b -d /dev/sda1\tDiagnose and fix NTFS issues on a partition ","version":null,"tagName":"h2"},{"title":"mount, umount​","type":1,"pageTitle":"Disk","url":"/Wisdom-Hub/linux/disk-file#mount-umount","content":"Command\tShort Descriptionmount\tlist of currently mounted file systems mount /dev/sda1 /mnt\tMounts the partition /dev/sda1 to the /mnt directory mount /dev/sda1\tMounts a device defined in /etc/fstab mount -o loop image.iso /mnt/iso\tMounts an ISO image file as a loop device to the /mnt/iso directory umount /mnt\tUnmounts the file system mounted at /mnt umount -l /mnt\tLazy unmount, detaches the file system only when it's no longer in use mount UUID=1...AB /mnt/uuid\tMounts file system using its UUID to the /mnt/uuid ","version":null,"tagName":"h2"},{"title":"ln​","type":1,"pageTitle":"Disk","url":"/Wisdom-Hub/linux/disk-file#ln","content":"Command\tShort Descriptionln -s source_file link_name\tCreate a symbolic link to a file or directory ln source_file hard_link_name\tCreate a hard link to a file ","version":null,"tagName":"h2"},{"title":"rsync​","type":1,"pageTitle":"Disk","url":"/Wisdom-Hub/linux/disk-file#rsync","content":"Option\tDescription-a\tArchive mode (recursive, permissions, etc.) -r\tSync recursively -e\tSpecify the remote shell to use -v\tVerbose output --progress\tShow progress during transfer -z\tCompress data during transfer -P\tKeep partially transferred files --delete\tDelete extraneous files on the receiving side -A\tPreserve ACLs (Access Control Lists) -X\tPreserve extended attributes -H\tPreserve hard links -n\tPerform a dry run # Backup local directory to another location rsync -avz /path/to/source /path/to/destination # Backup local directory to remote server rsync -avz /path/to/local/directory user@remote.server:/path/to/remote/directory # Backup local directory to remote server, deleting files on remote server if they are deleted locally rsync -avz --delete /path/to/local/directory user@remote.server:/path/to/remote/directory # Create a full backup of the system to an external drive sudo rsync -aAXHv --exclude={&quot;/dev/*&quot;,&quot;/proc/*&quot;,&quot;/sys/*&quot;,&quot;/tmp/*&quot;,&quot;/run/*&quot;,&quot;/mnt/*&quot;,&quot;/var/*&quot;,&quot;/media/*&quot;,&quot;/usr/*&quot;,&quot;/lib/*&quot;,&quot;/lib64/&quot;,&quot;/lost+found&quot;,&quot;/swapfile&quot;,&quot;.npm*&quot;,&quot;.npm/*&quot;,&quot;node_modules*&quot;,&quot;node_modules/*&quot;,&quot;mesa_shader_cache*&quot;,&quot;steamapps*&quot;,&quot;Data*&quot;,&quot;Steam*&quot;,&quot;/home/mlibre/media/*&quot;} / /run/media/mlibre/D/Linux/backup/ # Backup to a server rsync -e &quot;ssh -p 2222&quot; source/ user@host:/destination/ # Download a large file from a remote server using rsync with resume capability rsync -LvzP -e &quot;ssh -p 8756&quot; pro@65.21.54.29:/home/pro/largeFile.zip file.zip  ","version":null,"tagName":"h2"},{"title":"dd​","type":1,"pageTitle":"Disk","url":"/Wisdom-Hub/linux/disk-file#dd","content":"Command\tShort Descriptiondd\tCopy and convert files dd if=in of=out bs=block_size\tCopy data from 'in' to 'out' with specified block size dd if=/dev/zero of=zerofile bs=1M count=100\tCreate a 100MB zero-filled file dd if=in of=out bs=512 count=1 skip=2\tCopy 512 bytes from 'in' to 'out' starting byte 1024 dd if=/dev/random of=randomfile bs=1M count=1\tGenerate a 1MB file filled with random data dd if=in | gzip &gt; backup.dd.gzip\tCompress 'in' data using 'gzip', save as 'backup.dd.gzip' dd if=ubuntu.iso of=/dev/sdX bs=4M status=progress\tWrite 'ubuntu.iso' to a USB drive ('/dev/sdX') ","version":null,"tagName":"h2"},{"title":"ddrescue​","type":1,"pageTitle":"Disk","url":"/Wisdom-Hub/linux/disk-file#ddrescue","content":"ddrescue is a program that can be used to recover damaged hard disks. like flash memories, sd cards and ... It can be used to recover data from a hard disk that has been corrupted by a disk error, or from a hard disk that has been damaged by a software error. sudo ddrescue -f -n /dev/sdb sd-card-copy.img r.log  ","version":null,"tagName":"h2"},{"title":"Backup using locate​","type":1,"pageTitle":"Disk","url":"/Wisdom-Hub/linux/disk-file#backup-using-locate","content":"sudo tar -czvf backup.tar.gz $(locate x-ui) sudo tar -czvf backup.tar.gz $(locate x-ui) /root/ sudo tar -czvf backup.tar.gz $(locate x-ui) /root/cert /root/cert.crt /root/private.key /root/.acme.sh sudo tar xvf backup.tar.gz -C / # Extract in root directory  ","version":null,"tagName":"h2"},{"title":"Automatic mount using fstab​","type":1,"pageTitle":"Disk","url":"/Wisdom-Hub/linux/disk-file#automatic-mount-using-fstab","content":"sudo nano /etc/fstab UUID=0CCB69562B33DFDD /home/mlibre/media/D ntfs-3g uid=1000,gid=1000,rw,auto,user,exec,umask=000 0 0  ","version":null,"tagName":"h2"},{"title":"Log","type":0,"sectionRef":"#","url":"/Wisdom-Hub/linux/log-monitoring","content":"","keywords":"","version":null},{"title":"/dev/log​","type":1,"pageTitle":"Log","url":"/Wisdom-Hub/linux/log-monitoring#devlog","content":"/dev/log is a Unix domain socket that applications use to send logs to a logging daemon such as rsyslog or systemd-journald. In a Linux system, /dev/log is often a symbolic link to /run/systemd/journal/dev-log readlink /dev/log # /run/systemd/journal/dev-log ls -l /run/systemd/journal/dev-log # srw-rw-rw- 1 root root 0 Oct 6 18:09 /run/systemd/journal/dev-log # s stands for socket  ","version":null,"tagName":"h2"},{"title":"dmesg​","type":1,"pageTitle":"Log","url":"/Wisdom-Hub/linux/log-monitoring#dmesg","content":"The dmesg command is used to display the kernel ring buffer. By default it read the messaged from /dev/kmsg, that provides access to the kernel ring buffer. dmesg sudo dmesg --level=emerg,alert,crit,err  ","version":null,"tagName":"h2"},{"title":"journalctl​","type":1,"pageTitle":"Log","url":"/Wisdom-Hub/linux/log-monitoring#journalctl","content":"journalctl is a command-line utility for viewing and querying logs from the systemd journal, a system logging service commonly used in modern Linux distributions sudo systemctl restart systemd-journald.service  Command\tDescriptionjournalctl\tall Collected Logs journalctl -k\tKernel Logs journalctl -b\tCurrent Boot Logs (Including kernel logs) journalctl -r\tShow Logs in Reverse Order journalctl -f\tLive Systemd Logs journalctl -b -f\tMonitor Boot Logs journalctl -b -p err\tBoot Logs with priority &quot;err&quot; level journalctl -u sshd.service\tUnit's Logs journalctl -u sshd.service -x\tVerbose journalctl /usr/bin/firefox\tShow logs related to the Firefox executable sudo journalctl _PID=20220\tView logs associated with PID 20220 journalctl --flush\tFlush Journal Logs sudo journalctl --flush --vacuum-time=1s\tFlush system Logs, Retain Last 1 Second sudo journalctl --user --flush --vacuum-time=1s\tFlush user Logs, Retain Last 1 Second ","version":null,"tagName":"h2"},{"title":"journalctl Configuration​","type":1,"pageTitle":"Log","url":"/Wisdom-Hub/linux/log-monitoring#journalctl-configuration","content":"Journald is configured in /etc/systemd/journald.conf. You can change storage location, log size, log rotation, etc. nano [Journal] Storage=persistent Compress=yes SystemMaxUse=100M  ","version":null,"tagName":"h3"},{"title":"Log Level​","type":1,"pageTitle":"Log","url":"/Wisdom-Hub/linux/log-monitoring#log-level","content":"Log Level refers to the severity or importance of the log messages generated by various components of the system P\tLevel\tDescription0\temerg\tSystem is unusable 1\talert\tAction must be taken immediately 2\tcrit\tCritical conditions 3\terr\tError conditions 4\twarning\tWarning conditions 5\tnotice\tNormal but significant condition 6\tinfo\tInformational messages 7\tdebug\tDebug-level messages ","version":null,"tagName":"h3"},{"title":"systemd-cat​","type":1,"pageTitle":"Log","url":"/Wisdom-Hub/linux/log-monitoring#systemd-cat","content":"systemd-cat is a command-line utility that allows you to send logs to the systemd journal. echo &quot;Hello World&quot; | systemd-cat -t &quot;Hello&quot; journalctl -t Hello echo &quot;Hello World&quot; | systemd-cat journalctl -f  ","version":null,"tagName":"h3"},{"title":"Syslog​","type":1,"pageTitle":"Log","url":"/Wisdom-Hub/linux/log-monitoring#syslog","content":"It is a standard for recording events in a computer system. ","version":null,"tagName":"h2"},{"title":"rsyslog​","type":1,"pageTitle":"Log","url":"/Wisdom-Hub/linux/log-monitoring#rsyslog","content":"rsyslog is a free and open source syslog implementation. ","version":null,"tagName":"h3"},{"title":"lastlog​","type":1,"pageTitle":"Log","url":"/Wisdom-Hub/linux/log-monitoring#lastlog","content":"The lastlog command displays the last login times and information for all users on the system. It provides details such as the username, port, and timestamp of the last login for each user. It reads the /var/log/lastlog binary file to retrieve this information. lastlog Username Port From Latest root **Never logged in** nobody **Never logged in** dbus **Never logged in** bin **Never logged in** mlibre pts/2 127.0.0.1 Sun Aug 20 22:39:47 +0330 2023  ","version":null,"tagName":"h2"},{"title":"process","type":0,"sectionRef":"#","url":"/Wisdom-Hub/linux/processes","content":"","keywords":"","version":null},{"title":"ps, bg, fg, jobs, &, ctrl+comb​","type":1,"pageTitle":"process","url":"/Wisdom-Hub/linux/processes#ps-bg-fg-jobs--ctrlcomb","content":"Command\tDescriptionps -ef\tList all processes with ppid and exec path ps aux | grep &lt;process_name&gt;\tFilter processes by name bg &lt;job_id&gt;\tResume a specific suspended job in the background fg &lt;job_id&gt;\tBring a specific background job to the foreground jobs -l\tList background jobs with process IDs jobs %&lt;job_id&gt;\tDisplay information about a specific job systemctl status 1234\tShow the status of a specific systemd unit by its PID command1 &amp;\tRun command1 in the background nohup\tRun a command that keeps running even after you log out nohup command1\tRun command1 and keep it running after logging out ctrl+c\tInterrupt a process ctrl+z\tSuspend a process ctrl+l\tClear the terminal screen ","version":null,"tagName":"h2"},{"title":"kill, pkill, killall​","type":1,"pageTitle":"process","url":"/Wisdom-Hub/linux/processes#kill-pkill-killall","content":"Command\tDescriptionkill PID\tTerminate the process with PID, default is SIGTERM kill -15 PID\tSend the SIGTERM signal to the process with the specified PID kill -9 PID\tForcefully terminate the process with the specified PID kill -1 PID\tSend the SIGHUP signal to the process with the specified PID killall process\tTerminate all processes with the specified name pkill -u username\tKill by Username pkill -t tty\tKill by Terminal pkill -f pattern\tKill by Pattern pkill -x process\tKill Exact Process pkill -n process\tKill Newest Process pgrep Command\tDescriptionpgrep\tList processes by name or other attributes pgrep sshd\tList processes with the name 'sshd' pgrep nginx | xargs kill\tprocesses with 'nginx' in their name, send a SIGTERM to them pgrep -u masoud | xargs -I {} kill -9 {}\tand forcefully terminate prccess with &quot;masoud&quot; ","version":null,"tagName":"h2"},{"title":"free, uptime, watch​","type":1,"pageTitle":"process","url":"/Wisdom-Hub/linux/processes#free-uptime-watch","content":"Command\tDescriptionfree -h\tDisplay memory usage with human-readable format free -m\tDisplay memory usage in megabytes uptime -p\tDisplay uptime in a more human-readable format uptime -s\tDisplay the date and time since system started watch -n 1 date\tWatch and display the date and time every 1 second watch -n 5 df -h\tWatch and update disk space usage every 5 seconds watch -cd -n 1 uptime\tWatch system uptime every 1 second with color highlighting for changes ","version":null,"tagName":"h2"},{"title":"tmux​","type":1,"pageTitle":"process","url":"/Wisdom-Hub/linux/processes#tmux","content":"Command\tDescriptiontmux\tTerminal multiplexer tmux new -s mysession\tCreate a new tmux session named &quot;mysession&quot; tmux attach -t mysession\tAttach to an existing session named &quot;mysession&quot; tmux kill-session -t mysession\tRemove the tmux session named &quot;mysession&quot; tmux ls\tList all available tmux sessions tmux split-window\tSplit the current window horizontally tmux detach\tDetach from the current tmux session tmux rename-session -t oldsession newsession\tRename a tmux session from &quot;oldsession&quot; to &quot;newsession&quot; Ctrl-b %\tSplit the current window vertically (shortcut) Ctrl-b &quot;\tSplit the current window horizontally (shortcut) Ctrl-b d\tDetach from the current tmux session (shortcut) Ctrl-b $\tRename the current session (shortcut) Ctrl-b o\tCycle through open windows in the current session (shortcut) Ctrl-b Up\tChoose the previous window using the Up arrow key (shortcut) Ctrl-b Down\tChoose the next window using the Down arrow key (shortcut) Ctrl-b [\tEnter copy mode to scroll through the terminal output (shortcut) ","version":null,"tagName":"h2"},{"title":"nice, renice​","type":1,"pageTitle":"process","url":"/Wisdom-Hub/linux/processes#nice-renice","content":"Command\tShort Descriptionnice -n 10 command\tStart a command with a low priority (10) nice -n -10 command\tStart a command with a high priority (-10) renice -n 5 -p 1234\tChange the priority of a process with PID 1234 to 5 renice -n -2 -g sys\tChange the priority of all processes in the sys group to -2 ","version":null,"tagName":"h2"},{"title":"Systemd","type":0,"sectionRef":"#","url":"/Wisdom-Hub/linux/systemd","content":"","keywords":"","version":null},{"title":"Targets​","type":1,"pageTitle":"Systemd","url":"/Wisdom-Hub/linux/systemd#targets","content":"Systemd targets are units in the systemd initialization system that represent specific system states or operational modes. They are used to group and manage other units, such as services, that are relevant to a particular mode of operation systemctl cat graphical.target  ","version":null,"tagName":"h2"},{"title":"Isolate​","type":1,"pageTitle":"Systemd","url":"/Wisdom-Hub/linux/systemd#isolate","content":"Start the unit specified on the command line and its dependencies and stop all others, unless they have IgnoreOnIsolate=yes ","version":null,"tagName":"h2"},{"title":"Add a system service​","type":1,"pageTitle":"Systemd","url":"/Wisdom-Hub/linux/systemd#add-a-system-service","content":"sudo nano /etc/systemd/system/sshtunnel.service [Unit] Description=SSH Tunnel After=network.target [Service] User=mlibre Restart=always RestartSec=20 ExecStart=ssh -L 0.0.0.0:1234:localhost:3128 -N pachan@43.204.151.127 -p 8756 [Install] WantedBy=graphical.target sudo systemctl daemon-reload sudo systemctl enable sshtunnel sudo systemctl reenable sshtunnel.service sudo systemctl restart sshtunnel sudo systemctl status sshtunnel sudo journalctl -f -u sshtunnel  ","version":null,"tagName":"h2"},{"title":"Add a user service​","type":1,"pageTitle":"Systemd","url":"/Wisdom-Hub/linux/systemd#add-a-user-service","content":"nano ~/.config/systemd/user/my-service.service [Unit] Description=My User Service [Service] ExecStart=echo &quot;hi everyone, hope good things happen for all&quot; [Install] WantedBy=default.target systemctl --user daemon-reload systemctl --user enable my-service systemctl --user reenable my-service.service systemctl --user restart my-service systemctl --user status my-service journalctl --user -f -u my-service  ","version":null,"tagName":"h2"},{"title":"Run a script after suspending has finished (resume)​","type":1,"pageTitle":"Systemd","url":"/Wisdom-Hub/linux/systemd#run-a-script-after-suspending-has-finished-resume","content":"touch ~/.Xauthority xauth generate :0 . trusted xauth list sudo nano /etc/systemd/system/gamma.service  [Unit] Description=Run gamma correction after resume After=display-manager.service [Service] User=mlibre Environment=DISPLAY=:0 Environment=XAUTHORITY=/home/mlibre/.Xauthority Type=idle ExecStartPre=/bin/sleep 5 ExecStart=xterm -e &quot;/usr/local/bin/gamma_on_startup&quot; [Install] WantedBy=graphical.target suspend.target suspend-then-hibernate.target  sudo systemctl daemon-reload sudo systemctl enable gamma.service systemctl status gamma journalctl -u gamma  ","version":null,"tagName":"h2"},{"title":"Multimedia","type":0,"sectionRef":"#","url":"/Wisdom-Hub/linux/multimedia","content":"","keywords":"","version":null},{"title":"Changing monitor or screen Brightness and Gamma​","type":1,"pageTitle":"Multimedia","url":"/Wisdom-Hub/linux/multimedia#changing-monitor-or-screen-brightness-and-gamma","content":"# List available outputs xrandr # Screen 0: minimum 320 x 200, current 2560 x 1440, maximum 16384 x 16384 # DisplayPort-0 disconnected (normal left inverted right x axis y axis) # HDMI-A-0 connected primary 2560x1440+0+0 (normal left inverted right x axis y axis) 621mm x 341mm # 3840x2160 60.00 + 50.00 59.94 30.00 30.00 25.00 24.00 29.97 23.98 # 2560x1600 59.97 # 2560x1440 59.95* # Change the brightness and gamma of the HDMI-A-0 output xrandr --output HDMI-A-0 --brightness 0.65 --gamma 0.65:0.65:0.65  ","version":null,"tagName":"h2"},{"title":"Make a startup script using XDG startup​","type":1,"pageTitle":"Multimedia","url":"/Wisdom-Hub/linux/multimedia#make-a-startup-script-using-xdg-startup","content":"mkdir -p ~/.config/autostart nano ~/.config/autostart/gamma_on_startup.desktop  [Desktop Entry] Name=gamma-on-startup Type=Application Exec=bash -c &quot;/usr/local/bin/gamma_on_startup &amp;&gt; /dev/null&quot; Terminal=true  desktop-file-validate ~/.config/autostart/gamma_on_startup.desktop chmod +x ~/.config/autostart/gamma_on_startup.desktop  Example program: sudo chmod a+rwx /usr/local/bin/ nano /usr/local/bin/gamma_on_startup sleep 5 export DISPLAY=:0 xrandr --output HDMI-A-0 --brightness 0.65 --gamma 0.65:0.65:0.65  sudo chmod a+rwx /usr/local/bin/gamma_on_startup  ","version":null,"tagName":"h2"},{"title":"Font​","type":1,"pageTitle":"Multimedia","url":"/Wisdom-Hub/linux/multimedia#font","content":"","version":null,"tagName":"h2"},{"title":"Locations​","type":1,"pageTitle":"Multimedia","url":"/Wisdom-Hub/linux/multimedia#locations","content":"~/.local/share/fonts//usr/local/share/fonts//usr/share/fonts/ ","version":null,"tagName":"h3"},{"title":"List​","type":1,"pageTitle":"Multimedia","url":"/Wisdom-Hub/linux/multimedia#list","content":"List installed fonts fc-match -a fc-list NotoSansBengali-Light  ","version":null,"tagName":"h3"},{"title":"Cache​","type":1,"pageTitle":"Multimedia","url":"/Wisdom-Hub/linux/multimedia#cache","content":"sudo rm -v /var/cache/fontconfig/* fc-cache -r  ","version":null,"tagName":"h3"},{"title":"Resetting KDE​","type":1,"pageTitle":"Multimedia","url":"/Wisdom-Hub/linux/multimedia#resetting-kde","content":"qdbus org.kde.KWin /Compositor suspend; rm ~/.cache/ksycoca5*; kquitapp5 plasmashell; killall plasmashell; kstart5 plasmashell;  ","version":null,"tagName":"h2"},{"title":"Disable KDE desktop effects​","type":1,"pageTitle":"Multimedia","url":"/Wisdom-Hub/linux/multimedia#disable-kde-desktop-effects","content":"qdbus org.kde.KWin /Compositor suspend ## qdbus org.kde.KWin /Compositor resume xset -dpms xset s off  ","version":null,"tagName":"h3"},{"title":"Resetting sound, audio​","type":1,"pageTitle":"Multimedia","url":"/Wisdom-Hub/linux/multimedia#resetting-sound-audio","content":"systemctl --user restart pulseaudio # OR pulseaudio --kill pulseaudio --start  ","version":null,"tagName":"h2"},{"title":"Vulkan​","type":1,"pageTitle":"Multimedia","url":"/Wisdom-Hub/linux/multimedia#vulkan","content":"sudo pacman -S vulkan-radeon lib32-vulkan-radeon  sudo nano /etc/environment VK_ICD_FILENAMES=/usr/share/vulkan/icd.d/radeon_icd.i686.json:/usr/share/vulkan/icd.d/radeon_icd.x86_64.json  ","version":null,"tagName":"h2"},{"title":"Resseting Steam, lutris and Wine​","type":1,"pageTitle":"Multimedia","url":"/Wisdom-Hub/linux/multimedia#resseting-steam-lutris-and-wine","content":"sudo killall winedevice.exe wineserver services.exe EpicGamesLaunch EpicWebHelper.e explorer.exe lutris-wrapper:; sudo killall steamwebhelper gitstatusd steam; sudo killall -9 winedevice.exe wineserver services.exe EpicGamesLaunch EpicWebHelper.e explorer.exe lutris-wrapper:; sudo killall -9 steamwebhelper gitstatusd steam; pkill -f -e -c lutris-wrapper; pkill -f -e -c lutris; pkill -f -e -c wine; pkill -f -e -c steam; rm -r ~/.wine  ","version":null,"tagName":"h3"},{"title":"Steam​","type":1,"pageTitle":"Multimedia","url":"/Wisdom-Hub/linux/multimedia#steam","content":"","version":null,"tagName":"h2"},{"title":"Install Proton GE​","type":1,"pageTitle":"Multimedia","url":"/Wisdom-Hub/linux/multimedia#install-proton-ge","content":"nano custonpge.bash  #!/bin/bash set -euo pipefail # make temp working directory mkdir /tmp/proton-ge-custom cd /tmp/proton-ge-custom # download tarball curl -sLOJ &quot;$(curl -s https://api.github.com/repos/GloriousEggroll/proton-ge-custom/releases/latest | grep browser_download_url | cut -d\\&quot; -f4 | grep .tar.gz&gt; # make steam directory if it does not exist mkdir -p ~/.steam/root/compatibilitytools.d # extract proton tarball to steam directory tar -xf GE-Proton*.tar.gz -C ~/.steam/root/compatibilitytools.d/ echo &quot;All done :)&quot;  chmod +x custonpge.bash  ","version":null,"tagName":"h3"},{"title":"Fix common bugs​","type":1,"pageTitle":"Multimedia","url":"/Wisdom-Hub/linux/multimedia#fix-common-bugs","content":"Move Games to your local linux machineDisable steam overlay, steam inputs, ...Link NTFS game folder sudo mkdir -p /media/gamedisk sudo blkid ## FA709D69709D2CFF id -u ## 1000 id -g ## 1000 sudo nano /etc/fstab # UUID=FA709D69709D2CFF /media/gamedisk ntfs uid=1000,gid=1000,rw,user,exec,umask=000 0 0 UUID=FA709D69709D2CFF /media/gamedisk ntfs-3g uid=1000,gid=1000,rw,user,exec,umask=000 0 0 mkdir -p ~/.steam/steam/steamapps/compatdata sudo reboot ln -s ~/.steam/steam/steamapps/compatdata /media/gamedisk/Steam/steamapps/  ","version":null,"tagName":"h3"},{"title":"Scaling Interface​","type":1,"pageTitle":"Multimedia","url":"/Wisdom-Hub/linux/multimedia#scaling-interface","content":"Run Steam like this: STEAM_FORCE_DESKTOPUI_SCALING=1.5 steam-runtime  ","version":null,"tagName":"h3"},{"title":"Run using proxy​","type":1,"pageTitle":"Multimedia","url":"/Wisdom-Hub/linux/multimedia#run-using-proxy","content":"proxychains steam steam://rungameid/100  ","version":null,"tagName":"h3"},{"title":"lutris​","type":1,"pageTitle":"Multimedia","url":"/Wisdom-Hub/linux/multimedia#lutris","content":"","version":null,"tagName":"h2"},{"title":"Installation​","type":1,"pageTitle":"Multimedia","url":"/Wisdom-Hub/linux/multimedia#installation","content":"sudo pacman -S telegram-desktop lutris vkd3d tsocks proxychains  ","version":null,"tagName":"h3"},{"title":"With Proxy​","type":1,"pageTitle":"Multimedia","url":"/Wisdom-Hub/linux/multimedia#with-proxy","content":"sudo nano /etc/tsocks.conf server = 127.0.0.1 server_port = 1080 server_type = 5 tsocks lutris  ## make sure proxy_dns is commneted proxychains lutris  ","version":null,"tagName":"h3"},{"title":"Proxy per game​","type":1,"pageTitle":"Multimedia","url":"/Wisdom-Hub/linux/multimedia#proxy-per-game","content":"# Check show advanced options # Put /usr/bin/tsocks in # Game -&gt; configuration -&gt; System options -&gt; command prefix  ","version":null,"tagName":"h3"},{"title":"AMDGPU​","type":1,"pageTitle":"Multimedia","url":"/Wisdom-Hub/linux/multimedia#amdgpu","content":"","version":null,"tagName":"h2"},{"title":"TearFree, EnablePageFlip, DRI3​","type":1,"pageTitle":"Multimedia","url":"/Wisdom-Hub/linux/multimedia#tearfree-enablepageflip-dri3","content":"# settings files /usr/share/X11/xorg.conf.d/ /etc/X11/xorg.conf.d/ sudo nano /usr/share/X11/xorg.conf.d/10-amdgpu.conf Section &quot;OutputClass&quot; Identifier &quot;AMDgpu&quot; MatchDriver &quot;amdgpu&quot; Driver &quot;amdgpu&quot; Option &quot;TearFree&quot; &quot;true&quot; Option &quot;DRI&quot; &quot;3&quot; Option &quot;EnablePageFlip&quot; &quot;on&quot; EndSection cat /var/log/Xorg.0.log | grep -i tear  ","version":null,"tagName":"h3"},{"title":"Reducing DRI latency​","type":1,"pageTitle":"Multimedia","url":"/Wisdom-Hub/linux/multimedia#reducing-dri-latency","content":"sudo nano /etc/drirc &lt;driconf&gt; &lt;device&gt; &lt;application name=&quot;Default&quot;&gt; &lt;option name=&quot;vblank_mode&quot; value=&quot;0&quot; /&gt; &lt;/application&gt; &lt;/device&gt; &lt;/driconf&gt;  ","version":null,"tagName":"h3"},{"title":"check xorg config file​","type":1,"pageTitle":"Multimedia","url":"/Wisdom-Hub/linux/multimedia#check-xorg-config-file","content":"sudo Xorg -config /usr/share/X11/xorg.conf.d/10-amdgpu.conf  ","version":null,"tagName":"h3"},{"title":"Blocking radon​","type":1,"pageTitle":"Multimedia","url":"/Wisdom-Hub/linux/multimedia#blocking-radon","content":"sudo nano /etc/modprobe.d/radeon.conf blacklist radeon  ","version":null,"tagName":"h3"},{"title":"Install AMDGPU-PRO​","type":1,"pageTitle":"Multimedia","url":"/Wisdom-Hub/linux/multimedia#install-amdgpu-pro","content":"# https://wiki.archlinux.org/title/AMDGPU_PRO pamac install vulkan-amdgpu-pro lib32-vulkan-amdgpu-pro pamac install amdgpu-pro-oglp lib32-amdgpu-pro-oglp # pamac install amdgpu-pro-libgl lib32-amdgpu-pro-libgl # pamac install opencl-amd # pamac install amf-amdgpu-pro glxinfo | grep &quot;OpenGL vendor string&quot; lspci -v | grep -A 10 VGA vk_pro steam  ","version":null,"tagName":"h3"},{"title":"Uninstall AMDGPU-PRO​","type":1,"pageTitle":"Multimedia","url":"/Wisdom-Hub/linux/multimedia#uninstall-amdgpu-pro","content":"pacman -R $(pacman -Qg Radeon_Software_for_Linux | cut -f2 -d&quot; &quot;)  ","version":null,"tagName":"h3"},{"title":"Blacklist Radeon​","type":1,"pageTitle":"Multimedia","url":"/Wisdom-Hub/linux/multimedia#blacklist-radeon","content":"sudo nano /etc/modprobe.d/radeon.conf blacklist radeon  ","version":null,"tagName":"h3"},{"title":"Text","type":0,"sectionRef":"#","url":"/Wisdom-Hub/linux/text","content":"","keywords":"","version":null},{"title":"cat, zcat, less, more, head, tail, ccat, bat​","type":1,"pageTitle":"Text","url":"/Wisdom-Hub/linux/text#cat-zcat-less-more-head-tail-ccat-bat","content":"Command\tDescriptioncat file.txt\tConcatenate and display cat -n file.txt\tDisplay with line numbers zcat file.gz\tDisplay compressed content ccat file.txt\tColorize and concatenate bat file.txt\tCat clone with syntax tail file.txt\tDisplay last N line (10 by default) tail -f file.txt\tContinuously display new lines head file.txt\tDisplay first N lines (10 by default) head -n 5 file.txt\tDisplay first 5 lines head -5 file.txt\tDisplay first 5 lines less file.txt\tView file with pagination more file.txt\tView file page by page ","version":null,"tagName":"h2"},{"title":"tee​","type":1,"pageTitle":"Text","url":"/Wisdom-Hub/linux/text#tee","content":"tee allows you to read from standard input and write to both standard output and files simultaneously. Command\tDescriptiontee file.txt\tRead from stdin and write to file.txt, creating or overwriting it ls | tee list.txt\tRedirect the ls output to both terminal and list.txt tee -a file.txt\tAppend to file.txt instead of overwriting it ps aux | grep &quot;node&quot; | tee processes.txt\tlist and save running processes containing node ","version":null,"tagName":"h2"},{"title":"split​","type":1,"pageTitle":"Text","url":"/Wisdom-Hub/linux/text#split","content":"Command\tDescriptionsplit file.txt\tSplit file into parts, by default 1000 lines per file split -l 100\tSplit into 100-line files split -b 1M\tSplit into 1MB files split -n 3 file.txt\tSplit into 3 equal parts split -d\tUse numeric suffixes split test.txt -d hi\tUse numeric suffixes and custom prefix &quot;hi&quot; split -a 3\tUse 3-character suffix cat hi* &gt; concatenated_file.txt\tConcatenate files starting with &quot;hi&quot; ","version":null,"tagName":"h2"},{"title":"cut​","type":1,"pageTitle":"Text","url":"/Wisdom-Hub/linux/text#cut","content":"Command\tDescriptioncut -f 1,3 file.txt\tPrint the first and third fields from each line of file.txt cut -d' ' -f 2-4 file.txt\tPrint fields 2 to 4 from each line of &quot;file.txt&quot; using space as the delimiter cut -c 1-5 file.txt\tSelect and print characters 1 to 5 from each line of &quot;file.txt&quot; Tab is the defualt delimiter ","version":null,"tagName":"h2"},{"title":"paste, wc​","type":1,"pageTitle":"Text","url":"/Wisdom-Hub/linux/text#paste-wc","content":"Command\tShort Descriptionpaste\tMerge lines of files horizontally paste file1 file2\tMerges lines from 'file1' and 'file2' paste -s file1 file2\tMerges lines from 'file1' and 'file2' sequentially paste -d, file1 file2\tMerges lines with a comma delimiter wc -l file.txt\tCount lines in a file wc -w file.txt\tCount words in a file ","version":null,"tagName":"h2"},{"title":"sort, nl, shuf, uniq, tr​","type":1,"pageTitle":"Text","url":"/Wisdom-Hub/linux/text#sort-nl-shuf-uniq-tr","content":"Command\tDescriptionsort file.txt\tSort lines in a text file sort -r file.txt\tSort lines in reverse order sort -n file.txt\tSort lines numerically nl file.txt\tNumber lines in a file nl -b a file.txt\tNumber lines, showing all lines nl -s &quot;,&quot; file.txt\tNumber lines, custom separator shuf file.txt\tShuffle lines in a file shuf -n 5 file.txt\tShuffle and display only 5 lines uniq file.txt\tDisplay unique lines in a file uniq -c file.txt\tCount and display unique lines with count cat file.txt | tr -s ' ' ','\tTranslate spaces to commas in a text stream uniq only removes duplicate consecutive lines from the input. To remove all duplicate lines, you can pipe the output to sort and then to uniq again. like sort file.txt | uniq ","version":null,"tagName":"h2"},{"title":"diff, sha256sum, cp, mv, rm​","type":1,"pageTitle":"Text","url":"/Wisdom-Hub/linux/text#diff-sha256sum-cp-mv-rm","content":"Certainly, here's a table of the commands you requested in markdown format, with centered text alignment as per your preference: Command\tDescriptiondiff file1 file2\tCompares two files and shows differences sha256sum file.txt\tCalculates and prints the SHA-256 hash of the file file.txt cp -r\tCopies directories and their contents recursively cp -v\tCopies files or directories with verbose output mv -i\tMoves (renames) files or directories with prompt rm -r\tRemoves directories and their contents recursively mkdir\tCreates a new directory rmdir\tRemoves an empty directory ","version":null,"tagName":"h2"},{"title":"grep​","type":1,"pageTitle":"Text","url":"/Wisdom-Hub/linux/text#grep","content":"Command\tDescriptiongrep 'error' log.txt\tSearch for 'error' messages in a log file grep -r 'function()' /project\tRecursively find files contain 'function()' in the '/project' directory grep -i 'todo' *.js\tSearch case-insensitively for 'todo' in JavaScript files grep -E '^\\d{3}-\\d{2}-\\d{4}$' data.txt\tUse extended regex to find social security numbers in 'data.txt' grep -l 'pattern' *.txt\tList files containing 'pattern' in the current directory grep -v 'warning' log.txt\tInvert the match to display lines without 'warning' in the log file ","version":null,"tagName":"h2"},{"title":"find​","type":1,"pageTitle":"Text","url":"/Wisdom-Hub/linux/text#find","content":"Command\tDescriptionfind\tSearch for files and directories find path -name pattern\tFiles with a specific name in the 'path' directory find /home/user -name &quot;*.txt&quot;\tAll files with the '.txt' extension in '/home/user' find /etc -type d -name &quot;conf&quot;\tLocate directories named 'conf' under '/etc' find /var/log -type f -mtime +7\tFind files in '/var/log' modified more than 7 days ago find /usr/bin -executable -type f\tFind executable files in '/usr/bin' find /home -user masoud\tFiles owned by the user 'masoud' under '/home' find /mnt -size +100M\tFind files larger than 100MB in '/mnt' find /var/log -iname &quot;*.log&quot; -exec ls -l {} \\;\tFiles in '/var/log' with a case-insensitive name match find /backup -type f -exec cp {} /backup_archive/ \\;\tCopy found files to '/backup_archive/' directory find ./ -type f -exec ls {} \\; -exec echo &quot;file: {}&quot; \\;\tHaving two commands find / -name 'pycache' -exec rm -r {} +\tRemove all pycache, pass items as a list to rm ","version":null,"tagName":"h2"},{"title":"tar, gzip, guzip, xz, unxz​","type":1,"pageTitle":"Text","url":"/Wisdom-Hub/linux/text#tar-gzip-guzip-xz-unxz","content":"Command\tDescriptiongzip\tCompress files using gzip gzip file.txt\tCompress the file.txt using gzip gzip -d file.gz\tDecompress file.gz using gzip gunzip file.gz\tDecompress file.gz using gunzip xz\tCompress files using xz xz file.txt\tCompress the file.txt using xz xz -d file.xz\tDecompress file.xz using xz unxz file.xz\tDecompress file.xz using unxz tar\tCreate and extract tar archives tar -cvf archive.tar files/\tCreate a tar archive from the 'files/' directory tar -xvf archive.tar\tExtract files from 'archive.tar' tar -xvf archive.tar -C /\tChange to / directory and then extract By default tar reads input from stdin. ","version":null,"tagName":"h2"},{"title":"streams​","type":1,"pageTitle":"Text","url":"/Wisdom-Hub/linux/text#streams","content":"Certainly, here's a Markdown table with centered text alignment that lists the Linux commands you mentioned, along with their short descriptions and real-world examples: Command\tDescription&gt;\tRedirects standard output to a file ls &gt; list.txt\tRedirects ls command output to list.txt &gt;&gt;\tAppends standard output to a file echo &quot;Hello&quot; &gt;&gt; greeting.txt\tAppends &quot;Hello&quot; to greeting.txt 2&gt;\tRedirects standard error to a file ls non_existent_dir 2&gt; error.log\tLogs error from ls to error.log 2&gt;&gt;\tAppends standard error to a file find /non_existent_dir 2&gt;&gt; errors.log\tAppends errors to errors.log &amp;&gt;\tRedirects both standard output and error to a file curl example.com &amp;&gt; website.log\tLogs both output and errors from curl to website.log &amp;&gt;&gt;\tAppends both standard output and error to a file git pull &amp;&gt;&gt; git.log\tAppends both git output and errors to git.log &lt;&gt;\tRedirects both input and output from/to a file cat &lt;&gt; combined.txt\tReads and writes to combined.txt command &gt; output.txt 2&gt; error.txt\tRedirects output to output.txt and error to error.txt command 2&gt;&amp;1 &gt; output_and_error.txt\tRedirects both output and error to output_and_error.txt ","version":null,"tagName":"h2"},{"title":"pipe​","type":1,"pageTitle":"Text","url":"/Wisdom-Hub/linux/text#pipe","content":"Command\tDescription|\tRedirect output from one command to another command1 | command2\tExecute command1 and pass its output to command2 ls | grep .txt\tList and filter files with a .txt extension ps aux | grep nginx\tList and filter processes related to nginx cat file.txt | less\tDisplay file contents using the less pager dmesg | tail -n 10\tDisplay the last 10 kernel log messages ls | sort -r\tList files in reverse alphabetical order find /home | wc -l\tCount files and directories in /home du -h | sort -rh\tList disk usage, human-readable, and sorted ls | tee file.txt\tList files and save output to file.txt ls | head -n 5\tList the first 5 files in the current directory ","version":null,"tagName":"h2"},{"title":"xargs​","type":1,"pageTitle":"Text","url":"/Wisdom-Hub/linux/text#xargs","content":"xargs is a Linux command-line tool that takes input from standard input and passes it as arguments to another command. It separates input items by spaces, tabs or newlines by default, but you can specify a different delimiter with the -d option. The output is the result of executing the specified command with the input items as arguments. By default, xargs will process as many input items as possible in a single execution of the command. -n 1: This option in xargs specifies that only one input item should be used for each execution of the command. It ensures that the command is run once for each input item-I {}: The -I option allows you to specify a placeholder (in this case, {}) to represent where the input item should be placed within the command. It also process one input item at a time Command\tDescriptionxargs\tBuild and execute command lines from standard input find /path -type f -print | xargs command\tExecute command on each file found by the find command echo arg1 arg2 | xargs command\tExecute command with arguments arg1 and arg2 ls *.txt | xargs rm\tRemove all .txt files in the current directory cat list.txt | xargs -n 1 echo\tPrint each line of list.txt using echo (one by one) ls | xargs -I {} mv {} {}.bak\tAdd &quot;.bak&quot; extension to all files in this directory (one by one) find /path -type f -name &quot;*.log&quot; -print0 | xargs -0 rm\tRemove &quot;.log&quot; files in &quot;/path&quot; with handling special characters grep pattern f1 f2 | xargs sed -i 's/pattern/replacement/g'\tSearch, replace &quot;pattern&quot; with &quot;replacement&quot; in multiple files echo file1 file2 file3 | xargs -I % sh -c 'cp % /backup'\tCopy multiple files to a backup directory find /path -type f -print | xargs -P 4 -I % gzip %\tParallel compression of files in &quot;/path&quot; using 4 processes ls *.txt | xargs -n 1 -I {} mv {} /destination/\tMove each &quot;.txt&quot; file to &quot;/destination/&quot; directory echo file1 file2 | xargs -d ' ' -I % sh -c 'touch %.txt'\tCreate &quot;.txt&quot; files with specified names ","version":null,"tagName":"h2"},{"title":"Virtual Machine","type":0,"sectionRef":"#","url":"/Wisdom-Hub/linux/vm","content":"","keywords":"","version":null},{"title":"Vagrant​","type":1,"pageTitle":"Virtual Machine","url":"/Wisdom-Hub/linux/vm#vagrant","content":"sudo pacman -S virtualbox linux69-headers sudo pacman -S vagrant mkdir debian cd debian vagrant init debian/bookworm64 nano Vagrantfile # config.vm.network &quot;forwarded_port&quot;, guest: 3000, host: 3000 # config.vm.box_check_update = false # config.vm.network &quot;public_network&quot; # Method 1 export http_proxy=&quot;http://127.0.0.1:2081&quot; export https_proxy=&quot;socks5://127.0.0.1:2080&quot; vagrant up # Method 2 aria2c -x 15 https://vagrantcloud.com/debian/boxes/bookworm64/versions/12.20240503.1/providers/virtualbox/unknown/vagrant.box vagrant box add debian/bookworm64 vagrant.box vagrant up # SSH vagrant ssh sudo apt update sudo apt install curl wget nano net-tools sudo cp /sbin/ifconfig /bin # git, nodejs sudo apt install git ## github cli: https://github.com/cli/cli/blob/trunk/docs/install_linux.md curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash nvm install 22 gh auth login # revoke access # https://github.com/settings/connections/applications/178c6fc778ccc68e1d6a # reload vagrant reload # halt vargant halt  ","version":null,"tagName":"h2"},{"title":"systemd-nspawn​","type":1,"pageTitle":"Virtual Machine","url":"/Wisdom-Hub/linux/vm#systemd-nspawn","content":"mkdir ~/mycontainer dd if=/run/media/mlibre/B/manjaro-kde-24.0.2-240611-linux69.iso of=mycontainer.img bs=4M status=progress conv=sync mkdir ~/mycontainer/rootfs sudo mount -o loop ~/mycontainer.img ~/mycontainer/rootfs sudo umount /home/mlibre/mycontainer/rootfs  ","version":null,"tagName":"h2"},{"title":"podman​","type":1,"pageTitle":"Virtual Machine","url":"/Wisdom-Hub/linux/vm#podman","content":"sudo pacman -Syu podman  ","version":null,"tagName":"h2"},{"title":"LXC​","type":1,"pageTitle":"Virtual Machine","url":"/Wisdom-Hub/linux/vm#lxc","content":"sudo pacman -S lxc lxd lxc-checkconfig sudo systemctl disable lxd sudo systemctl disable lxc sudo systemctl disable lxd.socket sudo systemctl restart lxd # sudo lxc list # sudo lxc delete my-nodejs-container --force sudo lxd init sudo systemctl restart lxd sudo lxc launch ubuntu:20.04 my-nodejs-container sudo lxc exec my-nodejs-container -- /bin/bash sudo lxc-create --name mycontainer --template download  ","version":null,"tagName":"h2"},{"title":"KVM​","type":1,"pageTitle":"Virtual Machine","url":"/Wisdom-Hub/linux/vm#kvm","content":"","version":null,"tagName":"h2"},{"title":"Awesome Tools","type":0,"sectionRef":"#","url":"/Wisdom-Hub/linux/tools","content":"","keywords":"","version":null},{"title":"Utilities​","type":1,"pageTitle":"Awesome Tools","url":"/Wisdom-Hub/linux/tools#utilities","content":"","version":null,"tagName":"h2"},{"title":"tldr​","type":1,"pageTitle":"Awesome Tools","url":"/Wisdom-Hub/linux/tools#tldr","content":"sudo pacman -S tldr tldr apt # ssh # Secure Shell is a protocol used to securely log onto remote systems. # It can be used for logging or executing commands on a remote server. # More information: https://man.openbsd.org/ssh. # - Connect to a remote server: # ssh username@remote_host # - Connect to a remote server with a specific identity (private key): # ssh -i path/to/key_file username@remote_host # ...  ","version":null,"tagName":"h3"},{"title":"Shell​","type":1,"pageTitle":"Awesome Tools","url":"/Wisdom-Hub/linux/tools#shell","content":"","version":null,"tagName":"h2"},{"title":"inshellisense​","type":1,"pageTitle":"Awesome Tools","url":"/Wisdom-Hub/linux/tools#inshellisense","content":"inshellisense provides IDE style autocomplete for shells. It's a terminal native runtime for autocomplete which has support for 600+ command line tools. npm install -g @microsoft/inshellisense # bash is init bash &gt;&gt; ~/.bashrc # zsh is init zsh &gt;&gt; ~/.zshrc  ","version":null,"tagName":"h2"},{"title":"Atuin​","type":1,"pageTitle":"Awesome Tools","url":"/Wisdom-Hub/linux/tools#atuin","content":"Sync, search and backup shell history with Atuin bash &lt;(curl --proto '=https' --tlsv1.2 -sSf https://setup.atuin.sh) atuin import auto  ","version":null,"tagName":"h3"},{"title":"tbmk​","type":1,"pageTitle":"Awesome Tools","url":"/Wisdom-Hub/linux/tools#tbmk","content":"A commands bookmark for terminal git clone https://github.com/linhx/tbmk.git cd tbmk go build . ./install  Search: type and ctrl + spaceDelete: in the result screen, select the item then press ctrl + dAdd: ctrl + t. you can type the command first then press ctrl + tEdit: Override the old one by add new command with the same title. ","version":null,"tagName":"h3"},{"title":"ble.sh​","type":1,"pageTitle":"Awesome Tools","url":"/Wisdom-Hub/linux/tools#blesh","content":"Syntax highlighting and auto suggestions for bash # https://github.com/akinomyoga/ble.sh git clone --recursive --depth 1 --shallow-submodules https://github.com/akinomyoga/ble.sh.git make -C ble.sh install PREFIX=~/.local echo 'source ~/.local/share/blesh/ble.sh' &gt;&gt; ~/.bashrc # Install in Manjaro pamac install blesh-git  ","version":null,"tagName":"h3"},{"title":"Bash It​","type":1,"pageTitle":"Awesome Tools","url":"/Wisdom-Hub/linux/tools#bash-it","content":"git clone --depth=1 https://github.com/Bash-it/bash-it.git ~/.bash_it ~/.bash_it/install.sh source ~/.bashrc bashit bash-it show aliases bash-it show plugins bash-it show completions bash-it enable completion all bash-it update bash-it reload ls ~/.bash_it/themes/ bash-it enable plugin man cd $BASH_IT ./uninstall.sh  ","version":null,"tagName":"h3"},{"title":"Toolong​","type":1,"pageTitle":"Awesome Tools","url":"/Wisdom-Hub/linux/tools#toolong","content":"A terminal application to view, tail, merge, and search log files (plus JSONL) pipx install toolong tl mylogfile.log  ","version":null,"tagName":"h3"},{"title":"synth-shell​","type":1,"pageTitle":"Awesome Tools","url":"/Wisdom-Hub/linux/tools#synth-shell","content":"synth-shell improves your terminal experience and productivity by adding color, extra info, and convenience git clone --recursive https://github.com/andresgongora/synth-shell.git cd synth-shell ./setup.sh  ","version":null,"tagName":"h3"},{"title":"hstr​","type":1,"pageTitle":"Awesome Tools","url":"/Wisdom-Hub/linux/tools#hstr","content":"A command history search tool for bashhttps://github.com/dvorka/hstr sudo pamac install hstr hstr  To comes up with CTRL-R # bash hstr --show-bash-configuration &gt;&gt; ~/.bashrc # zsh hstr --show-zsh-configuration &gt;&gt; ~/.zshrc  ","version":null,"tagName":"h3"},{"title":"System monitoring​","type":1,"pageTitle":"Awesome Tools","url":"/Wisdom-Hub/linux/tools#system-monitoring","content":"","version":null,"tagName":"h2"},{"title":"Neofetch​","type":1,"pageTitle":"Awesome Tools","url":"/Wisdom-Hub/linux/tools#neofetch","content":"neofetch ██████████████████ ████████ mlibre@mlibre-systemproductname ██████████████████ ████████ ------------------------------- ██████████████████ ████████ OS: Manjaro Linux x86_64 ██████████████████ ████████ Kernel: 6.1.49-1-MANJARO ████████ ████████ Uptime: 38 mins ████████ ████████ ████████ Packages: 1657 (pacman) ████████ ████████ ████████ Shell: bash 5.1.16 ████████ ████████ ████████ Resolution: 2560x1440 ████████ ████████ ████████ DE: Plasma 5.27.7 ████████ ████████ ████████ WM: KWin ████████ ████████ ████████ Theme: [Plasma], Breeze [GTK2/3] ████████ ████████ ████████ Icons: [Plasma], breeze [GTK2/3] ████████ ████████ ████████ Terminal: konsole ████████ ████████ ████████ CPU: 12th Gen Intel i5-12400F (12) @ 5.600GHz GPU: AMD ATI Radeon RX 6400/6500 XT/6500M Memory: 5046MiB / 31906MiB  ","version":null,"tagName":"h3"},{"title":"htop​","type":1,"pageTitle":"Awesome Tools","url":"/Wisdom-Hub/linux/tools#htop","content":"htop  ","version":null,"tagName":"h3"},{"title":"prettyping​","type":1,"pageTitle":"Awesome Tools","url":"/Wisdom-Hub/linux/tools#prettyping","content":"sudo pacman -S prettyping prettyping  ","version":null,"tagName":"h3"},{"title":"Network Monitoring​","type":1,"pageTitle":"Awesome Tools","url":"/Wisdom-Hub/linux/tools#network-monitoring","content":"","version":null,"tagName":"h2"},{"title":"bmon​","type":1,"pageTitle":"Awesome Tools","url":"/Wisdom-Hub/linux/tools#bmon","content":"sudo pacman -S bmon bmon  ","version":null,"tagName":"h3"},{"title":"Wine​","type":1,"pageTitle":"Awesome Tools","url":"/Wisdom-Hub/linux/tools#wine","content":"# pamac install wine-stable sudo pacman -S wine winetricks winetricks corefonts vcrun2013 vcrun2015 winhttp allcodecs d3dcompiler_42 d3dcompiler_43 d3dcompiler_47 d3dx9 dotnet dxvk quartz sudo setcap cap_net_raw+epi /usr/bin/wine  ","version":null,"tagName":"h2"},{"title":"proxy​","type":1,"pageTitle":"Awesome Tools","url":"/Wisdom-Hub/linux/tools#proxy","content":"","version":null,"tagName":"h2"},{"title":"proxychains​","type":1,"pageTitle":"Awesome Tools","url":"/Wisdom-Hub/linux/tools#proxychains","content":"sudo nano /etc/proxychains.conf socks5 127.0.0.1 1080 # comment proxy_dns # proxy_dns  # Use proxychains to run yay, git, npm and pacman proxychains yay --noprovides --answerdiff None --answerclean None --mflags &quot;--noconfirm&quot; -S protonvpn proxychains git clone https://github.com/boypt/vmess2json.git sudo proxychains npm -g install v2ray-tools sudo proxychains pacman -Syyuu # Set the http and https proxy environment variables export http_proxy=socks5://127.0.0.1:1080 export https_proxy=socks5://127.0.0.1:1080  ","version":null,"tagName":"h3"},{"title":"Youtube Download​","type":1,"pageTitle":"Awesome Tools","url":"/Wisdom-Hub/linux/tools#youtube-download","content":"# Install sudo pacman -S youtube-dl yt-dlp # Download best quality yt-dlp &quot;https://www.youtube.com/link&quot; yt-dlp -f b --write-description --write-auto-sub --write-subs --embed-subs --write-info-json --max-filesize 100M --download-sections &quot;*6:02-13:40&quot; --proxy socks5://127.0.0.1:1080/ --verbose &quot;https://www.youtube.com/link&quot; # List formats and sizes yt-dlp -F &quot;https://www.youtube.com/link&quot; yt-dlp -f 22 &quot;https://www.youtube.com/link&quot; youtube-dl -f best &quot;https://www.youtube.com/link&quot;  ","version":null,"tagName":"h2"},{"title":"Add Alias​","type":1,"pageTitle":"Awesome Tools","url":"/Wisdom-Hub/linux/tools#add-alias","content":"nano ~/.bashrc alias yd='yt-dlp -f b --write-auto-sub --write-subs --embed-subs --write-info-json --max-filesize 100M' yd &quot;link&quot;  ","version":null,"tagName":"h3"},{"title":"Install Waydroid Android emulator​","type":1,"pageTitle":"Awesome Tools","url":"/Wisdom-Hub/linux/tools#install-waydroid-android-emulator","content":"sudo pacman -S wl-clipboard xclip cage python-pyclipper lzip sudo pamac install binder_linux-dkms sudo modprobe binder-linux devices=binder,hwbinder,vndbinder nano /etc/modules-load.d/binder_linux.conf binder_linux nano /etc/modprobe.d/binder_linux.conf options binder_linux devices=binder,hwbinder,vndbinder pip install pyclip --user --break-system-packages pip3 install pyclip --user --break-system-packages sudo pip3 install pyclip --break-system-packages sudo pamac install waydroid # waydroid init sudo waydroid init -s GAPPS sudo systemctl enable waydroid-container.service sudo systemctl restart waydroid-container.service cage waydroid session start sudo waydroid shell # https://docs.waydro.id/faq/google-play-certification cage waydroid show-full-ui sudo systemctl restart waydroid-container.service &amp;&amp; waydroid session stop &amp;&amp; waydroid show-full-ui alias wayr='sudo systemctl restart waydroid-container.service &amp;&amp; waydroid session stop &amp;&amp; waydroid show-full-ui' waydroid prop set persist.waydroid.width 2880 waydroid prop set persist.waydroid.height 1620 waydroid prop set persist.waydroid.multi_windows true sudo waydroid shell wm set-fix-to-user-rotation enabled # sudo waydroid shell settings put system user_rotation 0 # sudo waydroid shell settings put system user_rotation 1 # waydroid prop set persist.waydroid.cursor_on_subsurface true # waydroid prop set persist.waydroid.fake_touch &quot;*&quot; git clone https://github.com/casualsnek/waydroid_script cd waydroid_script python3 -m venv venv venv/bin/pip install -r requirements.txt sudo venv/bin/python3 main.py # removing / fixing sudo systemctl stop waydroid-container.service sudo rm -rf /var/lib/waydroid /home/.waydroid ~/waydroid ~/.share/waydroid ~/.local/share/applications/*aydroid* ~/.local/share/waydroid waydroid init -f sudo killall adb waydroid session stop sudo waydroid container stop  ","version":null,"tagName":"h2"},{"title":"Download using aria2 and proxy​","type":1,"pageTitle":"Awesome Tools","url":"/Wisdom-Hub/linux/tools#download-using-aria2-and-proxy","content":"aria2c -x 15 &quot;https://link.zip&quot; --all-proxy=&quot;http://127.0.0.1:2081&quot;  ","version":null,"tagName":"h2"},{"title":"Download protected file, like cookie or token need to login​","type":1,"pageTitle":"Awesome Tools","url":"/Wisdom-Hub/linux/tools#download-protected-file-like-cookie-or-token-need-to-login","content":"https://addons.mozilla.org/en-US/firefox/addon/cliget/ ","version":null,"tagName":"h2"},{"title":"Instant cloud file share​","type":1,"pageTitle":"Awesome Tools","url":"/Wisdom-Hub/linux/tools#instant-cloud-file-share","content":"# -F autodestroy=1 autodestroy on download or expire in 5 curl https://oshi.at -F f=@/home/true/backup.tar.gz -F expire=5 minutes curl -F &quot;file=@/home/mlibre/Downloads/backup.tar.gz&quot; &quot;https://file.io/?expires=1w&quot;  ","version":null,"tagName":"h2"},{"title":"Open Interpreter​","type":1,"pageTitle":"Awesome Tools","url":"/Wisdom-Hub/linux/tools#open-interpreter","content":"python -m venv myvirtenv source myvirtenv/bin/activate pip install --upgrade open-interpreter export COHERE_API_KEY=APY_KEY interpreter --model command-nightly  ","version":null,"tagName":"h2"},{"title":"Other","type":0,"sectionRef":"#","url":"/Wisdom-Hub/linux/other","content":"","keywords":"","version":null},{"title":"Time and Date​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#time-and-date","content":"Command\tShort Descriptioncal\tDisplay a calendar cal -3\tDisplay calendar for the previous, current, and next month timedatectl\tControl system time and date settings sudo timedatectl set-time '2023-09-06 14:30:00'\tSet the system time and date date\tDisplay or set the system date and time date &quot;+%Y-%m-%d %H:%M:%S&quot;\tDisplay the current date and time in a specific format sudo date -s '2023-09-06 14:30:00'\tSet the system date and time tzselect\tSet the system's time zone interactively ","version":null,"tagName":"h2"},{"title":"Timezone​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#timezone","content":"","version":null,"tagName":"h2"},{"title":"Get timezone​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#get-timezone","content":"date +%Z date +%z timedatectl show --property=Timezone --value readlink /etc/localtime cat /etc/timezone # depricated echo $TZ # depricated  ","version":null,"tagName":"h3"},{"title":"Set timezone​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#set-timezone","content":"timedatectl list-timezones sudo timedatectl set-timezone Arctic/Longyearbyen # Will change the output of &quot;date, timedatectl and /etc/localtime&quot;  /etc/localtime is a file or symbolic link in Linux that represents the current system's time zone configuration, used by many applications. You can change this time zone by modifying the file or link to point to a time zone definition file under /usr/share/zoneinfo/. ","version":null,"tagName":"h3"},{"title":"Fix time difference between linux and windows​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#fix-time-difference-between-linux-and-windows","content":"sudo timedatectl set-local-rtc 1 --adjust-system-clock ## sudo timedatectl set-local-rtc 1 sudo ntpdate time.nist.gov ## update time  ","version":null,"tagName":"h3"},{"title":"man, apropos​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#man-apropos","content":"Command\tShort Descriptionapropos network\tFind network commands apropos file\tSearch for file-related commands apropos -s 1 &quot;.*&quot;\tall user commands (section 1) man\tDisplay manual pages man ls\tView manual for 'ls' command ","version":null,"tagName":"h2"},{"title":"GRUB​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#grub","content":"File: /etc/default/grub/etc/grub.d//boot/grub/grub.cfg/boot/efi/EFI//boot/grub/x86_64-efi/ ","version":null,"tagName":"h2"},{"title":"Regenerate grub.cfg​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#regenerate-grubcfg","content":"sudo grub-mkconfig -o /boot/grub/grub.cfg  ","version":null,"tagName":"h3"},{"title":"Fixing broken grub​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#fixing-broken-grub","content":"Easy method using Manjaro Live​ Boot a live Manjaro image sudo manjaro-chroot -a grub-install update-grub  It will detect your current installed linux. Restart the computer and it will boot the installed linux. Then run: update-grub  General method​ # Mount the file system and efi partition sudo mount /dev/nvme0n1p4 /mnt sudo mount --bind /dev /mnt/dev sudo mount --bind /dev/pts /mnt/dev/pts sudo mount --bind /proc /mnt/proc sudo mount --bind /sys /mnt/sys sudo mkdir /efi sudo mount /dev/nvme0n1p1 /efi # Install grub and update grub configuration sudo grub-install --root-directory=/mnt/ /dev/nvme0 --efi-directory=/efi --target=x86_64-efi --recheck sudo chroot /mnt sudo blkid -s UUID -o value /dev/nvme0n1p1 nano /etc/fstab sudo update-grub  ","version":null,"tagName":"h3"},{"title":"Autostart​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#autostart","content":"","version":null,"tagName":"h2"},{"title":"Init​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#init","content":"the init command refers to the process initialization system. It's the first process that gets started by the kernel during system boot, and it's assigned the process ID (PID) of 1 which init # Output: /usr/bin/init readlink -f /usr/bin/init # Output: /usr/lib/systemd/systemd ps -p 1 # Output: # PID TTY TIME CMD # 1 ? 00:00:01 systemd pstree -p 1 # Output: # systemd(1)─┬─...  ","version":null,"tagName":"h3"},{"title":"Automatic Shutdown​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#automatic-shutdown","content":"Command\tDescriptionshutdown now\tShutdown the system immediately. shutdown -h +5\tShutdown the system in 5 minutes. shutdown -r now\tReboot the system immediately. shutdown -r +10\tReboot the system in 10 minutes. shutdown -H now\tHalt the system immediately. shutdown +5\tShutdown the system in 5 minutes. ","version":null,"tagName":"h2"},{"title":"Reading symlinks​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#reading-symlinks","content":"readlink /bin/init # ../lib/systemd/systemd  ","version":null,"tagName":"h3"},{"title":"System Info​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#system-info","content":"uname -a  ","version":null,"tagName":"h3"},{"title":"Performance​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#performance","content":"","version":null,"tagName":"h2"},{"title":"Disable Linux Watchdogs, compaction and more​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#disable-linux-watchdogs-compaction-and-more","content":"sudo systemctl start systemd-sysctl.service sudo systemctl enable systemd-sysctl.service sudo nano /etc/sysctl.conf # And sudo nano /etc/sysctl.d/sys.conf net.ipv4.tcp_fastopen=3 net.ipv4.ip_forward=1 kernel.nmi_watchdog=0 kernel.watchdog=0 vm.compaction_proactiveness=0 vm.zone_reclaim_mode=0 vm.page_lock_unfairness=1 kernel.perf_event_paranoid=-1 fs.inode-nr=200000 vm.dirty_background_ratio=5 vm.vfs_cache_pressure=50 net.ipv4.tcp_max_syn_backlog=8192 net.ipv4.tcp_tw_reuse=1 vm.min_free_kbytes=2500000  ","version":null,"tagName":"h3"},{"title":"Improve fstab, ssd, nvme performance​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#improve-fstab-ssd-nvme-performance","content":"sudo nano /etc/fstab UUID=f74c37b2-8a12-4252-90a6-d31504507bcb / ext4 defaults,noatime,nodiratime,commit=60,barrier=0 0 1  sudo nano /etc/udev/rules.d/60-ioschedulers.rules ACTION==&quot;add|change&quot;, KERNEL==&quot;nvme[0-9]n[0-9]&quot;, ATTR{queue/scheduler}=&quot;none&quot;  ","version":null,"tagName":"h3"},{"title":"Disabling journaling​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#disabling-journaling","content":"sudo tune2fs -f -O &quot;^has_journal&quot; /dev/sda2  ","version":null,"tagName":"h3"},{"title":"Journal Size​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#journal-size","content":"sudo nano /etc/systemd/journald.conf SystemMaxUse=100M sudo systemctl restart systemd-journald  ","version":null,"tagName":"h3"},{"title":"Manjaro​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#manjaro","content":"","version":null,"tagName":"h2"},{"title":"Fix broken System​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#fix-broken-system","content":"Boot into Manjaro Livechroot to yoour linux (manjaro-chroot -a) sudo pacman -Rns xf86-video-amdgpu sudo pacman -S xf86-video-amdgpu # Remove the word splash &amp; quiet from the Grub command line options nano /etc/default/grub sudo grub-mkconfig -o /boot/grub/grub.cfg sudo pacman -Rsn plymouth plymouth-theme-manjaro plymouth-kcm # remove &quot;plymouth&quot; from mkinitcpio HOOKS and add &quot;ext4 vfat&quot; to MODULES nano /etc/mkinitcpio.conf sudo mkinitcpio -P sudo update-grub sudo pacman -S linux61 linux  ","version":null,"tagName":"h3"},{"title":"Things to do before installing​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#things-to-do-before-installing","content":"Backup important data. Recovery-keys, Passwords, Postman and ...  backupPath=/home/mlibre/media/H/Linux/caches/ cd cp -rf /home/mlibre/.local/share/TelegramDesktop $backupPath cp $HISTFILE $backupPath cp .bashrc $backupPath cp .zshrc $backupPath cp .bash_profile $backupPath cp -r .config/ $backupPath cp -r .cache/ $backupPath sudo cp -r /etc $backupPath sudo cp -r /usr/lib/systemd/ $backupPath # Or full backup fullBackupPath=/home/mlibre/media/H/Linux/backup sudo rsync -aAXHv --exclude={&quot;/dev/*&quot;,&quot;/proc/*&quot;,&quot;/sys/*&quot;,&quot;/tmp/*&quot;,&quot;/run/*&quot;,&quot;/mnt/*&quot;,&quot;/var/*&quot;,&quot;/media/*&quot;,&quot;/usr/*&quot;,&quot;/lib/*&quot;,&quot;/lib64/&quot;,&quot;/lost+found&quot;,&quot;/swapfile&quot;,&quot;.npm*&quot;,&quot;.npm/*&quot;,&quot;node_modules*&quot;,&quot;node_modules/*&quot;,&quot;mesa_shader_cache*&quot;,&quot;steamapps*&quot;,&quot;Data*&quot;,&quot;Steam*&quot;,&quot;/home/mlibre/media/*&quot;} / $fullBackupPath  Mark EFI partition while installing Manjaro/Arch Linux as /boot/efi. Don't check Format option. ","version":null,"tagName":"h3"},{"title":"Things to do after installing​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#things-to-do-after-installing","content":"Remove and disable unnecessary packages echo &quot;$USER ALL=(ALL:ALL) NOPASSWD: ALL&quot; | sudo tee /etc/sudoers.d/$USER sudo systemctl disable pamac-daemon sudo systemctl disable pamac-mirrorlist.timer sudo systemctl disable pamac-mirrorlist.service sudo systemctl disable pacman-filesdb-refresh.timer sudo pacman -R manjaro-hello web-installer-url-handler matray print-manager samba kdenetwork-filesharing thunderbird hplip cups yakuake manjaro-printer gutenprint cups-pdf snapd libpamac-snap-plugin flatpak libpamac-flatpak-plugin bluedevil timeshift timeshift-autosnap-manjaro pamac-tray-icon-plasma kdeconnect vde2 qemu-common qemu-system-arm qemu-user-static-binfmt qemu-system-arm-firmware scrcpy flatpak ## or echo &quot;manjaro-hello web-installer-url-handler matray print-manager samba kdenetwork-filesharing thunderbird hplip cups yakuake manjaro-printer gutenprint cups-pdf snapd libpamac-snap-plugin flatpak libpamac-flatpak-plugin bluedevil timeshift timeshift-autosnap-manjaro pamac-tray-icon-plasma kdeconnect vde2 qemu-common qemu-system-arm qemu-user-static-binfmt qemu-system-arm-firmware scrcpy flatpak&quot; | xargs -d &quot; &quot; -I {} sudo pacman --noconfirm -R {} Pacman downloads parallel sudo nano /etc/pacman.conf ParallelDownloads = 5 Upgrade pamac update --force-refresh pamac update -a sudo pacman-mirrors --fasttrack sudo pacman -Syyuu sudo pacman -S mlocate telegram-desktop unzip thermald ntfs-3g firefox vlc aria2 base-devel xorg-xrandr code dnsutils libva-utils intel-media-driver libva-intel-driver libvpl nvtop vdpauinfo sudo pacman -S qbittorrent meld ttf-ubuntu-font-family gnome-keyring libsecret core/iputils clinfo steam-native-runtime gparted amdvlk lib32-amdvlk net-tools sudo pacman -S clamav libreoffice-fresh tor torsocks sudo systemctl enable --now thermald.service sudo updatedb pamac install nekoray-bin visual-studio-code-bin onlyoffice-bin Import Data cp -r /run/media/mlibre/D/Linux/caches/TelegramDesktop /home/mlibre/.local/share/ Aliases echo &quot;alias nn='npm run'&quot; &gt;&gt; ~/.bashrc Make an XDG autostart script for gamma adjustment Put the gamma script in the .bashrc and .zshrc as well KDE Settings -&gt; Disable Mouse acceleration KDE Settings -&gt; Startup and Shutdown: Start with empty session, Choose KDE Screen Saver Review background services Review Autostarts KDE Settings -&gt; Appearance -&gt; Theme -&gt; Breeze Dark, Breath Dark KDE Settings -&gt; Appearance -&gt; Font -&gt; Enabled Anti-Aliasing, RGB, Slight. all +1 PT KDE Settings -&gt; Workspace -&gt; Search -&gt; Disable Web Search Keywords KDE Settings -&gt; Workspace Behavior -&gt; Activities -&gt; Privacy -&gt; Dont remember soft KDE Settings -&gt; Search for kRunner -&gt; settings -&gt; uncheck all Pin Firefox, Terminal, ProtonVPN, Kate and VSCode to the panel Software Center: Disable automatic updates, Add AUR support Remove Virtual Desktops Make a Swapfile sudo dd if=/dev/zero of=/swapfile bs=1M count=5120 status=progress sudo chmod 600 /swapfile sudo mkswap /swapfile sudo swapon /swapfile cat /etc/fstab sudo bash -c &quot;echo /swapfile none swap defaults 0 0 &gt;&gt; /etc/fstab&quot; sudo nano /etc/sysctl.conf ## vm.swappiness=10  Firefox: Enable DNS over HTTPS Enable automatic mounting of external drives: Settings -&gt; Hardware -&gt; Removable Storage -&gt; Automount Konsole config: Font: Monospace 13ptTheme: Breath (customized, a bit darker)Shell: Manjaro zsh Steam: Allow auto-update only between 1AM - 11AM Performance sudo systemctl disable bluetooth.service sudo systemctl disable tor.service sudo systemctl disable samba sudo systemctl disable cups balooctl disable &amp;&amp; balooctl purge sudo rm /etc/cron.d/0hourly sudo rm /etc/xdg/autostart/baloo_file.desktop sudo rm /etc/xdg/autostart/pamac-tray-budgie.desktop sudo rm /etc/xdg/autostart/pamac-tray.desktop sudo rm /etc/xdg/autostart/msm_kde_notifier.desktop sudo rm /etc/xdg/autostart/org.gnome.SettingsDaemon* sudo rm /etc/xdg/autostart/print-applet.desktop # sudo systemctl enable firewalld # sudo systemctl restart firewalld # sudo firewall-cmd --permanent --add-service=https # sudo firewall-cmd --permanent --add-port=30303/tcp # sudo firewall-cmd --permanent --add-port=30303/udp # sudo systemctl restart --now clamav-daemon # sudo freshclam # clamscan --recursive --infected /home # sudo systemctl disable --now clamav-freshclam # sudo systemctl disable --now clamav-daemon # sudo systemctl enable --now clamav-daemon # sudo systemctl enable --now clamav-freshclam  ","version":null,"tagName":"h3"},{"title":"Apply New Configs​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#apply-new-configs","content":"# Default config file ls -laR /etc/skel # apply default configs # method 1 cp -rf /etc/skel/.* ~/ rm -f ~/.config/dconf/user # method 2 sudo useradd -m newusername sudo passwd newusername  ","version":null,"tagName":"h3"},{"title":"Windows 11​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#windows-11","content":"","version":null,"tagName":"h2"},{"title":"Make boatable usb​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#make-boatable-usb","content":"","version":null,"tagName":"h3"},{"title":"WoeUsb​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#woeusb","content":"sudo pacman -Suy p7zip python-pip python-wxpython git clone https://github.com/WoeUSB/WoeUSB-ng.git sudo pip3 install . sudo woeusb --workaround-skip-grub --target-filesystem NTFS --device ~/Win11_22H2_English_x64v1.iso /dev/sdb  ","version":null,"tagName":"h3"},{"title":"Win2USB​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#win2usb","content":"https://github.com/ValdikSS/windows2usb chmod +x windows2usb* ./windows2usb-0.2.4-x86_64.AppImage /dev/sdb ~/Win11_22H2_English_x64v1.iso gpt+uefintfs  ","version":null,"tagName":"h3"},{"title":"Things to do after installing Windows 11​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#things-to-do-after-installing-windows-11","content":"Download and install all the updatesEnable Ransomware protectionDownload DimScreen, Copy it to the download folder. Open. click on the settings. set brightness to 20%. Make a shortcut to the desktopsearch for gamma calibration in windows settings. set it to minimumAdjust date and time: auto. Timezone tehran +3:30Downloading updates active hours: 24 hours format. 1-&gt;11Disable all data usages settings in privacy and securityuninstall mail, teams, one drive. xbox, facebook, microsoft todo, sticky notes, tips, weatherInstall firefox and loginInstall protonVPNpersonalize: sunrisenetwork connection: metered connectionDisplay: 3840x2160, 200%Steam: add your games' location to the Games' folder library. make it as defaultSteam: If your games are in a NTFS file system, follow this to make game compatible with Linux.Pause windows updates for 5 weeksCheck windows startups appsApp store: disable automatic updateLeave from &quot;AMD user experience program&quot;. AMD settings -&gt; last tab -&gt; last optionwindows features: WSL, virtual machine, hyper-v (for android and linux apps)wsl --updatewsl --install -d UbuntuDisable Error Reporting: WIN+R -&gt; services.msc -&gt; Windows Error Reporting Service -&gt; Properties -&gt; disable ","version":null,"tagName":"h3"},{"title":"Install a new os on the phone​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#install-a-new-os-on-the-phone","content":"","version":null,"tagName":"h2"},{"title":"Backup data​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#backup-data","content":"sudo pacman -S android-tools sudo adb devices adb backup -apk -shared -all -f backup-file.ab  ","version":null,"tagName":"h3"},{"title":"Restore​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#restore","content":"adb restore file.ab  ","version":null,"tagName":"h3"},{"title":"Enable Developer options​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#enable-developer-options","content":"Several times clicks on the kernel tabAllow OEM unlockingEnter Download mod: Turn off the phone. Hold vol key up + down.Now in the warning message page. choose &quot;unlocking bootloader&quot; that will perform a factory reset ","version":null,"tagName":"h3"},{"title":"Install odin tools for Samsung >= 3.14​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#install-odin-tools-for-samsung--314","content":"https://samsungodin.com/ ","version":null,"tagName":"h3"},{"title":"Install samsung driver​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#install-samsung-driver","content":"https://developer.samsung.com/android-usb-driver ","version":null,"tagName":"h3"},{"title":"Install adb​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#install-adb","content":"https://developer.android.com/studio/releases/platform-tools adb reboot download  ","version":null,"tagName":"h3"},{"title":"Download TWRP​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#download-twrp","content":"https://www.droidthunder.com/install-twrp-recovery-on-galaxy-A10/https://twrp.me/samsung/samsunggalaxya10.html ","version":null,"tagName":"h3"},{"title":"convert it to .md5​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#convert-it-to-md5","content":"https://www.droidthunder.com/convert-img-to-tar-md5/ ","version":null,"tagName":"h3"},{"title":"Run Odin as administrator​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#run-odin-as-administrator","content":"follow the instructionshttps://www.droidthunder.com/install-twrp-recovery-on-galaxy-A10/ ","version":null,"tagName":"h3"},{"title":"Docker​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#docker","content":"","version":null,"tagName":"h2"},{"title":"Installation​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#installation","content":"sudo pacman -S docker sudo usermod -aG docker $USER sudo systemctl restart docker sudo reboot  ","version":null,"tagName":"h3"},{"title":"Enabling, Disabling​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#enabling-disabling","content":"sudo systemctl enable containerd.service sudo systemctl enable docker.service sudo systemctl disable containerd.service sudo systemctl disable docker.service sudo systemctl start containerd.service sudo systemctl start docker.service sudo systemctl stop containerd.service sudo systemctl stop docker.service  ","version":null,"tagName":"h3"},{"title":"Info​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#info","content":"docker info # docker info docker COMMAND --help # command info, docker ps --help  ","version":null,"tagName":"h3"},{"title":"Listing​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#listing","content":"# Images docker images -a # Containers docker ps -a  ","version":null,"tagName":"h3"},{"title":"Pulling​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#pulling","content":"docker pull ubuntu docker pull ubuntu:14.04  ","version":null,"tagName":"h3"},{"title":"Removing​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#removing","content":"docker rmi IMAGE_NAME docker rm CONTAINER_NAME docker system prune -a -f # To remove any unused image, container docker system prune --volumes -f -a # also removing volumes  ","version":null,"tagName":"h3"},{"title":"Running​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#running","content":"docker run IMAGE_NAME # check if there is a local image. if there is, will create a new container based on the local image and run it. # if not, will try to find and download the image from the hub.docker.com # Then will create a new container based on the downloaded image docker start CONTAINER_NAME # start a container docker stop CONTAINER_NAME # stop a container  Example​ docker run -d --name cname -p 80:8080 hello-world # -d: detached, background # --name: container name # -p: map container port to os port # 80: OS port # 8080: container port # hello-world: Image Name docker start cname docker logs cname docker run -it bash docker run -it bash /usr/local/bin/bash # -it: interactive mode. it will open a terminal after running the container # /usr/local/bin/bash: the shell to open. if not specified the default path will be used # CTRL + D or exit: to close the bash and so the container # CTRL + P then CTRL + Q: to exit without stopping the container  ","version":null,"tagName":"h3"},{"title":"Log​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#log","content":"docker logs CONTAINER_ID_OR_NAME  ","version":null,"tagName":"h3"},{"title":"Build​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#build","content":"docker build --tag imageName:tag .  ","version":null,"tagName":"h3"},{"title":"Other commands​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#other-commands","content":"docker exec -ti -u root CONTAINER_NAME bash echo &quot;nameserver 8.8.8.8&quot; &gt; /etc/resolv.conf  ","version":null,"tagName":"h3"},{"title":"8G tmpFs​","type":1,"pageTitle":"Other","url":"/Wisdom-Hub/linux/other#8g-tmpfs","content":"nano /etc/fstab tmpfs /tmp tmpfs defaults,noatime,size=8G,mode=1777 0 0  ","version":null,"tagName":"h3"},{"title":"Lovely Tools","type":0,"sectionRef":"#","url":"/Wisdom-Hub/Lovely Tools","content":"","keywords":"","version":null},{"title":"My ETH Address​","type":1,"pageTitle":"Lovely Tools","url":"/Wisdom-Hub/Lovely Tools#my-eth-address","content":"0xc9b64496986E7b6D4A68fDF69eF132A35e91838e ","version":null,"tagName":"h2"},{"title":"Shell and Scripting","type":0,"sectionRef":"#","url":"/Wisdom-Hub/linux/shell-scripting","content":"","keywords":"","version":null},{"title":"Login shell vs non-login-shell​","type":1,"pageTitle":"Shell and Scripting","url":"/Wisdom-Hub/linux/shell-scripting#login-shell-vs-non-login-shell","content":"A shell session can be either a login shell or a non-login shell. A login shell is the first shell that runs under your user ID when you start an interactive session, such as logging in via tmux, SSH, or su -. This shell reads and executes the environment configuration files /etc/profile and ~/.bash_profile for bash. You can verify if a shell is a login shell by running shopt login_shell. A non-login shell is any shell started in an existing session, like a terminal in a graphical environment, a shell inside tmux, or a shell within another shell. These shells do not read the environment configuration files (/etc/profile or ~/.bash_profile), but they do read the shell configuration file (~/.bashrc, /etc/bash.bashrc). ","version":null,"tagName":"h2"},{"title":"Default Shell​","type":1,"pageTitle":"Shell and Scripting","url":"/Wisdom-Hub/linux/shell-scripting#default-shell","content":"The default login shell for a user is configured in /etc/passwd. To check or change a user's default shell: getent passwd mlibre pritenv SHELL  ","version":null,"tagName":"h2"},{"title":"Bash​","type":1,"pageTitle":"Shell and Scripting","url":"/Wisdom-Hub/linux/shell-scripting#bash","content":"","version":null,"tagName":"h2"},{"title":"Basics​","type":1,"pageTitle":"Shell and Scripting","url":"/Wisdom-Hub/linux/shell-scripting#basics","content":"Variables my_var=&quot;Hello, World!&quot; echo $my_var  if if [[ condition ]]; then # Code to execute if condition is true fi  loops for i in {1..5}; do echo &quot;Iteration $i&quot; done  Functions my_function() { echo &quot;Hello from my function!&quot; } my_function  Command Line Arguments echo &quot;First argument: $1&quot;  Input and Output read -p &quot;Enter your name: &quot; name echo &quot;Hello, $name!&quot;  ","version":null,"tagName":"h3"},{"title":"Metacharacters and Quoting​","type":1,"pageTitle":"Shell and Scripting","url":"/Wisdom-Hub/linux/shell-scripting#metacharacters-and-quoting","content":"Command\tDescription*\tMatches zero or more characters. ls /bin/zip* ?\tMatches single character. ls file?.txt [] (square brackets)\tMatches any one character within the range. ls file[1-2].txt {} (curly braces)\texpands values. {a,b}.txt expands to a.txt and b.txt 'single quotes'\tEscape all metacharacters within string &quot;double quotes&quot;\tInterpret metacharacters within string ","version":null,"tagName":"h3"},{"title":"Execution methods​","type":1,"pageTitle":"Shell and Scripting","url":"/Wisdom-Hub/linux/shell-scripting#execution-methods","content":"Command\tDescription\tExecution Method./script\tExecute script in current directory as a new process\tShebang (#!/) sh ./script\tRun script with the default system shell (/bin/sh)\tNo Shebang (#!/) bash ./script\tRun script explicitly with the Bash shell\tNo Shebang (#!/) source ./script\tExecute script in the current shell, preserving changes\tNo Shebang (#!/) exec ./script\tReplace the current shell with the script (keeps PID)\tShebang (#!/) ","version":null,"tagName":"h3"},{"title":"Conditionals​","type":1,"pageTitle":"Shell and Scripting","url":"/Wisdom-Hub/linux/shell-scripting#conditionals","content":"Operator\tMeaning\tExample\tDescription-ne\tNot Equal\t$a -ne $b\tTrue if $a is not equal to $b -ge\tGreater than or Equal To\t$x -ge $y\tTrue if $x is greater than or equal to $y !=\tNot Equal (for strings)\t&quot;$str1&quot; != &quot;$str2&quot;\tTrue if $str1 is not equal to $str2 =\tEqual (for strings)\t&quot;$str1&quot; = &quot;$str2&quot;\tTrue if $str1 is equal to $str2 -lt\tLess Than\t$p -lt $q\tTrue if $p is less than $q -gt\tGreater Than\t$m -gt $n\tTrue if $m is greater than $n -le\tLess Than or Equal To\t$i -le $j\tTrue if $i is less than or equal to $j -f\tFile Exists\t-f &quot;$file&quot;\tTrue if the file $file exists -s\tFile is Not Empty (Size &gt; 0)\t-s &quot;$file&quot;\tTrue if the file $file exists and is not empty -x\tFile is Executable\t-x &quot;$script&quot;\tTrue if the script $script is executable ","version":null,"tagName":"h3"},{"title":"wait, ;, &&, ||, `, $#, $?, $()​","type":1,"pageTitle":"Shell and Scripting","url":"/Wisdom-Hub/linux/shell-scripting#wait-------","content":"Command\tDescriptioncommand1; command2\tRun 'command1' followed by 'command2' ls; pwd\tList files and then print the current directory mkdir myfolder; cd myfolder\tCreate a folder and then navigate into it command1 || command2\tRun 'command1', if it fails, run 'command2' ls /nonexist || echo &quot;not found&quot;\tList a directory, and if it doesn't exist, display an error message command1 &amp;&amp; command2\tRun 'command1', if it succeeds, run 'command2' git pull &amp;&amp; npm install\tPull from a Git and install Node.js packages if the pull is successful wait\tPause execution until all background jobs are done sleep 10 &amp; wait; echo &quot;hi&quot;&quot;\tWait for background jobs to finish and then display a message `command`\tExecutes command and returns its output as text $()\tExecutes a command within parentheses and returns its output output=$(command)\tExecutes command and stores its output in output $#\tNumber of arguments passed to script $?\tExit or return value of the last executed command (0 for success) sleep `expr 5 \\* 5`\tPause for 25 seconds (5 multiplied by 5) ","version":null,"tagName":"h3"},{"title":"echo, env, export, set, unset, variables​","type":1,"pageTitle":"Shell and Scripting","url":"/Wisdom-Hub/linux/shell-scripting#echo-env-export-set-unset-variables","content":"Commands\tDescriptionVAR_NAME=val\tSet VAR_NAME to val set\tdisplays shell variables and functions set -o\tDisplay current shell options set -e\tExit immediately if a command in script exits with non-zero status unset MYVAR\tUnset the environment variable named VAR_NAME export VAR\tMake var available to child processes env\tView current environment vars echo $VAR\tDisplay value of VAR echo $PATH\tDisplay value of PATH echo $HOME\tDisplay user's home directory echo $EDITOR\tDisplay default text editor echo $HISTFILE\tDisplay command history file echo $USER\tDisplay current username echo $?\tDisplay last command exit status echo $PS1\tDisplay the shell prompt echo -e\tEnable interpretation of backslash escapes in the string echo -e &quot;hi \\n&quot;\tDisplay &quot;hi&quot; with a newline character Use export when you want to make a variable available to child processes Use set primarily for managing shell options and attributes, but it can also be used to set local variables ","version":null,"tagName":"h3"},{"title":"source, alias, type​","type":1,"pageTitle":"Shell and Scripting","url":"/Wisdom-Hub/linux/shell-scripting#source-alias-type","content":"Command\tDescriptionsource\tLoad functions into the current shell session source ~/.bashrc\tReloads the user's Bash profile source my_script.sh\tExecutes a shell script within the current shell alias\tCreate or display command aliases alias ll='ls -l'\tCreates an alias 'll' for the 'ls -l' command alias c=clear\tCreates an alias 'c' for the 'clear' command unalias c\tRemove the alias 'c' for the 'clear' command type\tinformation about a command type ls\toutput: ls is an alias for ls $LS_OPTIONS type ssh\toutput: ssh is /usr/bin/ssh type source\toutput: source is a shell builtin ","version":null,"tagName":"h3"},{"title":"history​","type":1,"pageTitle":"Shell and Scripting","url":"/Wisdom-Hub/linux/shell-scripting#history","content":"Commands\tDescriptionhistory 5\tDisplays the last 5 commands in the history !!\tRepeats the last executed command !*\tRepresents all arguments of the last command !n\tRepeats the nth command in history !-n\tRepeats the nth command from the current command !string\tRepeats the most recent command that starts with string !:1, !:2, ...\tRepresents the first, second, etc. arguments of the last command !:0\tRepresents the command + arguments command !:0-2\tExecutes the command with the first two arguments of the last command command !:1-2\tExecutes the command with the second and third arguments of the last command command !:2*\tExecutes command from the second arguments of the last command some !571:2*\tExecutes some from the second arguments of 571st command in the history ","version":null,"tagName":"h3"},{"title":"Prompt Shell​","type":1,"pageTitle":"Shell and Scripting","url":"/Wisdom-Hub/linux/shell-scripting#prompt-shell","content":"echo $PS1 PS1='$(if [ $? -eq 0 ]; then echo -e &quot;\\[\\033[42m\\] \\[\\033[0m\\]&quot;; else echo -e &quot;\\[\\033[41m\\] \\[\\033[0m\\]&quot;; fi) \\[\\033[1;32m\\]$(if [ $(jobs | wc -l) -gt 0 ]; then echo -n &quot;\\j &quot;; fi)\\[\\033[1;36m\\]\\u\\[\\033[0m\\] \\[\\033[1;33m\\]\\w\\[\\033[0m\\] \\[\\033[1;34m\\]$(if [ $(date +%H) -ge 6 -a $(date +%H) -lt 18 ]; then echo -n &quot;☀️&quot;; else echo -n &quot;🌙&quot;; fi)\\[\\033[0m\\] ' # you may put your PS1 in .bashrc nano .bashrc  ","version":null,"tagName":"h3"},{"title":"Case-insensitive Auto completion​","type":1,"pageTitle":"Shell and Scripting","url":"/Wisdom-Hub/linux/shell-scripting#case-insensitive-auto-completion","content":"# Add the following line to the /etc/inputrc file to enable case-insensitive auto completion echo 'set completion-ignore-case On' | sudo tee -a /etc/inputrc # or as root echo 'set completion-ignore-case On' &gt;&gt; /etc/inputrc # or for current user only echo &quot;set completion-ignore-case on&quot; &gt;&gt; ~/.inputrc  ","version":null,"tagName":"h3"},{"title":"Simple Bash Scripts​","type":1,"pageTitle":"Shell and Scripting","url":"/Wisdom-Hub/linux/shell-scripting#simple-bash-scripts","content":"Mouse location​ while true; do sleep 2 xdotool getmouselocation done  Get screen resolution​ RES=$(xdpyinfo | grep dimensions | awk '{print $2}') WIDTH=$(echo $RES | awk -Fx '{print $1}') HEIGHT=$(echo $RES | awk -Fx '{print $2}')  Click, Move and scroll on the screen​ #!/bin/bash # Usage: ./click2.bash 3 30 # Check for two arguments if [[ $# -ne 3 ]]; then echo &quot;Usage: $0 &lt;mouse idle time in seconds&gt; &lt;sleep time in each loop&gt; &lt;specific action each Nth time&gt;&quot; exit 1 fi mousemoveAndClick() { # Move the mouse to the specified coordinates xdotool mousemove $1 $2 # mouse click xdotool click 1 # Sleep for 1 second sleep 1 } scroll() { local direction=$1 local count=$2 if [[ $direction == &quot;up&quot; ]]; then for i in $(seq 1 $count); do xdotool click 4 sleep 0.5 done elif [[ $direction == &quot;down&quot; ]]; then for i in $(seq 1 $count); do xdotool click 5 sleep 0.5 done fi } remove_esc() { # Move the mouse to the specified coordinates xdotool mousemove 1575 572 # mouse click xdotool click 1 # Sleep for 1 second sleep 1 } press_esc_and_click() { # Press ESC xdotool key Escape sleep 1 # mouse click xdotool click 1 remove_esc } buy() { # Move the mouse to the specified coordinates xdotool mousemove 1556 1230 # mouse click xdotool click 1 # Sleep for 1 second sleep 1 } counter=0 # Get the idle time in milliseconds IDLE_TIME=$(echo &quot;$1 * 1000&quot; | bc) while true; do # Get the current idle time of the mouse pointer in milliseconds IDLE=$(xprintidle) # Check if the mouse has been idle for at least the specified time if [[ $IDLE -ge $IDLE_TIME ]]; then ((counter++)) echo &quot;Increasing $counter&quot; # Boss mousemoveAndClick 34 393 press_esc_and_click # top left mousemoveAndClick 1173 647 buy if [[ $((counter % $3)) -eq 0 ]]; then scroll &quot;down&quot; 40 fi fi # Sleep for specified time sleep $2 done  And run: chmod +x click.sh ./click.sh 1 30 50  ","version":null,"tagName":"h3"},{"title":"zsh​","type":1,"pageTitle":"Shell and Scripting","url":"/Wisdom-Hub/linux/shell-scripting#zsh","content":"sudo pacman -S zsh  ","version":null,"tagName":"h2"},{"title":"Font​","type":1,"pageTitle":"Shell and Scripting","url":"/Wisdom-Hub/linux/shell-scripting#font","content":"Monospace 12  ","version":null,"tagName":"h2"},{"title":"Learn Network","type":0,"sectionRef":"#","url":"/Wisdom-Hub/network/","content":"","keywords":"","version":null},{"title":"Tutorials​","type":1,"pageTitle":"Learn Network","url":"/Wisdom-Hub/network/#tutorials","content":"This repository is organized into several sections, each containing tutorials for specific topics. Here's a brief overview: BasicsSSHVPNDNSOther ","version":null,"tagName":"h2"},{"title":"My ETH Address​","type":1,"pageTitle":"Learn Network","url":"/Wisdom-Hub/network/#my-eth-address","content":"0xc9b64496986E7b6D4A68fDF69eF132A35e91838e ","version":null,"tagName":"h2"},{"title":"Basics","type":0,"sectionRef":"#","url":"/Wisdom-Hub/network/basic","content":"","keywords":"","version":null},{"title":"hostname, ifconfig, ping, curl, wget​","type":1,"pageTitle":"Basics","url":"/Wisdom-Hub/network/basic#hostname-ifconfig-ping-curl-wget","content":"Command\tDescriptionhostname\tDisplay the system's hostname hostname -i\tDisplay the machine's IP address sudo hostnamectl hostname newname\tChange the hostname to &quot;newname&quot; ifconfig\tDisplay network interface information ifconfig eth0\tDisplay details for a specific network interface (e.g., eth0) ifconfig -s\tDisplay a short list of interfaces with basic information netstat -nr\tDisplay routing table information netstat -na\tDisplay all active network connections ping google.com\tPing Google's servers to check network connectivity ping -c 4 8.8.8.8\tSend 4 ping requests to Google's DNS server (8.8.8.8) ping -i 2 1.1.1.1\tPing 1.1.1.1 with a 2-second interval between requests ping -s 100 1.1.1.1\tSend larger packets of 100 bytes while pinging curl https://example.com\tRetrieve the content of a website (example.com) curl -o newfile.txt https://example.com/file\tDownload a file and save it with a different name curl -O https://example.com/file.zip\tDownload a file (e.g., file.zip) from a URL curl -X POST -d &quot;data&quot; https://api.example.com\tSend POST data to an API endpoint curl -I https://example.com\tFetch only the headers of a web page wget https://example.com/file.txt\tDownload a file (e.g., file.txt) from a URL wget -c https://example.com/largefile.zip\tResume a partially downloaded file host domain\tDisplay the IP addresses of a domain ","version":null,"tagName":"h2"},{"title":"Network Tips","type":0,"sectionRef":"#","url":"/Wisdom-Hub/network/other","content":"","keywords":"","version":null},{"title":"Disable IPV6​","type":1,"pageTitle":"Network Tips","url":"/Wisdom-Hub/network/other#disable-ipv6","content":"sudo nano /etc/sysctl.conf net.ipv6.conf.all.disable_ipv6=1 net.ipv6.conf.default.disable_ipv6=1 sudo sysctl -p  ","version":null,"tagName":"h2"},{"title":"Open an application over socks​","type":1,"pageTitle":"Network Tips","url":"/Wisdom-Hub/network/other#open-an-application-over-socks","content":"torsocks deluge tsokcs deluge  ","version":null,"tagName":"h2"},{"title":"Redirecting the whole network traffic​","type":1,"pageTitle":"Network Tips","url":"/Wisdom-Hub/network/other#redirecting-the-whole-network-traffic","content":"sudo ip route add 192.168.1.0/24 dev ppp0 # ppp0: vpn name # 192.168.1.0: IP range  ","version":null,"tagName":"h2"},{"title":"Simple python http server​","type":1,"pageTitle":"Network Tips","url":"/Wisdom-Hub/network/other#simple-python-http-server","content":"python3 -m http.server --bind 0.0.0.0 --cgi 8000  ","version":null,"tagName":"h2"},{"title":"Monitoring traffic​","type":1,"pageTitle":"Network Tips","url":"/Wisdom-Hub/network/other#monitoring-traffic","content":"sudo pacman -Sy sniffnet sniffnet  ","version":null,"tagName":"h2"},{"title":"DNS","type":0,"sectionRef":"#","url":"/Wisdom-Hub/network/dns","content":"","keywords":"","version":null},{"title":"Configuring DNS on Linux​","type":1,"pageTitle":"DNS","url":"/Wisdom-Hub/network/dns#configuring-dns-on-linux","content":"","version":null,"tagName":"h2"},{"title":"resolv.conf​","type":1,"pageTitle":"DNS","url":"/Wisdom-Hub/network/dns#resolvconf","content":"sudo nano /etc/resolv.conf nameserver 1.1.1.1 nameserver 1.0.0.1 nameserver 208.67.222.222 nameserver 208.67.220.220 nameserver 8.8.8.8 nameserver 8.8.4.4 # echo &quot;nameserver 8.8.8.8&quot; | sudo tee /etc/resolv.conf  ","version":null,"tagName":"h3"},{"title":"resolvconf​","type":1,"pageTitle":"DNS","url":"/Wisdom-Hub/network/dns#resolvconf-1","content":"sudo systemctl enable resolvconf sudo nano /etc/resolvconf/resolv.conf.d/head sudo nano /etc/resolvconf/resolv.conf.d/base nameserver 1.1.1.1 nameserver 208.67.222.222 nameserver 208.67.220.220 nameserver 8.8.8.8  ","version":null,"tagName":"h3"},{"title":"systemd-resolved​","type":1,"pageTitle":"DNS","url":"/Wisdom-Hub/network/dns#systemd-resolved","content":"sudo nano /etc/systemd/resolved.conf [Resolve] DNS=1.1.1.1 208.67.222.222 208.67.220.220 8.8.8.8 sudo nano /run/systemd/resolve/stub-resolv.conf nameserver 1.1.1.1 nameserver 208.67.222.222 nameserver 208.67.220.220 nameserver 8.8.8.8 sudo systemctl enable systemd-resolved sudo systemctl restart systemd-resolved # resolvectl dns enp3s0 1.1.1.1 # resolvectl dns enp1s0f0u6 1.1.1.1 resolvectl dns  ","version":null,"tagName":"h3"},{"title":"dhclient​","type":1,"pageTitle":"DNS","url":"/Wisdom-Hub/network/dns#dhclient","content":"sudo nano /etc/dhcp/dhclient.conf prepend domain-name-servers 208.67.222.222, 208.67.220.220, 8.8.8.8 sudo nano /etc/network/interfaces iface eth0 inet static dns-nameservers 208.67.222.222 208.67.220.220 8.8.8.8  ","version":null,"tagName":"h3"},{"title":"Fast System-Wide DNS Setup​","type":1,"pageTitle":"DNS","url":"/Wisdom-Hub/network/dns#fast-system-wide-dns-setup","content":"","version":null,"tagName":"h2"},{"title":"Shekan​","type":1,"pageTitle":"DNS","url":"/Wisdom-Hub/network/dns#shekan","content":"# resolvectl query identitytoolkit.googleapis.com DNS_SERVER=&quot;178.22.122.100&quot; sudo sh -c &quot;echo nameserver $DNS_SERVER &gt; /etc/resolv.conf&quot; sudo sed -i '/^\\s*#*DNS=/d' /etc/systemd/resolved.conf &amp;&amp; sudo sed -i '$ a\\DNS='&quot;$DNS_SERVER&quot; /etc/systemd/resolved.conf sudo systemctl daemon-reload; wait; sudo systemctl restart systemd-networkd; wait; sudo systemctl restart systemd-resolved; wait; sudo systemd-resolve --flush-caches sudo resolvectl flush-caches sudo resolvectl dns eth0 &quot;$DNS_SERVER&quot; sudo resolvectl dns tun0 &quot;$DNS_SERVER&quot; sudo resolvectl dns enp3s0 &quot;$DNS_SERVER&quot; sudo resolvectl dns enp5s0 &quot;$DNS_SERVER&quot; sudo resolvectl dns docker0 &quot;$DNS_SERVER&quot; sudo resolvectl dns  ","version":null,"tagName":"h3"},{"title":"Begzar​","type":1,"pageTitle":"DNS","url":"/Wisdom-Hub/network/dns#begzar","content":"DNS_SERVER=&quot;185.55.226.26&quot; sudo sh -c &quot;echo nameserver $DNS_SERVER &gt; /etc/resolv.conf&quot; sudo sed -i '/^\\s*#*DNS=/d' /etc/systemd/resolved.conf &amp;&amp; sudo sed -i '$ a\\DNS='&quot;$DNS_SERVER&quot; /etc/systemd/resolved.conf sudo systemctl daemon-reload; wait; sudo systemctl restart systemd-networkd; wait; sudo systemctl restart systemd-resolved; wait; sudo systemd-resolve --flush-caches sudo resolvectl flush-caches sudo resolvectl dns eth0 &quot;$DNS_SERVER&quot; sudo resolvectl dns tun0 &quot;$DNS_SERVER&quot; sudo resolvectl dns enp3s0 &quot;$DNS_SERVER&quot; sudo resolvectl dns enp5s0 &quot;$DNS_SERVER&quot; sudo resolvectl dns docker0 &quot;$DNS_SERVER&quot; sudo resolvectl dns  DNS_SERVER=&quot;10.202.10.202&quot; sudo sh -c &quot;echo nameserver $DNS_SERVER &gt; /etc/resolv.conf&quot; sudo sed -i '/^\\s*#*DNS=/d' /etc/systemd/resolved.conf &amp;&amp; sudo sed -i '$ a\\DNS='&quot;$DNS_SERVER&quot; /etc/systemd/resolved.conf sudo systemctl daemon-reload; wait; sudo systemctl restart systemd-networkd; wait; sudo systemctl restart systemd-resolved; wait; sudo systemd-resolve --flush-caches sudo resolvectl flush-caches sudo resolvectl dns eth0 &quot;$DNS_SERVER&quot; sudo resolvectl dns tun0 &quot;$DNS_SERVER&quot; sudo resolvectl dns enp3s0 &quot;$DNS_SERVER&quot; sudo resolvectl dns enp5s0 &quot;$DNS_SERVER&quot; sudo resolvectl dns docker0 &quot;$DNS_SERVER&quot; sudo resolvectl dns  ","version":null,"tagName":"h3"},{"title":"electrotm​","type":1,"pageTitle":"DNS","url":"/Wisdom-Hub/network/dns#electrotm","content":"DNS_SERVER=&quot;78.157.42.101&quot; sudo sh -c &quot;echo nameserver $DNS_SERVER &gt; /etc/resolv.conf&quot; sudo sed -i '/^\\s*#*DNS=/d' /etc/systemd/resolved.conf &amp;&amp; sudo sed -i '$ a\\DNS='&quot;$DNS_SERVER&quot; /etc/systemd/resolved.conf sudo systemctl daemon-reload; wait; sudo systemctl restart systemd-networkd; wait; sudo systemctl restart systemd-resolved; wait; sudo systemd-resolve --flush-caches sudo resolvectl flush-caches sudo resolvectl dns eth0 &quot;$DNS_SERVER&quot; sudo resolvectl dns tun0 &quot;$DNS_SERVER&quot; sudo resolvectl dns enp3s0 &quot;$DNS_SERVER&quot; sudo resolvectl dns enp5s0 &quot;$DNS_SERVER&quot; sudo resolvectl dns docker0 &quot;$DNS_SERVER&quot; sudo resolvectl dns  ","version":null,"tagName":"h3"},{"title":"DNS Watch​","type":1,"pageTitle":"DNS","url":"/Wisdom-Hub/network/dns#dns-watch","content":"DNS_SERVER=&quot;84.200.69.80&quot; sudo sh -c &quot;echo nameserver $DNS_SERVER &gt; /etc/resolv.conf&quot; sudo sed -i '/^\\s*#*DNS=/d' /etc/systemd/resolved.conf &amp;&amp; sudo sed -i '$ a\\DNS='&quot;$DNS_SERVER&quot; /etc/systemd/resolved.conf sudo systemctl daemon-reload; wait; sudo systemctl restart systemd-networkd; wait; sudo systemctl restart systemd-resolved; wait; sudo systemd-resolve --flush-caches sudo resolvectl flush-caches sudo resolvectl dns eth0 &quot;$DNS_SERVER&quot; sudo resolvectl dns tun0 &quot;$DNS_SERVER&quot; sudo resolvectl dns enp3s0 &quot;$DNS_SERVER&quot; sudo resolvectl dns enp5s0 &quot;$DNS_SERVER&quot; sudo resolvectl dns docker0 &quot;$DNS_SERVER&quot; sudo resolvectl dns  ","version":null,"tagName":"h3"},{"title":"Safe DNS​","type":1,"pageTitle":"DNS","url":"/Wisdom-Hub/network/dns#safe-dns","content":"DNS_SERVER=&quot;195.46.39.40&quot; sudo sh -c &quot;echo nameserver $DNS_SERVER &gt; /etc/resolv.conf&quot; sudo sed -i '/^\\s*#*DNS=/d' /etc/systemd/resolved.conf &amp;&amp; sudo sed -i '$ a\\DNS='&quot;$DNS_SERVER&quot; /etc/systemd/resolved.conf sudo systemctl daemon-reload; wait; sudo systemctl restart systemd-networkd; wait; sudo systemctl restart systemd-resolved; wait; sudo systemd-resolve --flush-caches sudo resolvectl flush-caches sudo resolvectl dns eth0 &quot;$DNS_SERVER&quot; sudo resolvectl dns tun0 &quot;$DNS_SERVER&quot; sudo resolvectl dns enp3s0 &quot;$DNS_SERVER&quot; sudo resolvectl dns enp5s0 &quot;$DNS_SERVER&quot; sudo resolvectl dns docker0 &quot;$DNS_SERVER&quot; sudo resolvectl dns  ","version":null,"tagName":"h3"},{"title":"OpenDns​","type":1,"pageTitle":"DNS","url":"/Wisdom-Hub/network/dns#opendns","content":"DNS_SERVER=&quot;208.67.222.222&quot; sudo sh -c &quot;echo nameserver $DNS_SERVER &gt; /etc/resolv.conf&quot; sudo sed -i '/^\\s*#*DNS=/d' /etc/systemd/resolved.conf &amp;&amp; sudo sed -i '$ a\\DNS='&quot;$DNS_SERVER&quot; /etc/systemd/resolved.conf sudo systemctl daemon-reload; wait; sudo systemctl restart systemd-networkd; wait; sudo systemctl restart systemd-resolved; wait; sudo systemd-resolve --flush-caches sudo resolvectl flush-caches sudo resolvectl dns eth0 &quot;$DNS_SERVER&quot; sudo resolvectl dns tun0 &quot;$DNS_SERVER&quot; sudo resolvectl dns enp3s0 &quot;$DNS_SERVER&quot; sudo resolvectl dns enp5s0 &quot;$DNS_SERVER&quot; sudo resolvectl dns docker0 &quot;$DNS_SERVER&quot; sudo resolvectl dns  ","version":null,"tagName":"h3"},{"title":"Cloudflare​","type":1,"pageTitle":"DNS","url":"/Wisdom-Hub/network/dns#cloudflare","content":"DNS_SERVER=&quot;1.1.1.1&quot; sudo sh -c &quot;echo nameserver $DNS_SERVER &gt; /etc/resolv.conf&quot; sudo sed -i '/^\\s*#*DNS=/d' /etc/systemd/resolved.conf &amp;&amp; sudo sed -i '$ a\\DNS='&quot;$DNS_SERVER&quot; /etc/systemd/resolved.conf sudo systemctl daemon-reload; wait; sudo systemctl restart systemd-networkd; wait; sudo systemctl restart systemd-resolved; wait; sudo systemd-resolve --flush-caches sudo resolvectl flush-caches sudo resolvectl dns eth0 &quot;$DNS_SERVER&quot; sudo resolvectl dns tun0 &quot;$DNS_SERVER&quot; sudo resolvectl dns enp3s0 &quot;$DNS_SERVER&quot; sudo resolvectl dns enp5s0 &quot;$DNS_SERVER&quot; sudo resolvectl dns docker0 &quot;$DNS_SERVER&quot; sudo resolvectl dns  ","version":null,"tagName":"h3"},{"title":"Setting domains directly in /etc/hosts​","type":1,"pageTitle":"DNS","url":"/Wisdom-Hub/network/dns#setting-domains-directly-in-etchosts","content":"sudo nano /etc/hosts 10.202.10.4 securetoken.googleapis.com 50.7.87.84 identitytoolkit.googleapis.com 50.7.87.84 bard.google.com 50.7.85.222 openai.com 50.7.85.220 chat.openai.com 50.7.87.85 cdn.openai.com 188.68.52.244 www.bing.com 50.7.87.85 marketplace.visualstudio.com 50.7.85.222 auth0.openai.com 50.7.85.218 api.codium.ai  ","version":null,"tagName":"h2"},{"title":"Setting Up DNS Server​","type":1,"pageTitle":"DNS","url":"/Wisdom-Hub/network/dns#setting-up-dns-server","content":"","version":null,"tagName":"h2"},{"title":"Using Systemd​","type":1,"pageTitle":"DNS","url":"/Wisdom-Hub/network/dns#using-systemd","content":"sudo nano /etc/systemd/resolved.conf [Resolve] DNS=1.1.1.1 9.9.9.9#dns.quad9.net 8.8.8.8 FallbackDNS=208.67.222.222 208.67.220.220 DNSSEC=yes DNSOverTLS=no Cache=yes DNSStubListener=yes ReadEtcHosts=yes #Domains= #LLMNR=no #MulticastDNS=no sudo systemctl enable systemd-resolved.service sudo systemctl restart systemd-resolved.service sudo systemctl restart NetworkManager  ","version":null,"tagName":"h3"},{"title":"Using dnsmasq​","type":1,"pageTitle":"DNS","url":"/Wisdom-Hub/network/dns#using-dnsmasq","content":"sudo apt install dnsmasq  ","version":null,"tagName":"h3"},{"title":"SSH","type":0,"sectionRef":"#","url":"/Wisdom-Hub/network/ssh","content":"","keywords":"","version":null},{"title":"ssh-keygen​","type":1,"pageTitle":"SSH","url":"/Wisdom-Hub/network/ssh#ssh-keygen","content":"SSH key pairs are essential for secure authentication. To generate an SSH key pair, you can use the ssh-keygen command. This command generates both a private key (usually stored in ~/.ssh/id_rsa) and a public key (stored in ~/.ssh/id_rsa.pub). To generate a new key pair, you can use the following command: ssh-keygen  ","version":null,"tagName":"h2"},{"title":"ssh-copy-id​","type":1,"pageTitle":"SSH","url":"/Wisdom-Hub/network/ssh#ssh-copy-id","content":"sudo ssh-copy-id -i .ssh/id_rsa.pub -p 22 mlibre@192.168.1.136  ","version":null,"tagName":"h2"},{"title":"SSH Config File​","type":1,"pageTitle":"SSH","url":"/Wisdom-Hub/network/ssh#ssh-config-file","content":"nano ~/.ssh/config host funserver User mlibre IdentityFile /home/mlibre/.ssh/id_rsa Port 2222  ssh funserver  ","version":null,"tagName":"h2"},{"title":"Local Port Forwarding (-L)​","type":1,"pageTitle":"SSH","url":"/Wisdom-Hub/network/ssh#local-port-forwarding--l","content":"Allows accessing a remote port locally by binding a local port to a remote port. Useful for accessing services only available on loopback. Example: ssh -N -f -L 1337:127.0.0.1:80 root@internal-web.int  ","version":null,"tagName":"h2"},{"title":"Remote Port Forwarding (-R)​","type":1,"pageTitle":"SSH","url":"/Wisdom-Hub/network/ssh#remote-port-forwarding--r","content":"Opens a port on a remote server that forwards to a local port on another server. Useful for pivoting through networks. Example: ssh -N -f -R 3000:127.0.0.1:80 root@vuln-server.int  ","version":null,"tagName":"h2"},{"title":"Dynamic Port Forwarding (-D)​","type":1,"pageTitle":"SSH","url":"/Wisdom-Hub/network/ssh#dynamic-port-forwarding--d","content":"Creates a SOCKS proxy that can route traffic through an SSH connection. Useful for proxying web traffic. Example: ssh -N -f -D 8080 root@vuln-server.int ssh -D 0.0.0.0:8080 -N mlibre@51.89.88.80  ","version":null,"tagName":"h2"},{"title":"Agent Forwarding (-A)​","type":1,"pageTitle":"SSH","url":"/Wisdom-Hub/network/ssh#agent-forwarding--a","content":"Forwards SSH keys/identities to remote servers. Can be risky if keys have high privileges. Example: ssh -A -J root@vuln-server.int root@internal-web.int  ","version":null,"tagName":"h2"},{"title":"Jump Hosts (-J)​","type":1,"pageTitle":"SSH","url":"/Wisdom-Hub/network/ssh#jump-hosts--j","content":"Proxy through multiple hosts to reach a destination. Example: ssh -J root@host1,root@host2 root@destination  ","version":null,"tagName":"h2"},{"title":"SSH Remote Port Forwarding Systemd Service​","type":1,"pageTitle":"SSH","url":"/Wisdom-Hub/network/ssh#ssh-remote-port-forwarding-systemd-service","content":"[Unit] Description=SSH Reverse Tunnel Service After=network.target [Service] Environment=&quot;AUTOSSH_GATETIME=0&quot; ExecStart=/usr/bin/autossh -N -M 0 -o &quot;ExitOnForwardFailure=yes&quot; -o &quot;ServerAliveInterval 60&quot; -o &quot;ServerAliveCountMax 3&quot; -R 0.0.0.0:11434:0.0.0.0:11434 mlibre@176.124.193.114 #ExecStart=/usr/bin/ssh -N -R 0.0.0.0:11434:0.0.0.0:11434 mlibre@176.124.193.114 Restart=always RestartSec=2 User=mlibre KillMode=control-group [Install] WantedBy=multi-user.target  ","version":null,"tagName":"h2"},{"title":"Script to fix ssh and reset to default configs​","type":1,"pageTitle":"SSH","url":"/Wisdom-Hub/network/ssh#script-to-fix-ssh-and-reset-to-default-configs","content":"#!/bin/bash new_config=&quot; Port 22 AddressFamily any ListenAddress 0.0.0.0 SyslogFacility AUTH LogLevel INFO PermitRootLogin yes PubkeyAuthentication yes PasswordAuthentication yes UsePAM yes X11Forwarding yes Subsystem sftp /usr/lib/ssh/sftp-server MaxSessions 1000 &quot; # Backup the existing SSH server configuration sudo cp /etc/ssh/sshd_config /etc/ssh/sshd_config.backup # Write the new configuration to the SSH server config file echo &quot;$new_config&quot; | sudo tee /etc/ssh/sshd_config &gt; /dev/null echo &quot;SSH server configuration has been replaced.&quot; sudo ufw disable sudo iptables -F sudo mv /etc/hosts.deny /etc/hosts.deny_backup sudo touch /etc/hosts.deny sudo systemctl enable sshd sudo systemctl restart sshd # User creation new_username=&quot;mlibre&quot; new_password=&quot;password&quot; sudo useradd -m -s /bin/bash &quot;$new_username&quot; echo &quot;$new_username:$new_password&quot; | sudo chpasswd # Add your public key to the new user's authorized_keys file your_public_key=&quot;your ssh public key&quot; sudo mkdir -p /home/&quot;$new_username&quot;/.ssh echo &quot;$your_public_key&quot; | sudo tee -a /home/&quot;$new_username&quot;/.ssh/authorized_keys &gt; /dev/null sudo chown -R &quot;$new_username&quot;:&quot;$new_username&quot; /home/&quot;$new_username&quot;/.ssh sudo chmod 700 /home/&quot;$new_username&quot;/.ssh sudo chmod 600 /home/&quot;$new_username&quot;/.ssh/authorized_keys echo &quot;Your public key has been added to the authorized_keys file of user $new_username.&quot; echo &quot;$new_username ALL=(ALL) NOPASSWD:ALL&quot; | sudo tee /etc/sudoers.d/&quot;$new_username&quot; &gt; /dev/null echo &quot;$new_username - maxlogins 1000&quot; | sudo tee -a /etc/security/limits.conf &gt; /dev/nulls echo &quot;fs.file-max = 65535&quot; | sudo tee -a /etc/sysctl.conf &gt; /dev/null  ","version":null,"tagName":"h2"},{"title":"VPN & Proxy","type":0,"sectionRef":"#","url":"/Wisdom-Hub/network/vpn","content":"","keywords":"","version":null},{"title":"Proxy to VPN​","type":1,"pageTitle":"VPN & Proxy","url":"/Wisdom-Hub/network/vpn#proxy-to-vpn","content":"pamac install tun2proxy sudo tun2proxy --setup --proxy &quot;http://127.0.0.1:2080&quot; --dns over-tcp --bypass &quot;104.21.32.243&quot; # &quot;104.21.32.243&quot; is the IP of the VPN server  ","version":null,"tagName":"h2"},{"title":"Tor​","type":1,"pageTitle":"VPN & Proxy","url":"/Wisdom-Hub/network/vpn#tor","content":"In VPS: sudo apt install tor sudo systemctl enable tor sudo systemctl restart tor sudo nano /etc/tor/torrc SocksPort 0.0.0.0:9050 # Bind to this address:port too. SocksPolicy accept * sudo systemctl restart tor journalctl -u tor curl --socks5 localhost:9050 https://check.torproject.org/  In local Linux: ssh -L 9050:localhost:9050 -N mlibre@176.124.193.114  ","version":null,"tagName":"h2"},{"title":"SSH​","type":1,"pageTitle":"VPN & Proxy","url":"/Wisdom-Hub/network/vpn#ssh","content":"Configure the client sudo nano /etc/systemd/system/sshtunnel.service [Unit] Description=SSH Tunnels After=network.target [Service] User=mlibre Restart=always RestartSec=20 ExecStart=ssh -L 0.0.0.0:1234:localhost:3128 -N server@95.216.208.60 -p 8756 [Install] WantedBy=graphical.target  ","version":null,"tagName":"h2"},{"title":"Socks proxy over SSH​","type":1,"pageTitle":"VPN & Proxy","url":"/Wisdom-Hub/network/vpn#socks-proxy-over-ssh","content":"sudo nano /etc/systemd/system/sshtunnelsocks.service [Unit] Description=SSH Tunnels After=network.target [Service] User=mlibre Restart=always RestartSec=20 ExecStart=ssh -D 3080 -C -N server@95.216.208.60 -p 8756 [Install] WantedBy=graphical.target  ","version":null,"tagName":"h3"},{"title":"VPN over SSH​","type":1,"pageTitle":"VPN & Proxy","url":"/Wisdom-Hub/network/vpn#vpn-over-ssh","content":"sudo pacman -S sshuttle sudo sshuttle -v -r mlibre@51.89.88.80 0/0 -x 51.89.88.80 --disable-ipv6 # sudo nano /etc/resolv.conf # nameserver 1.1.1.1 # nameserver 4.2.2.4 # sudo systemctl restart systemd-resolved.service # sudo sshuttle -v -r mlibre@176.124.193.114 0/0 -x 0.0.0.0/0 --dns --disable-ipv6 # sudo sshuttle -v -r mlibre@51.89.88.80 0/0 -x 51.89.88.80 --dns --disable-ipv6 # sudo sshuttle -v -r mlibre@51.89.88.80 0.0.0.0/0 --dns --disable-ipv6 # sudo sshuttle -vv -r mlibre@176.124.193.114 0/0 -x 0.0.0.0 --dns --disable-ipv6  ","version":null,"tagName":"h2"},{"title":"openVPN Over Socks​","type":1,"pageTitle":"VPN & Proxy","url":"/Wisdom-Hub/network/vpn#openvpn-over-socks","content":"SS server address: 87.80.80.80 nano mlibre.ovpn socks-proxy 127.0.0.1 1090 route 87.80.80.80 255.255.255.255 net_gateway route 192.168.0.0 255.255.0.0 net_gateway  ","version":null,"tagName":"h2"},{"title":"OpenVpn Server​","type":1,"pageTitle":"VPN & Proxy","url":"/Wisdom-Hub/network/vpn#openvpn-server","content":"https://github.com/mlibre/openvpn-install curl -O https://raw.githubusercontent.com/angristan/openvpn-install/master/openvpn-install.sh chmod +x openvpn-install.sh sudo ./openvpn-install.sh port: random, tcp, curreny system resolver, compression yes scp -P 2138 mlibre@87.107.164.69:/home/mlibre/mlibre.ovpn . DNS_SERVER=&quot;1.1.1.1&quot; sudo sh -c &quot;echo nameserver $DNS_SERVER &gt; /etc/resolv.conf&quot; sudo sed -i '/^\\s*#*DNS=/d' /etc/systemd/resolved.conf &amp;&amp; sudo sed -i '$ a\\DNS='&quot;$DNS_SERVER&quot; /etc/systemd/resolved.conf sudo systemctl daemon-reload; wait; sudo systemctl restart systemd-networkd; wait; sudo systemctl restart systemd-resolved; wait; sudo systemd-resolve --flush-caches sudo resolvectl flush-caches sudo resolvectl dns eth0 &quot;$DNS_SERVER&quot; sudo resolvectl dns tun0 &quot;$DNS_SERVER&quot; sudo resolvectl dns enp3s0 &quot;$DNS_SERVER&quot; sudo resolvectl dns enp5s0 &quot;$DNS_SERVER&quot; sudo resolvectl dns docker0 &quot;$DNS_SERVER&quot; sudo resolvectl dns Global: 1.1.1.1 Link 2 (enp3s0): 1.1.1.1 Link 8 (tun0): 1.1.1.1 Add these lines to your .ovpn file: socks-proxy 127.0.0.1 1080 route SHADOWSOCKS_SERVER_IP 255.255.255.255 net_gateway  ","version":null,"tagName":"h2"},{"title":"V2Ray VPN/Proxy Server​","type":1,"pageTitle":"VPN & Proxy","url":"/Wisdom-Hub/network/vpn#v2ray-vpnproxy-server","content":"","version":null,"tagName":"h2"},{"title":"disable ping​","type":1,"pageTitle":"VPN & Proxy","url":"/Wisdom-Hub/network/vpn#disable-ping","content":"sudo nano /etc/sysctl.conf net.ipv4.conf.icmp_echo_ignore_all = 1 sudo nano /etc/sysctl.d/sys.conf net.ipv4.conf.icmp_echo_ignore_all = 1  ","version":null,"tagName":"h3"},{"title":"Change server hostname​","type":1,"pageTitle":"VPN & Proxy","url":"/Wisdom-Hub/network/vpn#change-server-hostname","content":"vultr.com -&gt; server setting -&gt; ipv4 -&gt; reverse DNS  proxychains ssh -p port true@000.000.13.13 sudo nano /etc/cloud/cloud.cfg # preserve_hostname: true sudo nano /etc/hostname domain.ga sudo nano /etc/hosts 127.0.1.1 domain.ga sudo hostnamectl set-hostname domain.ga  ","version":null,"tagName":"h3"},{"title":"Add domain to the cloudflare​","type":1,"pageTitle":"VPN & Proxy","url":"/Wisdom-Hub/network/vpn#add-domain-to-the-cloudflare","content":"SSL/TLS: FullDisable DNSSEC, Always Use HTTPS, Automatic HTTPS RewritesEnable TLS 1.3, HTTP2/3, GRPC, WS and ... in Network/SSL tabEnable Development modeAdd a &quot;A&quot; DNS record: domain.ga, DNS only ( no proxy )Add a &quot;A&quot; DNS record: v4p.domain.ga, proxyAdd a &quot;AAAA&quot; DNS record: v6.domain.ga, proxy ( don't make dns-only for ipv6 ) ","version":null,"tagName":"h3"},{"title":"XUI Panel​","type":1,"pageTitle":"VPN & Proxy","url":"/Wisdom-Hub/network/vpn#xui-panel","content":"ssh root@ip apt update apt purge snapd ufw firewalld apt dist-upgrade apt install sudo git bash-completion zip unzip aria2 curl nano htop adduser mlibre usermod -a -G sudo mlibre sudo sh -c &quot;echo 'mlibre ALL=(ALL) NOPASSWD: ALL' &gt;&gt; /etc/sudoers&quot; # passwd mlibre reboot sudo ufw allow 2053 sudo ufw allow 2053/udp sudo ufw allow 2053/tcp sudo ufw allow 35400 sudo ufw allow 35400/udp sudo ufw allow 35400/tcp sudo ufw allow 2087 sudo ufw allow 2087/udp sudo ufw allow 2087/tcp sudo ufw allow 2096 sudo ufw allow 2096/udp sudo ufw allow 2096/tcp sudo ufw allow 8443 sudo ufw allow 8443/udp sudo ufw allow 8443/tcp sudo ufw allow 2053 sudo ufw allow 2053/udp sudo ufw allow 2053/tcp sudo ufw allow 3678 sudo ufw allow 3678/udp sudo ufw allow 3678/tcp sudo ufw allow 2289 sudo ufw allow 2289/udp sudo ufw allow 2289/tcp sudo ufw allow 9090 sudo ufw allow 9090/udp sudo ufw allow 9090/tcp sudo ufw allow 1080 sudo ufw allow 1080/udp sudo ufw allow 1080/tcp sudo ufw allow 443 sudo ufw allow 443/tcp sudo ufw allow 443/udp sudo ufw allow 80 sudo ufw allow 80/tcp sudo ufw allow 80/udp sudo ufw allow 5353 sudo ufw allow 5353/tcp sudo ufw allow 5353/udp sudo ufw allow 53 sudo ufw allow 53/tcp sudo ufw allow 53/udp sudo ufw allow OpenSSH sudo ufw allow https sudo ufw allow ssh sudo ufw allow www sudo ufw allow bootps sudo ufw allow dns cd bash &lt;(curl -Ls https://raw.githubusercontent.com/mhsanaei/3x-ui/master/install.sh) # cat /usr/local/x-ui/bin/config.json # tar -czvf x-ui.tgz /usr/local/x-ui/ # proxychains scp -P 3612 true@199.247.13.13:x-ui.tgz . # proxychains scp -P 3612 root@199.247.13.13:cert.crt . # proxychains scp -P 3612 root@199.247.13.13:private.key . sudo su x-ui # Open ports, active firewall # install BBR, WARP # warp u =&gt; Uninstall Warp # warp a =&gt; Change Warp Account Type (free, plus, ...) # warp y =&gt; Turn on/off WireProxy # revoke certificate the root domain # issue certificate # Set Panel port 8443 # Set the certs for panel ls acme.sh --info acme.sh --list # lsof -i :80  Open Panel (https://domain.ga:8443/xui/inbounds)vless-2096-h2-reality-no-sniff-stackoverflow.com:443trojan-tls-TCP-443-allow-insecure-alp-all-sni-stackoverflow.comvmess-ws-tls-2053-allow-insecure-aph-allvmess-h2-TLS-H2-HTTP1-allow-insecure-stackoverflow.com-80vmess-h2-TLS-H2-allow-insecure-8443In firefox: Check Proxy DNS when using SOCKS v5 ","version":null,"tagName":"h3"},{"title":"Nekoray​","type":1,"pageTitle":"VPN & Proxy","url":"/Wisdom-Hub/network/vpn#nekoray","content":"Nekoray Supports SS, Vmess and ....Download from https://github.com/Matsuridayo/nekoray/releases aria2c -x 10 &quot;https://github.com/MatsuriDayo/nekoray/releases/download/2.9/nekoray-2.9-2022-12-19-linux64.zip&quot; unzip nekoray-2.9-2022-12-19-linux64.zip cd nekoray ./nekoray # Settings -&gt; security -&gt; Skip TLS certificate # paste vmess setting. Address: portal.domain.ga, host: portal.domain.ga # paste vmess setting. Address: iv6.domain.ga, host: iv6.domain.ga  Open Nekoray -&gt; Routing Settings -&gt; remote DNS: localhost ","version":null,"tagName":"h3"},{"title":"Cloudflare worker​","type":1,"pageTitle":"VPN & Proxy","url":"/Wisdom-Hub/network/vpn#cloudflare-worker","content":"https://github.com/iErfun/BPB-Panel-EN/ ","version":null,"tagName":"h2"},{"title":"Raspberry pi","type":0,"sectionRef":"#","url":"/Wisdom-Hub/raspberry pi","content":"","keywords":"","version":null},{"title":"Raspberry Pi OS​","type":1,"pageTitle":"Raspberry pi","url":"/Wisdom-Hub/raspberry pi#raspberry-pi-os","content":"Download the Raspberry Pi OS imageInstall rpi-imager sudo pacman -S rpi-imager  Connect your SD card to your computer and run: rpi-imager  First use Erase the SD card optionsFrom the settings menu, you can set the Hostname and ...Select Write and wait for the process to finishConnect the Raspberry Pi to your computer or router and run: sudo nmap -sP 192.168.1.0/24 | grep -B 2 -i raspberry Nmap scan report for 192.168.1.136 Host is up (0.00047s latency). MAC Address: DC:A6:32:9A:EF:16 (Raspberry Pi Trading)  Now you can connect to your Raspberry Pi using ssh: sudo ssh-copy-id -i .ssh/id_rsa.pub -p 22 mlibre@192.168.1.136 ssh mlibre@192.168.1.136 sudo passwd  ","version":null,"tagName":"h2"},{"title":"First Things​","type":1,"pageTitle":"Raspberry pi","url":"/Wisdom-Hub/raspberry pi#first-things","content":"sudo rm cron.daily/apt-compat sudo rm /etc/cron.weekly/update-notifier-common sudo rm /etc/cron.daily/update-notifier-common sudo apt-get purge geany mariadb-common apt-listchanges cups cups-browsed cups-daemon apparmor snapd apport sudo apt autoremove --purge sudo rpi-update # rollback from rpi-update # sudo apt install --reinstall raspberrypi-bootloader raspberrypi-kernel raspberrypi-kernel-headers sudo apt --allow-releaseinfo-change update sudo apt full-upgrade sudo apt install -y protobuf-compiler protobuf-c-compiler libyaml-cpp0.6 libyaml-cpp-dev libzxingcore-dev libzxingcore1 qtbase5-dev qtbase5-dev-tools build-essential cmake make linux-headers-arm64 ninja-build libqt5svg5-dev qttools5-dev mlocate ruby-google-protobuf python3-protobuf r-cran-rprotobuf libupb0 libupb-dev gogoprotobuf golang-gitaly-proto-dev golang-github-gogo-googleapis-dev golang-gogoprotobuf-dev gradle-plugin-protobuf grpc-proto libactivemq-protobuf-java libarcus-dev libarcus3 libghc-protobuf-dev libghc-protobuf-prof libhawtbuf-java g++ git bazel-bootstrap python3-grpc-tools python3-arcus protoc-gen-go libprotozero-dev libprotoc-dev libqt5x11extras5-dev fswebcam python3-pip libsdl2-dev wget git python3 python3-venv libgdbm-dev libsqlite3-dev tk-dev libncursesw5-dev aria2 libdb5.3-dev llvm autoconf rfkill raspberrypi-ui-mods realvnc-vnc-server raspberrypi-bootloader raspberrypi-kernel raspberrypi-kernel-headers libssl-dev automake libjansson-dev autotools-dev unzip gcc software-properties-common golang clang sudo apt clean sudo apt autoclean sudo rpi-update sudo usermod -a -G video $USER sudo usermod -a -G gpio $USER sudo updatedb pip install pyyaml pip3 install torch torchvision torchaudio sudo reboot  ","version":null,"tagName":"h2"},{"title":"rasp-config​","type":1,"pageTitle":"Raspberry pi","url":"/Wisdom-Hub/raspberry pi#rasp-config","content":"sudo raspi-config  UpdateDisplay Options: VNC ResolutionPerformance: GPU Memory to min of 896Advance Options: Expand filesystem, Predicetd Network Interface Names ","version":null,"tagName":"h2"},{"title":"Fix $PATH​","type":1,"pageTitle":"Raspberry pi","url":"/Wisdom-Hub/raspberry pi#fix-path","content":"nano .bashrc if [ -d &quot;$HOME/.local/bin&quot; ] ; then PATH=&quot;$HOME/.local/bin:$PATH&quot; fi  ","version":null,"tagName":"h2"},{"title":"Usuals​","type":1,"pageTitle":"Raspberry pi","url":"/Wisdom-Hub/raspberry pi#usuals","content":"","version":null,"tagName":"h2"},{"title":"bash completion​","type":1,"pageTitle":"Raspberry pi","url":"/Wisdom-Hub/raspberry pi#bash-completion","content":"echo set completion-ignore-case on | sudo tee -a /etc/inputrc  ","version":null,"tagName":"h3"},{"title":"No Password​","type":1,"pageTitle":"Raspberry pi","url":"/Wisdom-Hub/raspberry pi#no-password","content":"sudo nano /etc/sudoers %sys ALL=(ALL) NOPASSWD: ALL mlibre ALL=(ALL) NOPASSWD: ALL  ","version":null,"tagName":"h3"},{"title":"Performance​","type":1,"pageTitle":"Raspberry pi","url":"/Wisdom-Hub/raspberry pi#performance","content":"","version":null,"tagName":"h2"},{"title":"Logs​","type":1,"pageTitle":"Raspberry pi","url":"/Wisdom-Hub/raspberry pi#logs","content":"sudo systemctl disable syslog.socket sudo systemctl disable rsyslog  ","version":null,"tagName":"h3"},{"title":"sysctl​","type":1,"pageTitle":"Raspberry pi","url":"/Wisdom-Hub/raspberry pi#sysctl","content":"sudo nano /etc/sysctl.conf net.ipv4.tcp_rmem = 4096 87380 629145 net.ipv4.tcp_wmem = 4096 65536 16777216 net.ipv4.tcp_no_metrics_save = 1 net.ipv4.tcp_moderate_rcvbuf = 1 net.ipv4.tcp_timestamps = 0 net.ipv4.tcp_sack = 0 net.ipv4.tcp_window_scaling = 1  ","version":null,"tagName":"h3"},{"title":"Network​","type":1,"pageTitle":"Raspberry pi","url":"/Wisdom-Hub/raspberry pi#network","content":"","version":null,"tagName":"h2"},{"title":"Disable ipv6​","type":1,"pageTitle":"Raspberry pi","url":"/Wisdom-Hub/raspberry pi#disable-ipv6","content":"sudo nano /etc/sysctl.conf net.ipv6.conf.all.disable_ipv6 = 1  ","version":null,"tagName":"h3"},{"title":"Disable WiFi and Bluetooth​","type":1,"pageTitle":"Raspberry pi","url":"/Wisdom-Hub/raspberry pi#disable-wifi-and-bluetooth","content":"sudo systemctl disable wpa_supplicant sudo systemctl disable bluetooth sudo systemctl disable hciuart  sudo rfkill block wifi sudo rfkill block bluetooth  sudo nano /boot/config.txt [all] dtoverlay=disable-wifi dtoverlay=disable-bt  ","version":null,"tagName":"h3"},{"title":"Enable ipv4 forwarding​","type":1,"pageTitle":"Raspberry pi","url":"/Wisdom-Hub/raspberry pi#enable-ipv4-forwarding","content":"sudo nano /etc/sysctl.conf net.ipv4.ip_forward=1 sudo sysctl -p  ","version":null,"tagName":"h3"},{"title":"Find rpi in the Network​","type":1,"pageTitle":"Raspberry pi","url":"/Wisdom-Hub/raspberry pi#find-rpi-in-the-network","content":"sudo nmap -sP 192.168.1.0/24 | grep -B 2 -i raspberry  ","version":null,"tagName":"h3"},{"title":"Static DNS​","type":1,"pageTitle":"Raspberry pi","url":"/Wisdom-Hub/raspberry pi#static-dns","content":"sudo nano /etc/dhcpcd.conf static domain_name_servers=1.1.1.1 8.8.8.8  ","version":null,"tagName":"h3"},{"title":"Make Swap File​","type":1,"pageTitle":"Raspberry pi","url":"/Wisdom-Hub/raspberry pi#make-swap-file","content":"sudo dphys-swapfile swapoff sudo nano /etc/dphys-swapfile CONF_SWAPSIZE=10240 CONF_MAXSWAP=12240 sudo dphys-swapfile setup sudo dphys-swapfile swapon # sudo nano /etc/sysctl.conf # vm.swappiness=10  ","version":null,"tagName":"h2"},{"title":"VNC​","type":1,"pageTitle":"Raspberry pi","url":"/Wisdom-Hub/raspberry pi#vnc","content":"","version":null,"tagName":"h2"},{"title":"Enable VNC​","type":1,"pageTitle":"Raspberry pi","url":"/Wisdom-Hub/raspberry pi#enable-vnc","content":"sudo raspi-config # Enable VNC sudo systemctl restart vncserver-x11-serviced.service sudo systemctl status vncserver-x11-serviced.service sudo nano /root/.vnc/config.d/vncserver-x11 AllowChangeDefaultPrinter=0 Authentication=VncAuth EnableAutoUpdateChecks=0 Encryption=PreferOff sudo vncpasswd -legacy -service  ","version":null,"tagName":"h3"},{"title":"Fix VNC Low Resolution​","type":1,"pageTitle":"Raspberry pi","url":"/Wisdom-Hub/raspberry pi#fix-vnc-low-resolution","content":"sudo nano /boot/config.txt framebuffer_width=1920 framebuffer_height=1080 hdmi_force_hotplug=1 hdmi_group=2 hdmi_mode=16  ","version":null,"tagName":"h3"},{"title":"Docker​","type":1,"pageTitle":"Raspberry pi","url":"/Wisdom-Hub/raspberry pi#docker","content":"curl -sSL https://get.docker.com | sh sudo usermod -aG docker $USER newgrp docker # Dont use sudo anymore docker run hello-world sudo systemctl enable docker.service sudo systemctl enable containerd.service  ","version":null,"tagName":"h2"},{"title":"Fix permission​","type":1,"pageTitle":"Raspberry pi","url":"/Wisdom-Hub/raspberry pi#fix-permission","content":"If you encounter any permission issue sudo chown &quot;$USER&quot;:&quot;$USER&quot; /home/&quot;$USER&quot;/.docker -R sudo chmod g+rwx &quot;$HOME/.docker&quot; -R  ","version":null,"tagName":"h3"},{"title":"Make a custom docker image​","type":1,"pageTitle":"Raspberry pi","url":"/Wisdom-Hub/raspberry pi#make-a-custom-docker-image","content":"docker pull ubuntu docker ps -a docker images docker run --name proxy_container -it ubuntu /bin/bash apt update apt install sudo htop docker commit proxy_container proxy_image docker save proxy_image proxy_image.tar  ","version":null,"tagName":"h3"},{"title":"Ajenti 2​","type":1,"pageTitle":"Raspberry pi","url":"/Wisdom-Hub/raspberry pi#ajenti-2","content":"curl https://raw.githubusercontent.com/ajenti/ajenti/master/scripts/install.sh | sudo bash -s - sudo systemctl enable ajenti.service sudo systemctl start ajenti.service sudo tail -f /var/log/ajenti/ajenti.log  Open http://192.168.1.136:8000 and login with root and password ","version":null,"tagName":"h2"},{"title":"Nekoray​","type":1,"pageTitle":"Raspberry pi","url":"/Wisdom-Hub/raspberry pi#nekoray","content":"# https://github.com/MatsuriDayo/nekoray/blob/main/docs/Build_Linux.md git clone https://github.com/MatsuriDayo/nekoray.git --recursive cd nekoray ./libs/build_deps_all.sh mkdir build cd build cmake -GNinja .. ninja  Install Traffic Widget, Cron, Date And Time and Network plugins ","version":null,"tagName":"h2"},{"title":"NodeJs​","type":1,"pageTitle":"Raspberry pi","url":"/Wisdom-Hub/raspberry pi#nodejs","content":"curl -fsSL https://deb.nodesource.com/setup_18.x | sudo bash - sudo apt-get install -y nodejs  ","version":null,"tagName":"h2"},{"title":"Whisper​","type":1,"pageTitle":"Raspberry pi","url":"/Wisdom-Hub/raspberry pi#whisper","content":"git clone https://github.com/ggerganov/whisper.cpp.git cd whisper.cpp # git checkout reaspberry bash ./models/download-ggml-model.sh base.en bash ./models/download-ggml-model.sh small make make stream make base ./main -f samples/jfk.wav --print-colors # ffmpeg -i input.mp3 -ar 16000 -ac 1 -c:a pcm_s16le output.wav  ","version":null,"tagName":"h2"},{"title":"Install Latest Python​","type":1,"pageTitle":"Raspberry pi","url":"/Wisdom-Hub/raspberry pi#install-latest-python","content":"# https://www.python.org/downloads/ mkdir python3.10 cd python3.10 wget https://www.python.org/ftp/python/3.10.10/Python-3.10.10.tar.xz tar xvf Python-3.10.10.tar.xz rm Python-3.10.10.tar.xz cd Python-3.10.10 ./configure --enable-optimizations --with-ensurepip=install make -j 8 sudo make altinstall sudo make install sudo rm /usr/bin/python sudo rm /usr/bin/python3 sudo ln -s /usr/local/bin/python3.10 /usr/bin/python sudo ln -s /usr/local/bin/python3.10 /usr/bin/python3  ","version":null,"tagName":"h2"},{"title":"AUTOMATIC1111 Stable diffusion webui​","type":1,"pageTitle":"Raspberry pi","url":"/Wisdom-Hub/raspberry pi#automatic1111-stable-diffusion-webui","content":"# bash &lt;(wget -qO- https://raw.githubusercontent.com/AUTOMATIC1111/stable-diffusion-webui/master/webui.sh) git clone https://github.com/AUTOMATIC1111/stable-diffusion-webui.git cd stable-diffusion-webui rm -r venv/ pip cache purge rm -r ~/.cache/pip/ git pull ./webui.sh  ","version":null,"tagName":"h2"},{"title":"chroot​","type":1,"pageTitle":"Raspberry pi","url":"/Wisdom-Hub/raspberry pi#chroot","content":"To fix bootloader, kernel and other issues ","version":null,"tagName":"h2"},{"title":"mount​","type":1,"pageTitle":"Raspberry pi","url":"/Wisdom-Hub/raspberry pi#mount","content":"mkdir /media/rootfs mount /dev/sdb2 /media/rootfs mount /dev/sdb1 /media/rootfs/boot cp /usr/bin/qemu-arm-static /media/rootfs mount -o bind /dev /media/rootfs/dev/ mount -o bind /proc/ /media/rootfs/proc/ mount -o bind /sys/ /media/rootfs/sys/ mount -o bind /dev/pts/ /media/rootfs/dev/pts/ chroot /media/rootfs/ export LANGUAGE=en_US.UTF-8 export LANG=en_US.UTF-8 export LC_ALL=en_US.UTF-8 sudo dpkg-reconfigure locales apt remove apt-listchanges apt update apt full-upgrade apt install --reinstall raspberrypi-bootloader raspberrypi-kernel raspberrypi-kernel-headers  ","version":null,"tagName":"h3"},{"title":"umount​","type":1,"pageTitle":"Raspberry pi","url":"/Wisdom-Hub/raspberry pi#umount","content":"umount /media/rootfs/dev/pts umount /media/rootfs/proc/ umount /media/rootfs/sys/ umount /media/rootfs/boot umount /media/rootfs/dev/ umount /media/rootfs/  ","version":null,"tagName":"h3"},{"title":"Vscode cheat sheet","type":0,"sectionRef":"#","url":"/Wisdom-Hub/vscode","content":"","keywords":"","version":null},{"title":"Vscode​","type":1,"pageTitle":"Vscode cheat sheet","url":"/Wisdom-Hub/vscode#vscode","content":"Palette CTRL + P Command Palette CTRL + SHIFT + P Git CloneMerge Type Checking // @ts-nocheck // @ts-check Built-in Terminal CTRL + ` Select Javascript Debug Terminal as Default Profile Extensions CTRL + SHIFT + X Closing built-in Terminal CTRL + D Find And Replace CTRL + F, CTRL + H Find And Replace Globally CTRL + SHIFT + F, CTRL + SHIFT + H Side By Side Editing CTRL + \\ Fullscreen F11 Markdown Preview CTRL + SHIFT + V Split Markdown Preview ALT + O Sidebar Toggle CTRL + B Zoom in/out the whole vscode CTRL + and CTRL - Font size CTRL + Mouse wheel Fast Scrolling ALT + Mouse wheel Folding Level 1 Alt+1  ","version":null,"tagName":"h2"},{"title":"Extensions​","type":1,"pageTitle":"Vscode cheat sheet","url":"/Wisdom-Hub/vscode#extensions","content":"Disable all the extensions by default. Use enable for workspace option in projects. bungcip.better-tomlstreetsidesoftware.code-spell-checkerdbaeumer.vscode-eslintGitHub.copilotyzhang.markdown-all-in-one Run command Create Table of Contents to insert a new table of contents. davidanson.vscode-markdownlintemmanuelbeziat.vscode-great-iconsms-vscode-remote.remote-containersms-vscode-remote.remote-sshms-vscode-remote.remote-ssh-editrangav.vscode-thunder-clientJuanBlanco.solidity ","version":null,"tagName":"h2"},{"title":"Editor Shortcuts​","type":1,"pageTitle":"Vscode cheat sheet","url":"/Wisdom-Hub/vscode#editor-shortcuts","content":"CTRL + .: Suggest Quick FixCTRL + C: Copy an entire line (when no text is selected)CTRL + SHIFT + K: Delete an entire line (when no text is selected)CTRL + X: Cut an entire line (when no text is selected)ALT + ARROWS: Move an entire lineCTRL + L: Select the current lineCTRL + SPACE: Invoke IntelliSenseHold ALT and select: Multiple selections (multi-cursor)CTRL + SHIFT + [ , ]: Code FoldingCTRL + SHIFT + R: All RefactoringF2: Rename RefactoringF8: Navigating on Errors and WarningsF12: Go to Definition  ","version":null,"tagName":"h2"},{"title":"Keybindings​","type":1,"pageTitle":"Vscode cheat sheet","url":"/Wisdom-Hub/vscode#keybindings","content":"[ { &quot;key&quot;: &quot;ctrl+alt+;&quot;, &quot;command&quot;: &quot;workbench.action.closeWindow&quot; }, { &quot;key&quot;: &quot;ctrl+shift+w&quot;, &quot;command&quot;: &quot;-workbench.action.closeWindow&quot; }, { &quot;key&quot;: &quot;ctrl+alt+'&quot;, &quot;command&quot;: &quot;workbench.action.closeActiveEditor&quot; }, { &quot;key&quot;: &quot;ctrl+w&quot;, &quot;command&quot;: &quot;-workbench.action.closeActiveEditor&quot; }, { &quot;key&quot;: &quot;ctrl+alt+\\\\&quot;, &quot;command&quot;: &quot;workbench.action.closeGroup&quot;, &quot;when&quot;: &quot;activeEditorGroupEmpty &amp;&amp; multipleEditorGroups&quot; }, { &quot;key&quot;: &quot;ctrl+w&quot;, &quot;command&quot;: &quot;-workbench.action.closeGroup&quot;, &quot;when&quot;: &quot;activeEditorGroupEmpty &amp;&amp; multipleEditorGroups&quot; }, { &quot;key&quot;: &quot;alt+o&quot;, &quot;command&quot;: &quot;markdown.showPreviewToSide&quot;, &quot;when&quot;: &quot;!notebookEditorFocused &amp;&amp; editorLangId == 'markdown'&quot; }, { &quot;key&quot;: &quot;ctrl+k v&quot;, &quot;command&quot;: &quot;-markdown.showPreviewToSide&quot;, &quot;when&quot;: &quot;!notebookEditorFocused &amp;&amp; editorLangId == 'markdown'&quot; }, { &quot;key&quot;: &quot;ctrl+alt+tab&quot;, &quot;command&quot;: &quot;markdown.extension.onTabKey&quot;, &quot;when&quot;: &quot;editorTextFocus &amp;&amp; !editorReadonly &amp;&amp; !editorTabMovesFocus &amp;&amp; !hasOtherSuggestions &amp;&amp; !hasSnippetCompletions &amp;&amp; !inSnippetMode &amp;&amp; !suggestWidgetVisible &amp;&amp; editorLangId == 'markdown'&quot; }, { &quot;key&quot;: &quot;tab&quot;, &quot;command&quot;: &quot;-markdown.extension.onTabKey&quot;, &quot;when&quot;: &quot;editorTextFocus &amp;&amp; !editorReadonly &amp;&amp; !editorTabMovesFocus &amp;&amp; !hasOtherSuggestions &amp;&amp; !hasSnippetCompletions &amp;&amp; !inSnippetMode &amp;&amp; !suggestWidgetVisible &amp;&amp; editorLangId == 'markdown'&quot; }, { &quot;key&quot;: &quot;ctrl+t ctrl+r&quot;, &quot;command&quot;: &quot;workbench.action.tasks.build&quot; }, { &quot;key&quot;: &quot;ctrl+shift+b&quot;, &quot;command&quot;: &quot;-workbench.action.tasks.build&quot; }, { &quot;key&quot;: &quot;ctrl+shift+b&quot;, &quot;command&quot;: &quot;markdown.extension.editing.toggleBold&quot;, &quot;when&quot;: &quot;editorTextFocus &amp;&amp; !editorReadonly &amp;&amp; editorLangId == 'markdown'&quot; }, { &quot;key&quot;: &quot;ctrl+b&quot;, &quot;command&quot;: &quot;-markdown.extension.editing.toggleBold&quot;, &quot;when&quot;: &quot;editorTextFocus &amp;&amp; !editorReadonly &amp;&amp; editorLangId == 'markdown'&quot; }, { &quot;key&quot;: &quot;alt+1&quot;, &quot;command&quot;: &quot;-workbench.action.openEditorAtIndex1&quot; }, { &quot;key&quot;: &quot;alt+1&quot;, &quot;command&quot;: &quot;editor.foldLevel1&quot;, &quot;when&quot;: &quot;editorTextFocus &amp;&amp; foldingEnabled&quot; }, { &quot;key&quot;: &quot;ctrl+k ctrl+1&quot;, &quot;command&quot;: &quot;-editor.foldLevel1&quot;, &quot;when&quot;: &quot;editorTextFocus &amp;&amp; foldingEnabled&quot; } ]  ","version":null,"tagName":"h2"},{"title":"Git​","type":1,"pageTitle":"Vscode cheat sheet","url":"/Wisdom-Hub/vscode#git","content":"","version":null,"tagName":"h2"},{"title":"Vscode for merge and diff​","type":1,"pageTitle":"Vscode cheat sheet","url":"/Wisdom-Hub/vscode#vscode-for-merge-and-diff","content":"git config --global merge.tool vscode git config --global mergetool.vscode.cmd 'code --wait $MERGED' git config --global diff.tool vscode git config --global difftool.vscode.cmd 'code --wait --diff $LOCAL $REMOTE' git config --global core.autocrlf true  ","version":null,"tagName":"h3"},{"title":"Git Configs​","type":1,"pageTitle":"Vscode cheat sheet","url":"/Wisdom-Hub/vscode#git-configs","content":"git config user.email m.gh@linuxmail.org git config user.name mlibre git config --global user.email m.gh@linuxmail.org git config --global user.name mlibre git config --global credential.helper store git config --global user.name &quot;mlibre&quot; git config --global user.email &quot;m.gh@linuxmail.org&quot; git config --global core.autocrlf input git config --global core.fileMode false git config core.autocrlf input git config core.fileMode false git add --renormalize .  ","version":null,"tagName":"h3"},{"title":"Github Actions​","type":1,"pageTitle":"Vscode cheat sheet","url":"/Wisdom-Hub/vscode#github-actions","content":"Publish A Package On the NPM Registry​ Create an NPM token: https://www.npmjs.com/settings/mlibre/tokens/Create a secret variable named NPM_TOKEN from the Github repository settings: https://github.com/mlibre/Ethereum-Smart-Contract-Deployer/settings/secrets/actions/newCreate a yml file in the repository: .github/workflows/npm.yml name: Publish on NPM registry on: push: branches: ['master'] jobs: build: runs-on: ubuntu-latest steps: - uses: actions/checkout@v2 - uses: actions/setup-node@v2 with: node-version: 14.x registry-url: https://registry.npmjs.org/ - run: npm publish --access public env: NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}  Bundling and Committing a Node Module using Browserify​ Create a yml file in the repository: .github/workflows/browserify.yml name: Browserify Bundle on: push: branches: ['master'] jobs: build: runs-on: ubuntu-latest steps: - uses: actions/checkout@v2 - uses: actions/setup-node@v2 with: node-version: 14.x registry-url: https://registry.npmjs.org/ # - run: npm install - run: npm install - run: npm install -g browserify - run: browserify -r ./main.js:EthereumTokens -o ./web/bundle.js - run: | git config --global user.name 'mlibre' git config --global user.email 'm.gh@linuxmail.org' git add web git commit -am &quot;Automated bundle&quot; git push  ","version":null,"tagName":"h3"},{"title":"Cleaning NPM Cache​","type":1,"pageTitle":"Vscode cheat sheet","url":"/Wisdom-Hub/vscode#cleaning-npm-cache","content":"rm -r node_modules/ npm cache clean --force sudo npm cache clean --force -g sudo pacman -R nodejs-lts-fermium npm # sudo pacman -R nodejs npm sudo rm -r ~/.npm rm -r ~/.node-gyp/ rm -r .cache/node-gyp/ sudo rm -r /usr/local/lib/node_modules/ sudo rm -r /usr/lib/node_modules/ sudo pacman -S nodejs-lts-fermium npm # sudo pacman -S nodejs npm # Restart the OS  ","version":null,"tagName":"h2"},{"title":"Settings JSON​","type":1,"pageTitle":"Vscode cheat sheet","url":"/Wisdom-Hub/vscode#settings-json","content":"{ &quot;breadcrumbs.enabled&quot;: false, &quot;diffEditor.ignoreTrimWhitespace&quot;: false, &quot;chat.commandCenter.enabled&quot;: false, &quot;editor.accessibilitySupport&quot;: &quot;off&quot;, &quot;editor.copyWithSyntaxHighlighting&quot;: false, &quot;editor.cursorSmoothCaretAnimation&quot;: &quot;on&quot;, &quot;editor.fontFamily&quot;: &quot;'Droid Sans Mono', 'monospace', monospace, 'Droid Sans Fallback', 'Fira Code Retina'&quot;, &quot;editor.formatOnPaste&quot;: true, &quot;editor.formatOnSave&quot;: true, &quot;editor.inlineSuggest.enabled&quot;: true, &quot;editor.inlineSuggest.suppressSuggestions&quot;: true, &quot;editor.insertSpaces&quot;: false, &quot;editor.minimap.enabled&quot;: false, &quot;editor.mouseWheelZoom&quot;: true, &quot;editor.parameterHints.enabled&quot;: true, &quot;editor.smoothScrolling&quot;: true, &quot;editor.stickyScroll.enabled&quot;: true, &quot;editor.tabSize&quot;: 3, &quot;editor.unicodeHighlight.ambiguousCharacters&quot;: false, &quot;editor.codeActionsOnSave&quot;: { // &quot;source.organizeImports&quot;: &quot;always&quot;, &quot;source.fixAll&quot;: &quot;always&quot; }, &quot;editor.defaultFormatter&quot;: &quot;dbaeumer.vscode-eslint&quot;, &quot;[jsonc]&quot;: { &quot;editor.quickSuggestions&quot;: { &quot;strings&quot;: true }, &quot;editor.defaultFormatter&quot;: &quot;vscode.json-language-features&quot;, }, &quot;[markdown]&quot;: { &quot;editor.defaultFormatter&quot;: &quot;yzhang.markdown-all-in-one&quot; }, &quot;[json]&quot;: { &quot;editor.defaultFormatter&quot;: &quot;vscode.json-language-features&quot; }, &quot;[javascript]&quot;: { &quot;editor.defaultFormatter&quot;: &quot;dbaeumer.vscode-eslint&quot;, }, &quot;[typescript]&quot;: { &quot;editor.defaultFormatter&quot;: &quot;dbaeumer.vscode-eslint&quot; }, &quot;[html]&quot;: { &quot;editor.defaultFormatter&quot;: &quot;vscode.html-language-features&quot; }, &quot;eslint.codeAction.showDocumentation&quot;: { &quot;enable&quot;: true }, // &quot;typescript.inlayHints.parameterNames.enabled&quot;: &quot;all&quot;, // &quot;typescript.inlayHints.variableTypes.enabled&quot;: true, &quot;typescript.referencesCodeLens.enabled&quot;: false, // &quot;eslint.codeActionsOnSave.rules&quot;: null, &quot;eslint.debug&quot;: true, &quot;eslint.enable&quot;: true, &quot;eslint.useFlatConfig&quot;: true, &quot;eslint.format.enable&quot;: true, &quot;explorer.autoReveal&quot;: false, &quot;explorer.compactFolders&quot;: false, &quot;explorer.confirmDelete&quot;: false, &quot;explorer.confirmDragAndDrop&quot;: false, &quot;git.autofetch&quot;: true, &quot;git.confirmSync&quot;: false, &quot;git.enableSmartCommit&quot;: true, &quot;git.ignoreRebaseWarning&quot;: true, &quot;git.pullTags&quot;: false, &quot;http.proxyStrictSSL&quot;: false, &quot;javascript.updateImportsOnFileMove.enabled&quot;: &quot;always&quot;, &quot;javascript.validate.enable&quot;: false, &quot;markdownlint.config&quot;: { &quot;single-h1&quot;: false }, &quot;search.exclude&quot;: { &quot;**/docs/*/**&quot;: true, &quot;**/logs/**&quot;: true, &quot;**/logs/*/**&quot;: true, &quot;**/node_modules/*/**&quot;: true, &quot;**/.git&quot;: true }, &quot;files.exclude&quot;: { &quot;**/*.js&quot;: { &quot;when&quot;: &quot;$(basename).ts&quot; }, &quot;**/**.js&quot;: { &quot;when&quot;: &quot;$(basename).tsx&quot; } }, &quot;security.workspace.trust.untrustedFiles&quot;: &quot;open&quot;, &quot;telemetry.telemetryLevel&quot;: &quot;off&quot;, &quot;terminal.explorerKind&quot;: &quot;integrated&quot;, &quot;terminal.integrated.defaultProfile.linux&quot;: &quot;JavaScript Debug Terminal&quot;, &quot;terminal.integrated.persistentSessionScrollback&quot;: 1000, &quot;terminal.integrated.scrollback&quot;: 10000, &quot;terminal.integrated.smoothScrolling&quot;: true, &quot;terminal.integrated.showExitAlert&quot;: false, &quot;update.mode&quot;: &quot;none&quot;, &quot;window.commandCenter&quot;: false, &quot;window.zoomLevel&quot;: 1.3, &quot;window.dialogStyle&quot;: &quot;custom&quot;, &quot;window.titleBarStyle&quot;: &quot;custom&quot;, &quot;workbench.iconTheme&quot;: &quot;vscode-great-icons&quot;, &quot;workbench.layoutControl.enabled&quot;: false, &quot;workbench.layoutControl.type&quot;: &quot;menu&quot;, &quot;workbench.list.smoothScrolling&quot;: true, &quot;workbench.activityBar.location&quot;: &quot;bottom&quot;, &quot;window.customTitleBarVisibility&quot;: &quot;auto&quot;, &quot;extensions.autoCheckUpdates&quot;: false, &quot;extensions.autoUpdate&quot;: &quot;onlyEnabledExtensions&quot;, &quot;markdown.extension.tableFormatter.normalizeIndentation&quot;: true, &quot;markdown.extension.toc.unorderedList.marker&quot;: &quot;*&quot;, &quot;markdown.extension.toc.updateOnSave&quot;: false, &quot;markdown.extension.toc.levels&quot;: &quot;2..6&quot;, &quot;markdown.extension.completion.respectVscodeSearchExclude&quot;: true, &quot;markdown.extension.theming.decoration.renderCodeSpan&quot;: false, &quot;cody.telemetry.level&quot;: &quot;off&quot;, &quot;terminal.integrated.enableMultiLinePasteWarning&quot;: &quot;never&quot;, &quot;explorer.confirmPasteNative&quot;: false, &quot;git.openRepositoryInParentFolders&quot;: &quot;never&quot;, &quot;editor.cursorBlinking&quot;: &quot;phase&quot;, &quot;terminal.integrated.cursorBlinking&quot;: true }  ","version":null,"tagName":"h2"},{"title":"Eslint Configuration​","type":1,"pageTitle":"Vscode cheat sheet","url":"/Wisdom-Hub/vscode#eslint-configuration","content":"","version":null,"tagName":"h2"},{"title":"Nodejs​","type":1,"pageTitle":"Vscode cheat sheet","url":"/Wisdom-Hub/vscode#nodejs","content":"// eslint.config.js const globals = require(&quot;globals&quot;); const js = require(&quot;@eslint/js&quot;); module.exports = [ { ...js.configs.recommended, languageOptions: { globals: { ...globals.node }, ecmaVersion: &quot;latest&quot;, sourceType: &quot;commonjs&quot; }, rules: { semi: [&quot;error&quot;, &quot;always&quot;], &quot;no-trailing-spaces&quot;: &quot;error&quot;, &quot;linebreak-style&quot;: [&quot;error&quot;, &quot;unix&quot;], &quot;quotes&quot;: [&quot;error&quot;, &quot;double&quot;], &quot;one-var&quot;: [&quot;error&quot;, &quot;never&quot;], &quot;brace-style&quot;: [&quot;error&quot;, &quot;allman&quot;, {allowSingleLine: true}], &quot;space-before-blocks&quot;: &quot;warn&quot;, &quot;func-call-spacing&quot;: &quot;error&quot;, &quot;space-before-function-paren&quot;: &quot;error&quot;, &quot;space-in-parens&quot;: [&quot;error&quot;, &quot;always&quot;, {exceptions: [&quot;{}&quot;]}], &quot;keyword-spacing&quot;: &quot;error&quot;, &quot;comma-spacing&quot;: &quot;error&quot;, &quot;space-unary-ops&quot;: &quot;error&quot;, &quot;block-spacing&quot;: &quot;error&quot;, &quot;arrow-spacing&quot;: &quot;error&quot;, &quot;key-spacing&quot;: &quot;error&quot;, &quot;comma-style&quot;: &quot;error&quot;, &quot;space-infix-ops&quot;: &quot;error&quot;, &quot;array-bracket-spacing&quot;: &quot;error&quot;, &quot;object-curly-spacing&quot;: [&quot;error&quot;, &quot;always&quot;], &quot;no-multi-spaces&quot;: &quot;error&quot;, &quot;operator-linebreak&quot;: &quot;error&quot;, &quot;function-paren-newline&quot;: &quot;warn&quot;, &quot;arrow-body-style&quot;: [&quot;error&quot;, &quot;always&quot;], &quot;no-template-curly-in-string&quot;: &quot;error&quot;, &quot;prefer-const&quot;: [&quot;error&quot;, {destructuring: &quot;any&quot;, ignoreReadBeforeAssign: false}], &quot;no-new-object&quot;: &quot;error&quot;, &quot;no-extra-parens&quot;: [&quot;error&quot;, &quot;all&quot;, {conditionalAssign: false}], &quot;no-empty-function&quot;: &quot;error&quot;, &quot;no-empty&quot;: [&quot;warn&quot;, {allowEmptyCatch: true}], &quot;no-eq-null&quot;: &quot;error&quot;, &quot;no-extra-bind&quot;: &quot;error&quot;, &quot;no-self-compare&quot;: &quot;error&quot;, &quot;no-useless-call&quot;: &quot;error&quot;, &quot;no-undefined&quot;: &quot;error&quot;, &quot;no-undef&quot;: &quot;warn&quot;, &quot;no-array-constructor&quot;: &quot;error&quot;, &quot;prefer-destructuring&quot;: [&quot;error&quot;, { VariableDeclarator: {array: true, object: true}, AssignmentExpression: {array: false, object: false}}, {enforceForRenamedProperties: false } ], &quot;object-shorthand&quot;: &quot;warn&quot;, &quot;prefer-spread&quot;: &quot;warn&quot;, &quot;prefer-template&quot;: &quot;warn&quot;, &quot;no-loop-func&quot;: &quot;warn&quot;, &quot;prefer-rest-params&quot;: &quot;warn&quot;, &quot;no-new-func&quot;: &quot;warn&quot;, &quot;no-unneeded-ternary&quot;: &quot;warn&quot;, &quot;no-process-exit&quot;: &quot;off&quot;, &quot;require-await&quot;: &quot;warn&quot;, &quot;indent&quot;: [&quot;error&quot;, &quot;tab&quot;, {MemberExpression: 0}], &quot;no-tabs&quot;: 0, }, }, ];  ","version":null,"tagName":"h3"},{"title":"Typescript​","type":1,"pageTitle":"Vscode cheat sheet","url":"/Wisdom-Hub/vscode#typescript","content":"// eslint.config.js /* eslint-disable @typescript-eslint/no-unsafe-member-access */ /* eslint-disable @typescript-eslint/no-unsafe-assignment */ // @ts-check import eslint from &quot;@eslint/js&quot;; import globals from &quot;globals&quot;; import tseslint from &quot;typescript-eslint&quot;; import stylistic from &quot;@stylistic/eslint-plugin&quot;; /** @type {import('@typescript-eslint/utils').TSESLint.FlatConfig.ConfigFile} */ export default [ eslint.configs.recommended, ...tseslint.configs.strict, ...tseslint.configs.stylisticTypeChecked, { languageOptions: { globals: globals.node, parserOptions: { project: true, tsconfigRootDir: import.meta.dirname } } }, { plugins: { stylistic }, rules: { &quot;stylistic/indent&quot;: [ &quot;error&quot;, &quot;tab&quot;, { &quot;MemberExpression&quot;: 0 } ], &quot;stylistic/no-tabs&quot;: 0, &quot;stylistic/brace-style&quot;: [ &quot;error&quot;, &quot;allman&quot; ], &quot;stylistic/comma-style&quot;: [ &quot;error&quot; ], &quot;stylistic/array-bracket-spacing&quot;: [ &quot;error&quot;, &quot;always&quot; ], &quot;stylistic/space-before-blocks&quot;: [ &quot;warn&quot; ], &quot;stylistic/comma-spacing&quot;: [ &quot;error&quot; ], &quot;stylistic/function-call-spacing&quot;: [ &quot;error&quot;, &quot;never&quot; ], &quot;stylistic/space-before-function-paren&quot;: [ &quot;error&quot;, &quot;always&quot; ], &quot;stylistic/space-in-parens&quot;: [ &quot;error&quot;, &quot;always&quot;, { exceptions: [ &quot;{}&quot; , &quot;empty&quot; ] } ], &quot;stylistic/keyword-spacing&quot;: [ &quot;error&quot; ], &quot;stylistic/space-unary-ops&quot;: [ &quot;error&quot; ], &quot;stylistic/key-spacing&quot;: [ &quot;error&quot; ], &quot;stylistic/arrow-parens&quot;: [ &quot;error&quot;, &quot;always&quot; ], &quot;stylistic/function-paren-newline&quot;: [ &quot;warn&quot; ], &quot;stylistic/linebreak-style&quot;: [ &quot;error&quot;, &quot;unix&quot; ], &quot;stylistic/quotes&quot;: [ &quot;error&quot;, &quot;double&quot; ], &quot;stylistic/semi&quot;: &quot;error&quot;, &quot;stylistic/no-trailing-spaces&quot;: &quot;error&quot;, &quot;stylistic/block-spacing&quot;: [ &quot;error&quot; ], &quot;stylistic/arrow-spacing&quot;: [ &quot;error&quot; ], &quot;stylistic/space-infix-ops&quot;: [ &quot;error&quot; ], &quot;stylistic/object-curly-spacing&quot;: [ &quot;error&quot;, &quot;always&quot; ], &quot;stylistic/no-multi-spaces&quot;: [ &quot;error&quot; ], &quot;stylistic/operator-linebreak&quot;: [ &quot;error&quot;, &quot;after&quot; ], &quot;stylistic/no-extra-parens&quot;: [ &quot;error&quot;, &quot;all&quot;, { &quot;conditionalAssign&quot;: false } ], &quot;stylistic/comma-dangle&quot;: [ &quot;error&quot; ] } }, { rules: { &quot;@typescript-eslint/no-this-alias&quot;: [ &quot;error&quot;, { &quot;allowedNames&quot;: [ &quot;self&quot; ] } ], &quot;@typescript-eslint/prefer-nullish-coalescing&quot;: &quot;off&quot;, &quot;curly&quot;: [ &quot;error&quot;, &quot;multi-line&quot; ], &quot;one-var&quot;: [ &quot;error&quot;, &quot;never&quot; ], &quot;arrow-body-style&quot;: [ &quot;error&quot;, &quot;always&quot; ], &quot;no-template-curly-in-string&quot;: [ &quot;error&quot; ], &quot;prefer-const&quot;: [ &quot;error&quot;, { &quot;destructuring&quot;: &quot;any&quot;, &quot;ignoreReadBeforeAssign&quot;: false } ], &quot;no-new-object&quot;: [ &quot;error&quot; ], &quot;no-empty-function&quot;: [ &quot;error&quot; ], &quot;no-empty&quot;: [ &quot;warn&quot;, { &quot;allowEmptyCatch&quot;: true } ], &quot;no-eq-null&quot;: [ &quot;error&quot; ], &quot;no-extra-bind&quot;: [ &quot;error&quot; ], &quot;no-self-compare&quot;: [ &quot;error&quot; ], &quot;no-useless-call&quot;: [ &quot;error&quot; ], &quot;no-array-constructor&quot;: [ &quot;error&quot; ], &quot;prefer-destructuring&quot;: [ &quot;error&quot;, { &quot;VariableDeclarator&quot;: { &quot;array&quot;: true, &quot;object&quot;: true }, &quot;AssignmentExpression&quot;: { &quot;array&quot;: false, &quot;object&quot;: false } }, { &quot;enforceForRenamedProperties&quot;: false } ], &quot;object-shorthand&quot;: [ &quot;warn&quot; ], &quot;prefer-spread&quot;: [ &quot;warn&quot; ], &quot;prefer-template&quot;: [ &quot;warn&quot; ], &quot;no-loop-func&quot;: [ &quot;warn&quot; ], &quot;prefer-rest-params&quot;: [ &quot;warn&quot; ], &quot;no-new-func&quot;: [ &quot;warn&quot; ], &quot;no-unneeded-ternary&quot;: [ &quot;warn&quot; ], &quot;no-process-exit&quot;: &quot;off&quot;, &quot;require-await&quot;: &quot;warn&quot; } }, { files: [ &quot;**/*.js&quot; ], extends: [ tseslint.configs.disableTypeChecked ] } ];  ","version":null,"tagName":"h3"},{"title":"TSConfig​","type":1,"pageTitle":"Vscode cheat sheet","url":"/Wisdom-Hub/vscode#tsconfig","content":"{ &quot;compilerOptions&quot;: { &quot;target&quot;: &quot;ESNext&quot;, &quot;module&quot;: &quot;NodeNext&quot;, &quot;moduleResolution&quot;: &quot;NodeNext&quot;, // &quot;module&quot;: &quot;commonjs&quot;, // &quot;module&quot;: &quot;ESNext&quot;, // &quot;moduleResolution&quot;: &quot;node&quot;, &quot;rootDir&quot;: &quot;./src&quot;, &quot;outDir&quot;: &quot;./dist&quot;, &quot;esModuleInterop&quot;: true, &quot;importHelpers&quot;: true, &quot;forceConsistentCasingInFileNames&quot;: true, &quot;strict&quot;: true, &quot;skipLibCheck&quot;: true, &quot;sourceMap&quot;: true, &quot;useUnknownInCatchVariables&quot;: true, &quot;noUnusedLocals&quot;: true // &quot;isolatedModules&quot;: true }, // &quot;include&quot;: [ // &quot;**/*.ts&quot;, // &quot;**/*.tsx&quot;, // &quot;src/**/*&quot; // ] }  ","version":null,"tagName":"h2"}]
"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4511],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>g});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(t),u=a,g=m["".concat(s,".").concat(u)]||m[u]||d[u]||i;return t?r.createElement(g,o(o({ref:n},p),{},{components:t})):r.createElement(g,o({ref:n},p))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=u;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[m]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},2880:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=t(7462),a=(t(7294),t(3905));const i={sidebar_position:6,title:"Vscode",tags:["vscode"]},o="Vscode cheat sheet",l={unversionedId:"vscode",id:"vscode",title:"Vscode",description:"A cheat sheet for Vscode.",source:"@site/docs/vscode.md",sourceDirName:".",slug:"/vscode",permalink:"/Wisdom-Hub/vscode",draft:!1,tags:[{label:"vscode",permalink:"/Wisdom-Hub/tags/vscode"}],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,title:"Vscode",tags:["vscode"]},sidebar:"tutorialSidebar",previous:{title:"vllm",permalink:"/Wisdom-Hub/ai/vllm"},next:{title:"Raspberry pi",permalink:"/Wisdom-Hub/raspberry pi"}},s={},c=[{value:"Vscode",id:"vscode",level:2},{value:"Extensions",id:"extensions",level:2},{value:"Editor Shortcuts",id:"editor-shortcuts",level:2},{value:"Keybindings",id:"keybindings",level:2},{value:"Git",id:"git",level:2},{value:"Vscode for merge and diff",id:"vscode-for-merge-and-diff",level:3},{value:"Git Configs",id:"git-configs",level:3},{value:"Github Actions",id:"github-actions",level:3},{value:"Publish A Package On the NPM Registry",id:"publish-a-package-on-the-npm-registry",level:4},{value:"Bundling and Committing a Node Module using Browserify",id:"bundling-and-committing-a-node-module-using-browserify",level:4},{value:"Cleaning NPM Cache",id:"cleaning-npm-cache",level:2},{value:"Settings JSON",id:"settings-json",level:2},{value:"Eslint Configuration",id:"eslint-configuration",level:2},{value:"Nodejs",id:"nodejs",level:3},{value:"Typescript",id:"typescript",level:3},{value:"TSConfig",id:"tsconfig",level:2}],p={toc:c},m="wrapper";function d(e){let{components:n,...t}=e;return(0,a.kt)(m,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"vscode-cheat-sheet"},"Vscode cheat sheet"),(0,a.kt)("p",null,"A cheat sheet for Vscode."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#vscode"},"Vscode")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#extensions"},"Extensions")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#editor-shortcuts"},"Editor Shortcuts")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#keybindings"},"Keybindings")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#git"},"Git"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#vscode-for-merge-and-diff"},"Vscode for merge and diff")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#git-configs"},"Git Configs")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#github-actions"},"Github Actions"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#publish-a-package-on-the-npm-registry"},"Publish A Package On the NPM Registry")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#bundling-and-committing-a-node-module-using-browserify"},"Bundling and Committing a Node Module using Browserify")))))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#cleaning-npm-cache"},"Cleaning NPM Cache")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#settings-json"},"Settings JSON")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#eslint-configuration"},"Eslint Configuration"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#nodejs"},"Nodejs")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#typescript"},"Typescript")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#tsconfig"},"TSConfig"))),(0,a.kt)("h2",{id:"vscode"},"Vscode"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"Palette"),"  ",(0,a.kt)("strong",{parentName:"p"},"CTRL + P"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"Command Palette"),"  ",(0,a.kt)("strong",{parentName:"p"},"CTRL + SHIFT + P")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Git Clone")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Merge")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"Type Checking")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"// @ts-nocheck\n// @ts-check\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Built-in ",(0,a.kt)("inlineCode",{parentName:"p"},"Terminal"),"  ",(0,a.kt)("strong",{parentName:"p"},"CTRL + `")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Select ",(0,a.kt)("inlineCode",{parentName:"li"},"Javascript Debug Terminal")," as ",(0,a.kt)("inlineCode",{parentName:"li"},"Default Profile")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Extensions ",(0,a.kt)("strong",{parentName:"p"},"CTRL + SHIFT + X"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Closing built-in ",(0,a.kt)("inlineCode",{parentName:"p"},"Terminal"),"  ",(0,a.kt)("strong",{parentName:"p"},"CTRL + D"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Find And ",(0,a.kt)("inlineCode",{parentName:"p"},"Replace"),"  ",(0,a.kt)("strong",{parentName:"p"},"CTRL + F"),", ",(0,a.kt)("strong",{parentName:"p"},"CTRL + H"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Find And ",(0,a.kt)("inlineCode",{parentName:"p"},"Replace Globally"),"  ",(0,a.kt)("strong",{parentName:"p"},"CTRL + SHIFT + F"),", ",(0,a.kt)("strong",{parentName:"p"},"CTRL + SHIFT + H"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Side By Side Editing  ",(0,a.kt)("strong",{parentName:"p"},"CTRL + ","\\"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Fullscreen  ",(0,a.kt)("strong",{parentName:"p"},"F11"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Markdown Preview ",(0,a.kt)("strong",{parentName:"p"},"CTRL + SHIFT + V"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Split Markdown Preview ",(0,a.kt)("strong",{parentName:"p"},"ALT + O"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Sidebar Toggle ",(0,a.kt)("strong",{parentName:"p"},"CTRL + B"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Zoom in/out the whole vscode ",(0,a.kt)("strong",{parentName:"p"},"CTRL + and CTRL -"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Font size ",(0,a.kt)("strong",{parentName:"p"},"CTRL + Mouse wheel"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Fast Scrolling ",(0,a.kt)("strong",{parentName:"p"},"ALT + Mouse wheel"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Folding Level 1 ",(0,a.kt)("strong",{parentName:"p"},"Alt+1")))),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"extensions"},"Extensions"),(0,a.kt)("p",null,"Disable all the extensions by default. Use enable for workspace option in projects."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"bungcip.better-toml"),(0,a.kt)("li",{parentName:"ul"},"streetsidesoftware.code-spell-checker"),(0,a.kt)("li",{parentName:"ul"},"dbaeumer.vscode-eslint"),(0,a.kt)("li",{parentName:"ul"},"GitHub.copilot"),(0,a.kt)("li",{parentName:"ul"},"yzhang.markdown-all-in-one",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Run command ",(0,a.kt)("inlineCode",{parentName:"li"},"Create Table of Contents")," to insert a new table of contents."))),(0,a.kt)("li",{parentName:"ul"},"davidanson.vscode-markdownlint"),(0,a.kt)("li",{parentName:"ul"},"emmanuelbeziat.vscode-great-icons"),(0,a.kt)("li",{parentName:"ul"},"ms-vscode-remote.remote-containers"),(0,a.kt)("li",{parentName:"ul"},"ms-vscode-remote.remote-ssh"),(0,a.kt)("li",{parentName:"ul"},"ms-vscode-remote.remote-ssh-edit"),(0,a.kt)("li",{parentName:"ul"},"rangav.vscode-thunder-client"),(0,a.kt)("li",{parentName:"ul"},"JuanBlanco.solidity")),(0,a.kt)("h2",{id:"editor-shortcuts"},"Editor Shortcuts"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"CTRL + ."),": Suggest ",(0,a.kt)("inlineCode",{parentName:"li"},"Quick Fix")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"CTRL + C"),": ",(0,a.kt)("inlineCode",{parentName:"li"},"Copy")," an entire line (when no text is selected)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"CTRL + SHIFT + K"),": ",(0,a.kt)("inlineCode",{parentName:"li"},"Delete")," an entire line (when no text is selected)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"CTRL + X"),": ",(0,a.kt)("inlineCode",{parentName:"li"},"Cut")," an entire line (when no text is selected)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"ALT + ARROWS"),": ",(0,a.kt)("inlineCode",{parentName:"li"},"Move")," an entire line"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"CTRL + L"),": ",(0,a.kt)("inlineCode",{parentName:"li"},"Select")," the current line"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"CTRL + SPACE"),": Invoke IntelliSense"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Hold ALT and select"),": Multiple selections (multi-cursor)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"CTRL + SHIFT + ","[ , ]"),": Code ",(0,a.kt)("inlineCode",{parentName:"li"},"Folding")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"CTRL + SHIFT + R"),": All ",(0,a.kt)("inlineCode",{parentName:"li"},"Refactoring")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"F2"),": ",(0,a.kt)("inlineCode",{parentName:"li"},"Rename")," Refactoring"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"F8"),": ",(0,a.kt)("inlineCode",{parentName:"li"},"Navigating")," on Errors and Warnings"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"F12"),": Go to Definition")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"keybindings"},"Keybindings"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'[\n {\n  "key": "ctrl+alt+;",\n  "command": "workbench.action.closeWindow"\n },\n {\n  "key": "ctrl+shift+w",\n  "command": "-workbench.action.closeWindow"\n },\n {\n  "key": "ctrl+alt+\'",\n  "command": "workbench.action.closeActiveEditor"\n },\n {\n  "key": "ctrl+w",\n  "command": "-workbench.action.closeActiveEditor"\n },\n {\n  "key": "ctrl+alt+\\\\",\n  "command": "workbench.action.closeGroup",\n  "when": "activeEditorGroupEmpty && multipleEditorGroups"\n },\n {\n  "key": "ctrl+w",\n  "command": "-workbench.action.closeGroup",\n  "when": "activeEditorGroupEmpty && multipleEditorGroups"\n },\n {\n  "key": "alt+o",\n  "command": "markdown.showPreviewToSide",\n  "when": "!notebookEditorFocused && editorLangId == \'markdown\'"\n },\n {\n  "key": "ctrl+k v",\n  "command": "-markdown.showPreviewToSide",\n  "when": "!notebookEditorFocused && editorLangId == \'markdown\'"\n },\n {\n  "key": "ctrl+alt+tab",\n  "command": "markdown.extension.onTabKey",\n  "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus && !hasOtherSuggestions && !hasSnippetCompletions && !inSnippetMode && !suggestWidgetVisible && editorLangId == \'markdown\'"\n },\n {\n  "key": "tab",\n  "command": "-markdown.extension.onTabKey",\n  "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus && !hasOtherSuggestions && !hasSnippetCompletions && !inSnippetMode && !suggestWidgetVisible && editorLangId == \'markdown\'"\n },\n {\n  "key": "ctrl+t ctrl+r",\n  "command": "workbench.action.tasks.build"\n },\n {\n  "key": "ctrl+shift+b",\n  "command": "-workbench.action.tasks.build"\n },\n {\n  "key": "ctrl+shift+b",\n  "command": "markdown.extension.editing.toggleBold",\n  "when": "editorTextFocus && !editorReadonly && editorLangId == \'markdown\'"\n },\n {\n  "key": "ctrl+b",\n  "command": "-markdown.extension.editing.toggleBold",\n  "when": "editorTextFocus && !editorReadonly && editorLangId == \'markdown\'"\n },\n {\n  "key": "alt+1",\n  "command": "-workbench.action.openEditorAtIndex1"\n },\n {\n  "key": "alt+1",\n  "command": "editor.foldLevel1",\n  "when": "editorTextFocus && foldingEnabled"\n },\n {\n  "key": "ctrl+k ctrl+1",\n  "command": "-editor.foldLevel1",\n  "when": "editorTextFocus && foldingEnabled"\n }\n]\n')),(0,a.kt)("h2",{id:"git"},"Git"),(0,a.kt)("h3",{id:"vscode-for-merge-and-diff"},"Vscode for merge and diff"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"git config --global merge.tool vscode\ngit config --global mergetool.vscode.cmd 'code --wait $MERGED'\ngit config --global diff.tool vscode\ngit config --global difftool.vscode.cmd 'code --wait --diff $LOCAL $REMOTE'\ngit config --global core.autocrlf true\n")),(0,a.kt)("h3",{id:"git-configs"},"Git Configs"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'git config user.email m.gh@linuxmail.org\ngit config user.name mlibre\ngit config --global user.email m.gh@linuxmail.org\ngit config --global user.name mlibre\ngit config --global credential.helper store\n\ngit config --global user.name "mlibre"\ngit config --global user.email "m.gh@linuxmail.org"\ngit config --global core.autocrlf input\ngit config --global core.fileMode false\ngit config core.autocrlf input\ngit config core.fileMode false\n\ngit add --renormalize .\n')),(0,a.kt)("h3",{id:"github-actions"},"Github Actions"),(0,a.kt)("h4",{id:"publish-a-package-on-the-npm-registry"},"Publish A Package On the NPM Registry"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Create an NPM token: ",(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"https://www.npmjs.com/settings/mlibre/tokens/"},"https://www.npmjs.com/settings/mlibre/tokens/"))),(0,a.kt)("li",{parentName:"ol"},"Create a secret variable named ",(0,a.kt)("inlineCode",{parentName:"li"},"NPM_TOKEN")," from the Github repository settings: ",(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"https://github.com/mlibre/Ethereum-Smart-Contract-Deployer/settings/secrets/actions/new"},"https://github.com/mlibre/Ethereum-Smart-Contract-Deployer/settings/secrets/actions/new"))),(0,a.kt)("li",{parentName:"ol"},"Create a ",(0,a.kt)("inlineCode",{parentName:"li"},"yml")," file in the repository: ",(0,a.kt)("inlineCode",{parentName:"li"},".github/workflows/npm.yml"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml"},"name: Publish on NPM registry\n\non:\n  push:\n    branches: ['master']\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - uses: actions/setup-node@v2\n        with:\n          node-version: 14.x\n          registry-url: https://registry.npmjs.org/\n      - run: npm publish --access public\n        env:\n          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}\n")),(0,a.kt)("h4",{id:"bundling-and-committing-a-node-module-using-browserify"},"Bundling and Committing a Node Module using Browserify"),(0,a.kt)("p",null,"Create a yml file in the repository: ",(0,a.kt)("inlineCode",{parentName:"p"},".github/workflows/browserify.yml")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml"},"name: Browserify Bundle\n\non:\n  push:\n    branches: ['master']\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - uses: actions/setup-node@v2\n        with:\n          node-version: 14.x\n          registry-url: https://registry.npmjs.org/\n      # - run: npm install\n      - run: npm install\n      - run: npm install -g browserify\n      - run: browserify -r ./main.js:EthereumTokens -o ./web/bundle.js\n      - run: |\n          git config --global user.name 'mlibre'\n          git config --global user.email 'm.gh@linuxmail.org'\n          git add web\n          git commit -am \"Automated bundle\"\n          git push\n\n")),(0,a.kt)("h2",{id:"cleaning-npm-cache"},"Cleaning NPM Cache"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"rm -r node_modules/\nnpm cache clean --force\nsudo npm cache clean --force -g\nsudo pacman -R nodejs-lts-fermium npm\n# sudo pacman -R nodejs npm\nsudo rm -r ~/.npm\nrm -r ~/.node-gyp/\nrm -r .cache/node-gyp/\nsudo rm -r /usr/local/lib/node_modules/\nsudo rm -r /usr/lib/node_modules/\nsudo pacman -S nodejs-lts-fermium npm\n# sudo pacman -S nodejs npm\n# Restart the OS\n")),(0,a.kt)("h2",{id:"settings-json"},"Settings JSON"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "breadcrumbs.enabled": false,\n    "diffEditor.ignoreTrimWhitespace": false,\n    "chat.commandCenter.enabled": false,\n    "editor.accessibilitySupport": "off",\n    "editor.copyWithSyntaxHighlighting": false,\n    "editor.cursorSmoothCaretAnimation": "on",\n    "editor.fontFamily": "\'Droid Sans Mono\', \'monospace\', monospace, \'Droid Sans Fallback\', \'Fira Code Retina\'",\n    "editor.formatOnPaste": true,\n    "editor.formatOnSave": true,\n    "editor.inlineSuggest.enabled": true,\n    "editor.inlineSuggest.suppressSuggestions": true,\n    "editor.insertSpaces": false,\n    "editor.minimap.enabled": false,\n    "editor.mouseWheelZoom": true,\n    "editor.parameterHints.enabled": true,\n    "editor.smoothScrolling": true,\n    "editor.stickyScroll.enabled": true,\n    "editor.tabSize": 3,\n    "editor.unicodeHighlight.ambiguousCharacters": false,\n    "editor.codeActionsOnSave": {\n        // "source.organizeImports": "always",\n        "source.fixAll": "always"\n    },\n    "editor.defaultFormatter": "dbaeumer.vscode-eslint",\n    "[jsonc]": {\n        "editor.quickSuggestions": {\n            "strings": true\n        },\n        "editor.defaultFormatter": "vscode.json-language-features",\n    },\n    "[markdown]": {\n        "editor.defaultFormatter": "yzhang.markdown-all-in-one"\n    },\n    "[json]": {\n        "editor.defaultFormatter": "vscode.json-language-features"\n    },\n    "[javascript]": {\n        "editor.defaultFormatter": "dbaeumer.vscode-eslint",\n    },\n    "[typescript]": {\n        "editor.defaultFormatter": "dbaeumer.vscode-eslint"\n    },\n    "[html]": {\n        "editor.defaultFormatter": "vscode.html-language-features"\n    },\n    "eslint.codeAction.showDocumentation": {\n        "enable": true\n    },\n    // "typescript.inlayHints.parameterNames.enabled": "all",\n    // "typescript.inlayHints.variableTypes.enabled": true,\n    "typescript.referencesCodeLens.enabled": false,\n    // "eslint.codeActionsOnSave.rules": null,\n    "eslint.debug": true,\n    "eslint.enable": true,\n    "eslint.useFlatConfig": true,\n    "eslint.format.enable": true,\n    "explorer.autoReveal": false,\n    "explorer.compactFolders": false,\n    "explorer.confirmDelete": false,\n    "explorer.confirmDragAndDrop": false,\n    "git.autofetch": true,\n    "git.confirmSync": false,\n    "git.enableSmartCommit": true,\n    "git.ignoreRebaseWarning": true,\n    "git.pullTags": false,\n    "http.proxyStrictSSL": false,\n    "javascript.updateImportsOnFileMove.enabled": "always",\n    "javascript.validate.enable": false,\n    "markdownlint.config": {\n        "single-h1": false\n    },\n    "search.exclude": {\n        "**/docs/*/**": true,\n        "**/logs/**": true,\n        "**/logs/*/**": true,\n        "**/node_modules/*/**": true,\n        "**/.git": true\n    },\n    "files.exclude": {\n        "**/*.js": {\n            "when": "$(basename).ts"\n        },\n        "**/**.js": {\n            "when": "$(basename).tsx"\n        }\n    },\n    "security.workspace.trust.untrustedFiles": "open",\n    "telemetry.telemetryLevel": "off",\n    "terminal.explorerKind": "integrated",\n    "terminal.integrated.defaultProfile.linux": "JavaScript Debug Terminal",\n    "terminal.integrated.persistentSessionScrollback": 1000,\n    "terminal.integrated.scrollback": 10000,\n    "terminal.integrated.smoothScrolling": true,\n    "terminal.integrated.showExitAlert": false,\n    "update.mode": "none",\n    "window.commandCenter": false,\n    "window.zoomLevel": 1.3,\n    "window.dialogStyle": "custom",\n    "window.titleBarStyle": "custom",\n    "workbench.iconTheme": "vscode-great-icons",\n    "workbench.layoutControl.enabled": false,\n    "workbench.layoutControl.type": "menu",\n    "workbench.list.smoothScrolling": true,\n    "workbench.activityBar.location": "bottom",\n    "window.customTitleBarVisibility": "auto",\n    "extensions.autoCheckUpdates": false,\n    "extensions.autoUpdate": "onlyEnabledExtensions",\n    "markdown.extension.tableFormatter.normalizeIndentation": true,\n    "markdown.extension.toc.unorderedList.marker": "*",\n    "markdown.extension.toc.updateOnSave": false,\n    "markdown.extension.toc.levels": "2..6",\n    "markdown.extension.completion.respectVscodeSearchExclude": true,\n    "markdown.extension.theming.decoration.renderCodeSpan": false,\n    "cody.telemetry.level": "off",\n    "terminal.integrated.enableMultiLinePasteWarning": "never",\n    "explorer.confirmPasteNative": false,\n    "git.openRepositoryInParentFolders": "never",\n    "editor.cursorBlinking": "phase",\n    "terminal.integrated.cursorBlinking": true\n}\n')),(0,a.kt)("h2",{id:"eslint-configuration"},"Eslint Configuration"),(0,a.kt)("h3",{id:"nodejs"},"Nodejs"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'// eslint.config.js\nconst globals = require("globals");\nconst js = require("@eslint/js");\nmodule.exports = [\n {\n  ...js.configs.recommended,\n  languageOptions: {\n    globals: {\n      ...globals.node\n    },\n    ecmaVersion: "latest",\n    sourceType: "commonjs"\n  },\n  rules: {\n    semi: ["error", "always"],\n   "no-trailing-spaces": "error",\n   "linebreak-style": ["error", "unix"],\n   "quotes": ["error", "double"],\n   "one-var": ["error", "never"],\n   "brace-style": ["error", "allman", {allowSingleLine: true}],\n   "space-before-blocks": "warn",\n   "func-call-spacing": "error",\n   "space-before-function-paren": "error",\n   "space-in-parens": ["error", "always", {exceptions: ["{}"]}],\n   "keyword-spacing": "error",\n   "comma-spacing": "error",\n   "space-unary-ops": "error",\n   "block-spacing": "error",\n   "arrow-spacing": "error",\n   "key-spacing": "error",\n   "comma-style": "error",\n   "space-infix-ops": "error",\n   "array-bracket-spacing": "error",\n   "object-curly-spacing": ["error", "always"],\n   "no-multi-spaces": "error",\n   "operator-linebreak": "error",\n   "function-paren-newline": "warn",\n   "arrow-body-style": ["error", "always"],\n   "no-template-curly-in-string": "error",\n   "prefer-const": ["error", {destructuring: "any", ignoreReadBeforeAssign: false}],\n   "no-new-object": "error",\n   "no-extra-parens": ["error", "all", {conditionalAssign: false}],\n   "no-empty-function": "error",\n   "no-empty": ["warn", {allowEmptyCatch: true}],\n   "no-eq-null": "error",\n   "no-extra-bind": "error",\n   "no-self-compare": "error",\n   "no-useless-call": "error",\n   "no-undefined": "error",\n   "no-undef": "warn",\n   "no-array-constructor": "error",\n   "prefer-destructuring": ["error",\n    {\n     VariableDeclarator: {array: true, object: true}, AssignmentExpression: {array: false, object: false}}, {enforceForRenamedProperties: false\n\n    }\n   ],\n   "object-shorthand": "warn",\n   "prefer-spread": "warn",\n   "prefer-template": "warn",\n   "no-loop-func": "warn",\n   "prefer-rest-params": "warn",\n   "no-new-func": "warn",\n   "no-unneeded-ternary": "warn",\n   "no-process-exit": "off",\n   "require-await": "warn",\n   "indent": ["error", "tab", {MemberExpression: 0}],\n   "no-tabs": 0,\n  },\n },\n];\n')),(0,a.kt)("h3",{id:"typescript"},"Typescript"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'// eslint.config.js\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n// @ts-check\n\nimport eslint from "@eslint/js";\nimport globals from "globals";\nimport tseslint from "typescript-eslint";\nimport stylistic from "@stylistic/eslint-plugin";\n\n\n/** @type {import(\'@typescript-eslint/utils\').TSESLint.FlatConfig.ConfigFile} */\nexport default [\n eslint.configs.recommended,\n ...tseslint.configs.strict,\n ...tseslint.configs.stylisticTypeChecked,\n {\n  languageOptions: {\n   globals: globals.node,\n   parserOptions: {\n    project: true,\n    tsconfigRootDir: import.meta.dirname\n   }\n  }\n },\n {\n  plugins: {\n   stylistic\n  },\n  rules: {\n   "stylistic/indent": [\n    "error",\n    "tab",\n    {\n     "MemberExpression": 0\n    }\n   ],\n   "stylistic/no-tabs": 0,\n   "stylistic/brace-style": [ "error", "allman" ],\n   "stylistic/comma-style": [ "error" ],\n   "stylistic/array-bracket-spacing": [ "error", "always" ],\n   "stylistic/space-before-blocks": [ "warn" ],\n   "stylistic/comma-spacing": [ "error" ],\n   "stylistic/function-call-spacing": [ "error", "never" ],\n   "stylistic/space-before-function-paren": [ "error", "always" ],\n   "stylistic/space-in-parens": [ "error", "always", { exceptions: [ "{}" , "empty" ] } ],\n   "stylistic/keyword-spacing": [ "error" ],\n   "stylistic/space-unary-ops": [ "error" ],\n   "stylistic/key-spacing": [ "error" ],\n   "stylistic/arrow-parens": [\n    "error",\n    "always"\n   ],\n   "stylistic/function-paren-newline": [ "warn" ],\n   "stylistic/linebreak-style": [ "error", "unix" ],\n   "stylistic/quotes": [ "error", "double" ],\n   "stylistic/semi": "error",\n   "stylistic/no-trailing-spaces": "error",\n   "stylistic/block-spacing": [ "error" ],\n   "stylistic/arrow-spacing": [ "error" ],\n   "stylistic/space-infix-ops": [ "error" ],\n   "stylistic/object-curly-spacing": [ "error", "always" ],\n   "stylistic/no-multi-spaces": [ "error" ],\n   "stylistic/operator-linebreak": [ "error", "after" ],\n   "stylistic/no-extra-parens": [\n    "error",\n    "all",\n    {\n     "conditionalAssign": false\n    }\n   ],\n   "stylistic/comma-dangle": [ "error" ]\n  }\n },\n {\n  rules: {\n   "@typescript-eslint/no-this-alias": [\n    "error",\n    {\n     "allowedNames": [ "self" ]\n    }\n   ],\n   "@typescript-eslint/prefer-nullish-coalescing": "off",\n   "curly": [ "error", "multi-line" ],\n   "one-var": [ "error", "never" ],\n   "arrow-body-style": [ "error", "always" ],\n   "no-template-curly-in-string": [ "error" ],\n   "prefer-const": [\n    "error",\n    {\n     "destructuring": "any",\n     "ignoreReadBeforeAssign": false\n    }\n   ],\n   "no-new-object": [ "error" ],\n\n   "no-empty-function": [ "error" ],\n   "no-empty": [\n    "warn",\n    {\n     "allowEmptyCatch": true\n    }\n   ],\n   "no-eq-null": [ "error" ],\n   "no-extra-bind": [ "error" ],\n   "no-self-compare": [ "error" ],\n   "no-useless-call": [ "error" ],\n   "no-array-constructor": [ "error" ],\n   "prefer-destructuring": [\n    "error", {\n     "VariableDeclarator": {\n      "array": true,\n      "object": true\n     },\n     "AssignmentExpression": {\n      "array": false,\n      "object": false\n     }\n    },\n    {\n     "enforceForRenamedProperties": false\n    }\n   ],\n   "object-shorthand": [ "warn" ],\n   "prefer-spread": [ "warn" ],\n   "prefer-template": [ "warn" ],\n   "no-loop-func": [ "warn" ],\n   "prefer-rest-params": [ "warn" ],\n   "no-new-func": [ "warn" ],\n   "no-unneeded-ternary": [ "warn" ],\n   "no-process-exit": "off",\n   "require-await": "warn"\n  }\n },\n {\n  files: [ "**/*.js" ],\n  extends: [ tseslint.configs.disableTypeChecked ]\n }\n];\n')),(0,a.kt)("h2",{id:"tsconfig"},"TSConfig"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'{\n "compilerOptions": {\n  "target": "ESNext",\n  "module": "NodeNext",\n  "moduleResolution": "NodeNext",\n  // "module": "commonjs",\n  // "module": "ESNext",\n  // "moduleResolution": "node",\n  "rootDir": "./src",\n  "outDir": "./dist",\n  "esModuleInterop": true,\n  "importHelpers": true,\n  "forceConsistentCasingInFileNames": true,\n  "strict": true,\n  "skipLibCheck": true,\n  "sourceMap": true,\n  "useUnknownInCatchVariables": true,\n  "noUnusedLocals": true\n  // "isolatedModules": true\n },\n // "include": [\n //  "**/*.ts",\n //  "**/*.tsx",\n //  "src/**/*"\n // ]\n}\n')))}d.isMDXComponent=!0}}]);
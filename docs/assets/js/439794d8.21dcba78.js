"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7722],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>k});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),d=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},m=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),p=d(a),c=r,k=p["".concat(s,".").concat(c)]||p[c]||u[c]||l;return a?n.createElement(k,o(o({ref:t},m),{},{components:a})):n.createElement(k,o({ref:t},m))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=c;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:r,o[1]=i;for(var d=2;d<l;d++)o[d]=a[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},6742:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>d});var n=a(7462),r=(a(7294),a(3905));const l={sidebar_position:11,tags:["Linux","XDG","Automatic","Shutdown","Manjaro","Windows 11","swap","Fix","Repair"]},o="Other",i={unversionedId:"linux/other",id:"linux/other",title:"Other",description:"Time and Date",source:"@site/docs/linux/other.md",sourceDirName:"linux",slug:"/linux/other",permalink:"/Wisdom-Hub/linux/other",draft:!1,tags:[{label:"Linux",permalink:"/Wisdom-Hub/tags/linux"},{label:"XDG",permalink:"/Wisdom-Hub/tags/xdg"},{label:"Automatic",permalink:"/Wisdom-Hub/tags/automatic"},{label:"Shutdown",permalink:"/Wisdom-Hub/tags/shutdown"},{label:"Manjaro",permalink:"/Wisdom-Hub/tags/manjaro"},{label:"Windows 11",permalink:"/Wisdom-Hub/tags/windows-11"},{label:"swap",permalink:"/Wisdom-Hub/tags/swap"},{label:"Fix",permalink:"/Wisdom-Hub/tags/fix"},{label:"Repair",permalink:"/Wisdom-Hub/tags/repair"}],version:"current",sidebarPosition:11,frontMatter:{sidebar_position:11,tags:["Linux","XDG","Automatic","Shutdown","Manjaro","Windows 11","swap","Fix","Repair"]},sidebar:"tutorialSidebar",previous:{title:"Awesome Tools",permalink:"/Wisdom-Hub/linux/tools"},next:{title:"Virtual Machine",permalink:"/Wisdom-Hub/linux/vm"}},s={},d=[{value:"Time and Date",id:"time-and-date",level:2},{value:"Timezone",id:"timezone",level:2},{value:"Get timezone",id:"get-timezone",level:3},{value:"Set timezone",id:"set-timezone",level:3},{value:"Fix time difference between linux and windows",id:"fix-time-difference-between-linux-and-windows",level:3},{value:"man, apropos",id:"man-apropos",level:2},{value:"GRUB",id:"grub",level:2},{value:"Regenerate grub.cfg",id:"regenerate-grubcfg",level:3},{value:"Fixing broken grub",id:"fixing-broken-grub",level:3},{value:"Easy method using Manjaro Live",id:"easy-method-using-manjaro-live",level:4},{value:"General method",id:"general-method",level:4},{value:"Autostart",id:"autostart",level:2},{value:"Init",id:"init",level:3},{value:"Automatic Shutdown",id:"automatic-shutdown",level:2},{value:"Reading symlinks",id:"reading-symlinks",level:3},{value:"System Info",id:"system-info",level:3},{value:"Performance",id:"performance",level:2},{value:"Disable Linux Watchdogs, compaction and more",id:"disable-linux-watchdogs-compaction-and-more",level:3},{value:"Improve fstab, ssd, nvme performance",id:"improve-fstab-ssd-nvme-performance",level:3},{value:"Disabling journaling",id:"disabling-journaling",level:3},{value:"Journal Size",id:"journal-size",level:3},{value:"Manjaro",id:"manjaro",level:2},{value:"Fix broken System",id:"fix-broken-system",level:3},{value:"Things to do before installing",id:"things-to-do-before-installing",level:3},{value:"Things to do after installing",id:"things-to-do-after-installing",level:3},{value:"Apply New Configs",id:"apply-new-configs",level:3},{value:"Windows 11",id:"windows-11",level:2},{value:"Make boatable usb",id:"make-boatable-usb",level:3},{value:"WoeUsb",id:"woeusb",level:3},{value:"Win2USB",id:"win2usb",level:3},{value:"Things to do after installing Windows 11",id:"things-to-do-after-installing-windows-11",level:3},{value:"Install a new os on the phone",id:"install-a-new-os-on-the-phone",level:2},{value:"Backup data",id:"backup-data",level:3},{value:"Restore",id:"restore",level:3},{value:"Enable Developer options",id:"enable-developer-options",level:3},{value:"Install odin tools for Samsung &gt;= 3.14",id:"install-odin-tools-for-samsung--314",level:3},{value:"Install samsung driver",id:"install-samsung-driver",level:3},{value:"Install adb",id:"install-adb",level:3},{value:"Download TWRP",id:"download-twrp",level:3},{value:"convert it to .md5",id:"convert-it-to-md5",level:3},{value:"Run Odin as administrator",id:"run-odin-as-administrator",level:3},{value:"Docker",id:"docker",level:2},{value:"Installation",id:"installation",level:3},{value:"Enabling, Disabling",id:"enabling-disabling",level:3},{value:"Info",id:"info",level:3},{value:"Listing",id:"listing",level:3},{value:"Pulling",id:"pulling",level:3},{value:"Removing",id:"removing",level:3},{value:"Running",id:"running",level:3},{value:"Example",id:"example",level:4},{value:"Log",id:"log",level:3},{value:"Build",id:"build",level:3},{value:"Other commands",id:"other-commands",level:3},{value:"8G tmpFs",id:"8g-tmpfs",level:3}],m={toc:d},p="wrapper";function u(e){let{components:t,...a}=e;return(0,r.kt)(p,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"other"},"Other"),(0,r.kt)("h2",{id:"time-and-date"},"Time and Date"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Command"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Short Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"cal")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Display a calendar")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"cal -3")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Display calendar for the previous, current, and next month")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"timedatectl")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Control system time and date settings")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"sudo timedatectl set-time '2023-09-06 14:30:00'")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Set the system time and date")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"date")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Display or set the system date and time")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},'date "+%Y-%m-%d %H:%M:%S"')),(0,r.kt)("td",{parentName:"tr",align:"center"},"Display the current date and time in a specific format")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"sudo date -s '2023-09-06 14:30:00'")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Set the system date and time")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"tzselect")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Set the system's time zone interactively")))),(0,r.kt)("h2",{id:"timezone"},"Timezone"),(0,r.kt)("h3",{id:"get-timezone"},"Get timezone"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"date +%Z\ndate +%z\ntimedatectl show --property=Timezone --value\nreadlink /etc/localtime\ncat /etc/timezone # depricated\necho $TZ # depricated\n")),(0,r.kt)("h3",{id:"set-timezone"},"Set timezone"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'timedatectl list-timezones\nsudo timedatectl set-timezone Arctic/Longyearbyen\n# Will change the output of "date, timedatectl and /etc/localtime"\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"/etc/localtime")," is a file or symbolic link in Linux that represents the current system's time zone configuration, used by many applications. You can change this time zone by modifying the file or link to point to a time zone definition file under ",(0,r.kt)("inlineCode",{parentName:"p"},"/usr/share/zoneinfo/"),".")),(0,r.kt)("h3",{id:"fix-time-difference-between-linux-and-windows"},"Fix time difference between linux and windows"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo timedatectl set-local-rtc 1 --adjust-system-clock\n## sudo timedatectl set-local-rtc 1\nsudo ntpdate time.nist.gov ## update time\n")),(0,r.kt)("h2",{id:"man-apropos"},"man, apropos"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Command"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Short Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"apropos network")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Find network commands")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"apropos file")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Search for file-related commands")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},'apropos -s 1 ".*"')),(0,r.kt)("td",{parentName:"tr",align:"center"},"all user commands (section 1)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"man")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Display manual pages")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"man ls")),(0,r.kt)("td",{parentName:"tr",align:"center"},"View manual for 'ls' command")))),(0,r.kt)("h2",{id:"grub"},"GRUB"),(0,r.kt)("p",null,"File:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"/etc/default/grub"),(0,r.kt)("li",{parentName:"ul"},"/etc/grub.d/"),(0,r.kt)("li",{parentName:"ul"},"/boot/grub/grub.cfg"),(0,r.kt)("li",{parentName:"ul"},"/boot/efi/EFI/"),(0,r.kt)("li",{parentName:"ul"},"/boot/grub/x86_64-efi/")),(0,r.kt)("h3",{id:"regenerate-grubcfg"},"Regenerate grub.cfg"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo grub-mkconfig -o /boot/grub/grub.cfg\n")),(0,r.kt)("h3",{id:"fixing-broken-grub"},"Fixing broken grub"),(0,r.kt)("h4",{id:"easy-method-using-manjaro-live"},"Easy method using Manjaro Live"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Boot a live Manjaro image")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo manjaro-chroot -a\ngrub-install\nupdate-grub\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"It will detect your current installed linux.  Restart the computer and it will boot the installed linux.",(0,r.kt)("br",{parentName:"p"}),"\n","Then run:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"update-grub\n")),(0,r.kt)("h4",{id:"general-method"},"General method"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Mount the file system and efi partition\nsudo mount /dev/nvme0n1p4 /mnt\nsudo mount --bind /dev /mnt/dev\nsudo mount --bind /dev/pts /mnt/dev/pts\nsudo mount --bind /proc /mnt/proc\nsudo mount --bind /sys /mnt/sys\nsudo mkdir /efi\nsudo mount /dev/nvme0n1p1 /efi\n\n# Install grub and update grub configuration\nsudo grub-install --root-directory=/mnt/ /dev/nvme0 --efi-directory=/efi --target=x86_64-efi --recheck\nsudo chroot /mnt\nsudo blkid -s UUID -o value /dev/nvme0n1p1\nnano /etc/fstab\nsudo update-grub\n")),(0,r.kt)("h2",{id:"autostart"},"Autostart"),(0,r.kt)("h3",{id:"init"},"Init"),(0,r.kt)("p",null,"the ",(0,r.kt)("inlineCode",{parentName:"p"},"init")," command refers to the process initialization system. It's the first process that gets started by the kernel during system boot, and it's assigned the process ",(0,r.kt)("inlineCode",{parentName:"p"},"ID (PID) of 1")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"which init\n# Output: /usr/bin/init\n\nreadlink -f /usr/bin/init\n# Output: /usr/lib/systemd/systemd\n\nps -p 1\n# Output:\n# PID TTY          TIME CMD\n#   1 ?        00:00:01 systemd\n\npstree -p 1\n# Output:\n# systemd(1)\u2500\u252c\u2500...\n")),(0,r.kt)("h2",{id:"automatic-shutdown"},"Automatic Shutdown"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Command"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"shutdown now")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Shutdown the system immediately.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"shutdown -h +5")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Shutdown the system in 5 minutes.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"shutdown -r now")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Reboot the system immediately.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"shutdown -r +10")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Reboot the system in 10 minutes.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"shutdown -H now")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Halt the system immediately.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"shutdown +5")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Shutdown the system in 5 minutes.")))),(0,r.kt)("h3",{id:"reading-symlinks"},"Reading symlinks"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"readlink /bin/init\n# ../lib/systemd/systemd\n")),(0,r.kt)("h3",{id:"system-info"},"System Info"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"uname -a\n")),(0,r.kt)("h2",{id:"performance"},"Performance"),(0,r.kt)("h3",{id:"disable-linux-watchdogs-compaction-and-more"},"Disable Linux Watchdogs, compaction and more"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl start systemd-sysctl.service\nsudo systemctl enable systemd-sysctl.service\n\nsudo nano /etc/sysctl.conf\n# And\nsudo nano /etc/sysctl.d/sys.conf\n\nnet.ipv4.tcp_fastopen=3\nnet.ipv4.ip_forward=1\nkernel.nmi_watchdog=0\nkernel.watchdog=0\nvm.compaction_proactiveness=0\nvm.zone_reclaim_mode=0\nvm.page_lock_unfairness=1\nkernel.perf_event_paranoid=-1\nfs.inode-nr=200000\nvm.dirty_background_ratio=5\nvm.vfs_cache_pressure=50\nnet.ipv4.tcp_max_syn_backlog=8192\nnet.ipv4.tcp_tw_reuse=1\nvm.min_free_kbytes=2500000\n")),(0,r.kt)("h3",{id:"improve-fstab-ssd-nvme-performance"},"Improve fstab, ssd, nvme performance"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/fstab \nUUID=f74c37b2-8a12-4252-90a6-d31504507bcb / ext4  defaults,noatime,nodiratime,commit=60,barrier=0  0 1\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'sudo nano /etc/udev/rules.d/60-ioschedulers.rules\n\nACTION=="add|change", KERNEL=="nvme[0-9]n[0-9]", ATTR{queue/scheduler}="none"\n')),(0,r.kt)("h3",{id:"disabling-journaling"},"Disabling journaling"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'sudo tune2fs -f -O "^has_journal" /dev/sda2\n')),(0,r.kt)("h3",{id:"journal-size"},"Journal Size"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/systemd/journald.conf\nSystemMaxUse=100M\nsudo systemctl restart systemd-journald\n")),(0,r.kt)("h2",{id:"manjaro"},"Manjaro"),(0,r.kt)("h3",{id:"fix-broken-system"},"Fix broken System"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Boot into Manjaro Live"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"chroot")," to yoour linux (",(0,r.kt)("inlineCode",{parentName:"li"},"manjaro-chroot -a"),")")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'sudo pacman -Rns xf86-video-amdgpu\nsudo pacman -S xf86-video-amdgpu\n\n# Remove the word splash & quiet from the Grub command line options\nnano /etc/default/grub\n\nsudo grub-mkconfig -o /boot/grub/grub.cfg \nsudo pacman -Rsn plymouth plymouth-theme-manjaro plymouth-kcm\n\n# remove "plymouth" from mkinitcpio HOOKS and add "ext4 vfat" to MODULES\nnano /etc/mkinitcpio.conf\n\nsudo mkinitcpio -P\nsudo update-grub\n\nsudo pacman -S linux61 linux\n')),(0,r.kt)("h3",{id:"things-to-do-before-installing"},"Things to do before installing"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Backup important data. Recovery-keys, Passwords, Postman and ...  ")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'backupPath=/home/mlibre/media/H/Linux/caches/\ncd\ncp -rf /home/mlibre/.local/share/TelegramDesktop $backupPath\ncp $HISTFILE $backupPath\ncp .bashrc $backupPath\ncp .zshrc $backupPath\ncp .bash_profile $backupPath\ncp -r .config/ $backupPath\ncp -r .cache/ $backupPath\nsudo cp -r /etc $backupPath\nsudo cp -r /usr/lib/systemd/ $backupPath\n\n# Or full backup\nfullBackupPath=/home/mlibre/media/H/Linux/backup\nsudo rsync -aAXHv --exclude={"/dev/*","/proc/*","/sys/*","/tmp/*","/run/*","/mnt/*","/var/*","/media/*","/usr/*","/lib/*","/lib64/","/lost+found","/swapfile",".npm*",".npm/*","node_modules*","node_modules/*","mesa_shader_cache*","steamapps*","Data*","Steam*","/home/mlibre/media/*"} / $fullBackupPath\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Mark EFI partition while installing Manjaro/Arch Linux as /boot/efi. Don't check Format option.")),(0,r.kt)("h3",{id:"things-to-do-after-installing"},"Things to do after installing"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Remove and disable unnecessary packages"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'echo "$USER ALL=(ALL:ALL) NOPASSWD: ALL" | sudo tee /etc/sudoers.d/$USER\nsudo systemctl disable pamac-daemon\nsudo systemctl disable pamac-mirrorlist.timer\nsudo systemctl disable pamac-mirrorlist.service\nsudo systemctl disable pacman-filesdb-refresh.timer\nsudo pacman -R manjaro-hello web-installer-url-handler matray print-manager samba kdenetwork-filesharing thunderbird hplip cups yakuake manjaro-printer gutenprint cups-pdf snapd libpamac-snap-plugin flatpak libpamac-flatpak-plugin bluedevil timeshift timeshift-autosnap-manjaro pamac-tray-icon-plasma kdeconnect vde2  qemu-common qemu-system-arm qemu-user-static-binfmt qemu-system-arm-firmware scrcpy flatpak\n\n## or\n\necho "manjaro-hello web-installer-url-handler matray print-manager samba kdenetwork-filesharing thunderbird hplip cups yakuake manjaro-printer gutenprint cups-pdf snapd libpamac-snap-plugin flatpak libpamac-flatpak-plugin bluedevil timeshift timeshift-autosnap-manjaro pamac-tray-icon-plasma kdeconnect vde2  qemu-common qemu-system-arm qemu-user-static-binfmt qemu-system-arm-firmware scrcpy flatpak" | xargs -d " " -I {} sudo pacman --noconfirm -R {}\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Pacman downloads parallel"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/pacman.conf\nParallelDownloads = 5\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Upgrade"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pamac update --force-refresh\npamac update -a\nsudo pacman-mirrors --fasttrack\nsudo pacman -Syyuu\nsudo pacman -S mlocate telegram-desktop unzip thermald ntfs-3g firefox vlc aria2 base-devel xorg-xrandr code dnsutils\nsudo pacman -S qbittorrent meld ttf-ubuntu-font-family gnome-keyring libsecret core/iputils clinfo steam-native-runtime gparted amdvlk lib32-amdvlk net-tools\nsudo pacman -S clamav libreoffice-fresh tor torsocks\nsudo systemctl enable --now thermald.service\nsudo updatedb\npamac install nekoray-bin visual-studio-code-bin onlyoffice-bin\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Import Data"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cp -r /run/media/mlibre/D/Linux/caches/TelegramDesktop /home/mlibre/.local/share/\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Aliases"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"echo \"alias nn='npm run'\" >> ~/.bashrc\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Make an XDG autostart script for gamma adjustment")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Put the gamma script in the ",(0,r.kt)("inlineCode",{parentName:"p"},".bashrc")," and ",(0,r.kt)("inlineCode",{parentName:"p"},".zshrc")," as well")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"KDE Settings -> Disable Mouse acceleration")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"KDE Settings -> Startup and Shutdown: Start with empty session, Choose KDE Screen Saver, Review background services and Autostarts.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"KDE Settings -> Appearance -> Theme -> Breeze Dark, Breath Dark")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"KDE Settings -> Appearance -> Font -> Enabled Anti-Aliasing, RGB, Slight. all +1 PT")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"KDE Settings -> Workspace -> Search -> Disable Web Search Keywords")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"KDE Settings -> Workspace Behavior -> Activities -> Privacy -> Dont remember soft")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"KDE Settings -> Search for kRunner -> settings -> uncheck all")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Pin Firefox, Terminal, ProtonVPN, Kate and VSCode to the panel")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Software Center: Disable automatic updates, Add AUR support")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Remove Virtual Desktops")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Make a Swapfile"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'sudo dd if=/dev/zero of=/swapfile bs=1M count=5120 status=progress\nsudo chmod 600 /swapfile\nsudo mkswap /swapfile\nsudo swapon /swapfile\ncat /etc/fstab\nsudo bash -c "echo /swapfile none swap defaults 0 0 >> /etc/fstab"\n\nsudo nano /etc/sysctl.conf\n## vm.swappiness=10\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Firefox: Enable DNS over HTTPS")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Enable automatic mounting of external drives: Settings -> Hardware -> Removable Storage -> Automount")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Konsole config:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Font: Monospace 13pt"),(0,r.kt)("li",{parentName:"ul"},"Theme: Breath (customized, a bit darker)"),(0,r.kt)("li",{parentName:"ul"},"Shell: Manjaro zsh"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Steam: Allow auto-update only between 1AM - 11AM")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Performance"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl disable bluetooth.service\nsudo systemctl disable tor.service\nsudo systemctl disable samba\nsudo systemctl disable cups\nbalooctl disable && balooctl purge\nsudo rm /etc/cron.d/0hourly\nsudo rm /etc/xdg/autostart/baloo_file.desktop\nsudo rm /etc/xdg/autostart/pamac-tray-budgie.desktop\nsudo rm /etc/xdg/autostart/pamac-tray.desktop\nsudo rm /etc/xdg/autostart/msm_kde_notifier.desktop\nsudo rm /etc/xdg/autostart/org.gnome.SettingsDaemon*\nsudo rm /etc/xdg/autostart/print-applet.desktop\n\n# sudo systemctl enable firewalld\n# sudo systemctl restart firewalld\n\n# sudo firewall-cmd --permanent --add-service=https\n# sudo firewall-cmd --permanent --add-port=30303/tcp\n# sudo firewall-cmd --permanent --add-port=30303/udp\n\n# sudo systemctl restart --now clamav-daemon\n# sudo freshclam\n# clamscan --recursive --infected /home\n# sudo systemctl disable --now clamav-freshclam\n# sudo systemctl disable --now clamav-daemon\n# sudo systemctl enable --now clamav-daemon\n# sudo systemctl enable --now clamav-freshclam\n")),(0,r.kt)("h3",{id:"apply-new-configs"},"Apply New Configs"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Default config file\nls -laR /etc/skel\n\n# apply default configs\n# method 1\ncp -rf /etc/skel/.* ~/\nrm -f ~/.config/dconf/user\n\n# method 2\nsudo useradd -m newusername\nsudo passwd newusername\n")),(0,r.kt)("h2",{id:"windows-11"},"Windows 11"),(0,r.kt)("h3",{id:"make-boatable-usb"},"Make boatable usb"),(0,r.kt)("h3",{id:"woeusb"},"WoeUsb"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo pacman -Suy p7zip python-pip python-wxpython\ngit clone https://github.com/WoeUSB/WoeUSB-ng.git\nsudo pip3 install .\nsudo woeusb --workaround-skip-grub --target-filesystem NTFS --device ~/Win11_22H2_English_x64v1.iso  /dev/sdb\n")),(0,r.kt)("h3",{id:"win2usb"},"Win2USB"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"https://github.com/ValdikSS/windows2usb\nchmod +x windows2usb*\n./windows2usb-0.2.4-x86_64.AppImage /dev/sdb ~/Win11_22H2_English_x64v1.iso gpt+uefintfs\n")),(0,r.kt)("h3",{id:"things-to-do-after-installing-windows-11"},"Things to do after installing Windows 11"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Download and install all the updates"),(0,r.kt)("li",{parentName:"ul"},"Enable Ransomware protection"),(0,r.kt)("li",{parentName:"ul"},"Download DimScreen, Copy it to the download folder. Open. click on the settings. set brightness to 20%. Make a shortcut to the desktop"),(0,r.kt)("li",{parentName:"ul"},"search for gamma calibration in windows settings. set it to minimum"),(0,r.kt)("li",{parentName:"ul"},"Adjust date and time: auto. Timezone tehran +3:30"),(0,r.kt)("li",{parentName:"ul"},"Downloading updates active hours: 24 hours format. 1->11"),(0,r.kt)("li",{parentName:"ul"},"Disable all data usages settings in privacy and security"),(0,r.kt)("li",{parentName:"ul"},"uninstall mail, teams, one drive. xbox, facebook, microsoft todo, sticky notes, tips, weather"),(0,r.kt)("li",{parentName:"ul"},"Install firefox and login"),(0,r.kt)("li",{parentName:"ul"},"Install protonVPN"),(0,r.kt)("li",{parentName:"ul"},"personalize: sunrise"),(0,r.kt)("li",{parentName:"ul"},"network connection: metered connection"),(0,r.kt)("li",{parentName:"ul"},"Display: 3840x2160, 200%"),(0,r.kt)("li",{parentName:"ul"},"Steam: add your games' location to the Games' folder library. make it as default"),(0,r.kt)("li",{parentName:"ul"},"Steam: If your games are in a ",(0,r.kt)("inlineCode",{parentName:"li"},"NTFS")," file system, follow ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/ValveSoftware/Proton/wiki/Using-a-NTFS-disk-with-Linux-and-Windows"},"this")," to make game compatible with Linux."),(0,r.kt)("li",{parentName:"ul"},"Pause windows updates for 5 weeks"),(0,r.kt)("li",{parentName:"ul"},"Check windows startups apps"),(0,r.kt)("li",{parentName:"ul"},"App store: disable automatic update"),(0,r.kt)("li",{parentName:"ul"},'Leave from "AMD user experience program". AMD settings -> last tab -> last option'),(0,r.kt)("li",{parentName:"ul"},"windows features: WSL, virtual machine, hyper-v (for android and linux apps)"),(0,r.kt)("li",{parentName:"ul"},"wsl --update"),(0,r.kt)("li",{parentName:"ul"},"wsl --install -d Ubuntu"),(0,r.kt)("li",{parentName:"ul"},"Disable Error Reporting: WIN+R -> services.msc -> Windows Error Reporting Service -> Properties -> disable")),(0,r.kt)("h2",{id:"install-a-new-os-on-the-phone"},"Install a new os on the phone"),(0,r.kt)("h3",{id:"backup-data"},"Backup data"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo pacman -S android-tools\nsudo adb devices\nadb backup -apk -shared -all -f backup-file.ab\n")),(0,r.kt)("h3",{id:"restore"},"Restore"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"adb restore file.ab\n")),(0,r.kt)("h3",{id:"enable-developer-options"},"Enable Developer options"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Several times clicks on the kernel tab"),(0,r.kt)("li",{parentName:"ul"},"Allow OEM unlocking"),(0,r.kt)("li",{parentName:"ul"},"Enter Download mod:",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"Turn off the phone.  "),(0,r.kt)("li",{parentName:"ol"},"Hold vol key up + down."),(0,r.kt)("li",{parentName:"ol"},'Now in the warning message page. choose "unlocking bootloader" that will perform a factory reset')))),(0,r.kt)("h3",{id:"install-odin-tools-for-samsung--314"},"Install odin tools for Samsung >= 3.14"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://samsungodin.com/"},"https://samsungodin.com/")),(0,r.kt)("h3",{id:"install-samsung-driver"},"Install samsung driver"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://developer.samsung.com/android-usb-driver"},"https://developer.samsung.com/android-usb-driver")),(0,r.kt)("h3",{id:"install-adb"},"Install adb"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://developer.android.com/studio/releases/platform-tools"},"https://developer.android.com/studio/releases/platform-tools")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"adb reboot download\n")),(0,r.kt)("h3",{id:"download-twrp"},"Download TWRP"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.droidthunder.com/install-twrp-recovery-on-galaxy-A10/"},"https://www.droidthunder.com/install-twrp-recovery-on-galaxy-A10/"),"\n",(0,r.kt)("a",{parentName:"p",href:"https://twrp.me/samsung/samsunggalaxya10.html"},"https://twrp.me/samsung/samsunggalaxya10.html")),(0,r.kt)("h3",{id:"convert-it-to-md5"},"convert it to .md5"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.droidthunder.com/convert-img-to-tar-md5/"},"https://www.droidthunder.com/convert-img-to-tar-md5/")),(0,r.kt)("h3",{id:"run-odin-as-administrator"},"Run Odin as administrator"),(0,r.kt)("p",null,"follow the instructions\n",(0,r.kt)("a",{parentName:"p",href:"https://www.droidthunder.com/install-twrp-recovery-on-galaxy-A10/"},"https://www.droidthunder.com/install-twrp-recovery-on-galaxy-A10/")),(0,r.kt)("h2",{id:"docker"},"Docker"),(0,r.kt)("h3",{id:"installation"},"Installation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo pacman -S docker\nsudo usermod -aG docker $USER\nsudo systemctl restart docker\nsudo reboot\n")),(0,r.kt)("h3",{id:"enabling-disabling"},"Enabling, Disabling"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl enable containerd.service\nsudo systemctl enable docker.service\n\nsudo systemctl disable containerd.service\nsudo systemctl disable docker.service\n\nsudo systemctl start containerd.service\nsudo systemctl start docker.service\n\nsudo systemctl stop containerd.service\nsudo systemctl stop docker.service\n")),(0,r.kt)("h3",{id:"info"},"Info"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker info # docker info\n\ndocker COMMAND --help # command info, \ndocker ps --help \n")),(0,r.kt)("h3",{id:"listing"},"Listing"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Images\ndocker images -a\n# Containers\ndocker ps -a\n")),(0,r.kt)("h3",{id:"pulling"},"Pulling"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker pull ubuntu\ndocker pull ubuntu:14.04\n")),(0,r.kt)("h3",{id:"removing"},"Removing"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker rmi IMAGE_NAME\ndocker rm CONTAINER_NAME\n\ndocker system prune -a -f # To remove any unused image, container\ndocker system prune --volumes -f -a # also removing volumes\n")),(0,r.kt)("h3",{id:"running"},"Running"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker run IMAGE_NAME\n# check if there is a local image. if there is, will create a new container based on the local image and run it.\n# if not, will try to find and download the image from the hub.docker.com\n# Then will create a new container based on the downloaded image\n\ndocker start CONTAINER_NAME\n# start a container\n\ndocker stop CONTAINER_NAME\n# stop a container\n")),(0,r.kt)("h4",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -d --name cname -p 80:8080 hello-world\n# -d: detached, background\n# --name: container name\n# -p: map container port to os port\n# 80: OS port\n# 8080: container port\n# hello-world: Image Name\ndocker start cname\ndocker logs cname\n\ndocker run -it bash\ndocker run -it bash /usr/local/bin/bash \n# -it: interactive mode. it will open a terminal after running the container\n# /usr/local/bin/bash: the shell to open. if not specified the default path will be used\n# CTRL + D or exit: to close the bash and so the container\n# CTRL + P then CTRL + Q: to exit without stopping the container\n")),(0,r.kt)("h3",{id:"log"},"Log"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker logs CONTAINER_ID_OR_NAME\n")),(0,r.kt)("h3",{id:"build"},"Build"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker build --tag imageName:tag .\n")),(0,r.kt)("h3",{id:"other-commands"},"Other commands"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'docker exec -ti -u root CONTAINER_NAME bash\necho "nameserver 8.8.8.8" > /etc/resolv.conf\n')),(0,r.kt)("h3",{id:"8g-tmpfs"},"8G tmpFs"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"nano /etc/fstab\ntmpfs /tmp  tmpfs defaults,noatime,size=8G,mode=1777 0 0\n")))}u.isMDXComponent=!0}}]);